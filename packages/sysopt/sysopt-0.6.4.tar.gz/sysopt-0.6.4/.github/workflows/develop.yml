name: Tests

on:
  release:
    types: [created]
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r test-requirements.txt
            pip install -r requirements.txt
      - name: Linting with flake8
        run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  pytest:
    needs: flake8
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt 
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pytest tests --cov=sysopt --cov-report=xml --junitxml=junit/test-results.xml
  lint:
    runs-on: ubuntu-latest
    needs: flake8
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt
          pip install -r requirements.txt
      - name: Linting with pylint
        run: pylint --rcfile=pylintrc sysopt