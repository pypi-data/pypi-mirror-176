[testenv:bootstrap]
deps =
    jinja2
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    docs,
    {py38,py39,py310,py311},
    report
ignore_basepython_conflict = true

[testenv]
basepython =
    py38: {env:TOXPYTHON:python3.8}
    py39: {env:TOXPYTHON:python3.9}
    py310: {env:TOXPYTHON:python3.10}
    py311: {env:TOXPYTHON:python3.11}
    {bootstrap,clean,check,report,docs}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
usedevelop = false
deps =
    pytest
    pytest-cov
    -r{toxinidir}/tests/requirements.txt
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv}

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest --ignore .DS_Store {toxinidir}
    flake8
    isort --verbose --check-only --diff --filter-files .

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b doctest docs dist/docs
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:report]
deps =
    coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps =
    coverage

[flake8]
max-line-length = 100
extend-exclude =
    .ipynb_checkpoints
per-file-ignores =
    __init__.py:F401,
    reBin.py:E741
extend-ignore = E203

[pytest]
# If a pytest section is found in one of the possible config files
# (pytest.ini, tox.ini or setup.cfg), then pytest will not look for any others,
# so if you add a pytest config section elsewhere,
# you will need to delete this section from setup.cfg.
norecursedirs =
    migrations
minversion = 6.0
python_files =
    *.py # for doctests
    test_*.py
    *_test.py
    tests.py
addopts =
    -ra
    --strict-markers
    --doctest-modules
    --doctest-glob=\*.rst
    --tb=short
testpaths =
    src
    tests
# Idea from: https://til.simonwillison.net/pytest/treat-warnings-as-errors
filterwarnings =
    ignore::DeprecationWarning:distutils|notebook|_pytest
# You can add exclusions, some examples:
#    ignore:'jupyter_analysis_tools' defines default_app_config:PendingDeprecationWarning::
#    ignore:The {{% if:::
#    ignore:Coverage disabled via --no-cov switch!
