name: Manual PyPi Release

on:
  workflow_dispatch:
    inputs:
      package_repository:
        description: '"testpypi" or "pypi"'
        required: true

env:
  PYTHON_VERSION: '3.8.2'

jobs:
  testing:
    name: Test installed package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup caches
        uses: actions/cache@v2
        with:
          path: |
            ~/.local/share/virtualenvs
            ~/.cache/pre-commit
            ~/.cache/pip
          key: ${{ runner.os }}-${{ env.PYTHON_VERSION }}-venv-${{ hashFiles('**/Pipfile*') }}-${{ hashFiles('**/.pre-commit-config.yaml*') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.PYTHON_VERSION }}-venv

      - name: Install environment
        run: |
          pip install pipenv
          pipenv install --dev --deploy

      - name: Test installed package
        run: |
          pipenv run pip install .
          pipenv run pytest

  build:
    name: Build and release package
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup caches
        uses: actions/cache@v2
        with:
          path: |
            ~/.local/share/virtualenvs
            ~/.cache/pre-commit
            ~/.cache/pip
          key: ${{ runner.os }}-${{ env.PYTHON_VERSION }}-venv-${{ hashFiles('**/Pipfile*') }}-${{ hashFiles('**/.pre-commit-config.yaml*') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.PYTHON_VERSION }}-venv

      - name: Install pypa/build
        run: |
          pip install build
          python -m build

      - name: Publish on TestPyPi
        if: ${{ github.event.inputs.package_repository == 'testpypi' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish on PyPi
        if: ${{ github.event.inputs.package_repository == 'pypi' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
