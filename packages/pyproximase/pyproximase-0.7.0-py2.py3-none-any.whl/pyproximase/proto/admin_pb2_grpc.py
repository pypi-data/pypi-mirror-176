# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import admin_pb2 as proto_dot_admin__pb2
from proto import common_pb2 as proto_dot_common__pb2
from proto import proxima_se_pb2 as proto_dot_proxima__se__pb2


class ProximaDeAdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create_resource_group = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/create_resource_group',
                request_serializer=proto_dot_admin__pb2.ResourceGroupConfig.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Status.FromString,
                )
        self.update_resource_group = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/update_resource_group',
                request_serializer=proto_dot_admin__pb2.UpdateResourceGroupRequest.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Status.FromString,
                )
        self.drop_resource_group = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/drop_resource_group',
                request_serializer=proto_dot_admin__pb2.DropResourceGroupRequest.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Status.FromString,
                )
        self.describe_resource_group = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/describe_resource_group',
                request_serializer=proto_dot_admin__pb2.ResourceGroupName.SerializeToString,
                response_deserializer=proto_dot_admin__pb2.DescribeResourceGroupResponse.FromString,
                )
        self.create_collection = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/create_collection',
                request_serializer=proto_dot_proxima__se__pb2.CollectionConfig.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Status.FromString,
                )
        self.drop_collection = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/drop_collection',
                request_serializer=proto_dot_proxima__se__pb2.CollectionName.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Status.FromString,
                )
        self.describe_collection = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/describe_collection',
                request_serializer=proto_dot_proxima__se__pb2.CollectionName.SerializeToString,
                response_deserializer=proto_dot_proxima__se__pb2.DescribeCollectionResponse.FromString,
                )
        self.list_collections = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/list_collections',
                request_serializer=proto_dot_proxima__se__pb2.ListCondition.SerializeToString,
                response_deserializer=proto_dot_proxima__se__pb2.ListCollectionsResponse.FromString,
                )
        self.stats_collection = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/stats_collection',
                request_serializer=proto_dot_proxima__se__pb2.CollectionName.SerializeToString,
                response_deserializer=proto_dot_proxima__se__pb2.StatsCollectionResponse.FromString,
                )
        self.register_fe = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/register_fe',
                request_serializer=proto_dot_admin__pb2.RegisterFeRequest.SerializeToString,
                response_deserializer=proto_dot_admin__pb2.RegisterFeResponse.FromString,
                )
        self.register_se = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/register_se',
                request_serializer=proto_dot_admin__pb2.RegisterSeRequest.SerializeToString,
                response_deserializer=proto_dot_admin__pb2.RegisterSeResponse.FromString,
                )
        self.register_repo = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/register_repo',
                request_serializer=proto_dot_admin__pb2.RegisterRepoRequest.SerializeToString,
                response_deserializer=proto_dot_admin__pb2.RegisterRepoResponse.FromString,
                )
        self.get_collection_placement = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/get_collection_placement',
                request_serializer=proto_dot_proxima__se__pb2.CollectionName.SerializeToString,
                response_deserializer=proto_dot_admin__pb2.CollectionPlacementResponse.FromString,
                )
        self.heartbeat = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/heartbeat',
                request_serializer=proto_dot_admin__pb2.HeartbeatRequest.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Status.FromString,
                )
        self.cluster_status = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/cluster_status',
                request_serializer=proto_dot_admin__pb2.ClusterStatusRequest.SerializeToString,
                response_deserializer=proto_dot_admin__pb2.ClusterStatusResponse.FromString,
                )
        self.get_version = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/get_version',
                request_serializer=proto_dot_proxima__se__pb2.GetVersionRequest.SerializeToString,
                response_deserializer=proto_dot_proxima__se__pb2.GetVersionResponse.FromString,
                )
        self.notify_se_service_status = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/notify_se_service_status',
                request_serializer=proto_dot_admin__pb2.NotifySeAppliedIndexRequest.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Status.FromString,
                )
        self.notify_leader_start = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/notify_leader_start',
                request_serializer=proto_dot_admin__pb2.NotifyLeaderStartRequest.SerializeToString,
                response_deserializer=proto_dot_admin__pb2.NotifyLeaderStartResponse.FromString,
                )
        self.notify_update_single_shard_finished = channel.unary_unary(
                '/proxima.de.proto.ProximaDeAdminService/notify_update_single_shard_finished',
                request_serializer=proto_dot_admin__pb2.NotifyUpdateSingleShardFinishedRequest.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Status.FromString,
                )


class ProximaDeAdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def create_resource_group(self, request, context):
        """Create a ResourceGroup
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_resource_group(self, request, context):
        """Update a ResourceGroup
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def drop_resource_group(self, request, context):
        """Drop a ResourceGroup
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def describe_resource_group(self, request, context):
        """Get information of a ResourceGroup
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create_collection(self, request, context):
        """Create a collection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def drop_collection(self, request, context):
        """Drop a collection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def describe_collection(self, request, context):
        """Get information of a collection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list_collections(self, request, context):
        """Get all collection information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stats_collection(self, request, context):
        """Get collection statistics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def register_fe(self, request, context):
        """register service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def register_se(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def register_repo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_collection_placement(self, request, context):
        """Get collection placement
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def heartbeat(self, request, context):
        """Heartbeat
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cluster_status(self, request, context):
        """Get cluster status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_version(self, request, context):
        """Get server version
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def notify_se_service_status(self, request, context):
        """notify se replica's applied index by se
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def notify_leader_start(self, request, context):
        """Get necessary information when se raft group leader starts to updating replica (e.g. leader changed)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def notify_update_single_shard_finished(self, request, context):
        """Notify done signal when data of all se segments of some shard has been re-sharded
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProximaDeAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create_resource_group': grpc.unary_unary_rpc_method_handler(
                    servicer.create_resource_group,
                    request_deserializer=proto_dot_admin__pb2.ResourceGroupConfig.FromString,
                    response_serializer=proto_dot_common__pb2.Status.SerializeToString,
            ),
            'update_resource_group': grpc.unary_unary_rpc_method_handler(
                    servicer.update_resource_group,
                    request_deserializer=proto_dot_admin__pb2.UpdateResourceGroupRequest.FromString,
                    response_serializer=proto_dot_common__pb2.Status.SerializeToString,
            ),
            'drop_resource_group': grpc.unary_unary_rpc_method_handler(
                    servicer.drop_resource_group,
                    request_deserializer=proto_dot_admin__pb2.DropResourceGroupRequest.FromString,
                    response_serializer=proto_dot_common__pb2.Status.SerializeToString,
            ),
            'describe_resource_group': grpc.unary_unary_rpc_method_handler(
                    servicer.describe_resource_group,
                    request_deserializer=proto_dot_admin__pb2.ResourceGroupName.FromString,
                    response_serializer=proto_dot_admin__pb2.DescribeResourceGroupResponse.SerializeToString,
            ),
            'create_collection': grpc.unary_unary_rpc_method_handler(
                    servicer.create_collection,
                    request_deserializer=proto_dot_proxima__se__pb2.CollectionConfig.FromString,
                    response_serializer=proto_dot_common__pb2.Status.SerializeToString,
            ),
            'drop_collection': grpc.unary_unary_rpc_method_handler(
                    servicer.drop_collection,
                    request_deserializer=proto_dot_proxima__se__pb2.CollectionName.FromString,
                    response_serializer=proto_dot_common__pb2.Status.SerializeToString,
            ),
            'describe_collection': grpc.unary_unary_rpc_method_handler(
                    servicer.describe_collection,
                    request_deserializer=proto_dot_proxima__se__pb2.CollectionName.FromString,
                    response_serializer=proto_dot_proxima__se__pb2.DescribeCollectionResponse.SerializeToString,
            ),
            'list_collections': grpc.unary_unary_rpc_method_handler(
                    servicer.list_collections,
                    request_deserializer=proto_dot_proxima__se__pb2.ListCondition.FromString,
                    response_serializer=proto_dot_proxima__se__pb2.ListCollectionsResponse.SerializeToString,
            ),
            'stats_collection': grpc.unary_unary_rpc_method_handler(
                    servicer.stats_collection,
                    request_deserializer=proto_dot_proxima__se__pb2.CollectionName.FromString,
                    response_serializer=proto_dot_proxima__se__pb2.StatsCollectionResponse.SerializeToString,
            ),
            'register_fe': grpc.unary_unary_rpc_method_handler(
                    servicer.register_fe,
                    request_deserializer=proto_dot_admin__pb2.RegisterFeRequest.FromString,
                    response_serializer=proto_dot_admin__pb2.RegisterFeResponse.SerializeToString,
            ),
            'register_se': grpc.unary_unary_rpc_method_handler(
                    servicer.register_se,
                    request_deserializer=proto_dot_admin__pb2.RegisterSeRequest.FromString,
                    response_serializer=proto_dot_admin__pb2.RegisterSeResponse.SerializeToString,
            ),
            'register_repo': grpc.unary_unary_rpc_method_handler(
                    servicer.register_repo,
                    request_deserializer=proto_dot_admin__pb2.RegisterRepoRequest.FromString,
                    response_serializer=proto_dot_admin__pb2.RegisterRepoResponse.SerializeToString,
            ),
            'get_collection_placement': grpc.unary_unary_rpc_method_handler(
                    servicer.get_collection_placement,
                    request_deserializer=proto_dot_proxima__se__pb2.CollectionName.FromString,
                    response_serializer=proto_dot_admin__pb2.CollectionPlacementResponse.SerializeToString,
            ),
            'heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.heartbeat,
                    request_deserializer=proto_dot_admin__pb2.HeartbeatRequest.FromString,
                    response_serializer=proto_dot_common__pb2.Status.SerializeToString,
            ),
            'cluster_status': grpc.unary_unary_rpc_method_handler(
                    servicer.cluster_status,
                    request_deserializer=proto_dot_admin__pb2.ClusterStatusRequest.FromString,
                    response_serializer=proto_dot_admin__pb2.ClusterStatusResponse.SerializeToString,
            ),
            'get_version': grpc.unary_unary_rpc_method_handler(
                    servicer.get_version,
                    request_deserializer=proto_dot_proxima__se__pb2.GetVersionRequest.FromString,
                    response_serializer=proto_dot_proxima__se__pb2.GetVersionResponse.SerializeToString,
            ),
            'notify_se_service_status': grpc.unary_unary_rpc_method_handler(
                    servicer.notify_se_service_status,
                    request_deserializer=proto_dot_admin__pb2.NotifySeAppliedIndexRequest.FromString,
                    response_serializer=proto_dot_common__pb2.Status.SerializeToString,
            ),
            'notify_leader_start': grpc.unary_unary_rpc_method_handler(
                    servicer.notify_leader_start,
                    request_deserializer=proto_dot_admin__pb2.NotifyLeaderStartRequest.FromString,
                    response_serializer=proto_dot_admin__pb2.NotifyLeaderStartResponse.SerializeToString,
            ),
            'notify_update_single_shard_finished': grpc.unary_unary_rpc_method_handler(
                    servicer.notify_update_single_shard_finished,
                    request_deserializer=proto_dot_admin__pb2.NotifyUpdateSingleShardFinishedRequest.FromString,
                    response_serializer=proto_dot_common__pb2.Status.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proxima.de.proto.ProximaDeAdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProximaDeAdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def create_resource_group(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/create_resource_group',
            proto_dot_admin__pb2.ResourceGroupConfig.SerializeToString,
            proto_dot_common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_resource_group(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/update_resource_group',
            proto_dot_admin__pb2.UpdateResourceGroupRequest.SerializeToString,
            proto_dot_common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def drop_resource_group(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/drop_resource_group',
            proto_dot_admin__pb2.DropResourceGroupRequest.SerializeToString,
            proto_dot_common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def describe_resource_group(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/describe_resource_group',
            proto_dot_admin__pb2.ResourceGroupName.SerializeToString,
            proto_dot_admin__pb2.DescribeResourceGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def create_collection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/create_collection',
            proto_dot_proxima__se__pb2.CollectionConfig.SerializeToString,
            proto_dot_common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def drop_collection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/drop_collection',
            proto_dot_proxima__se__pb2.CollectionName.SerializeToString,
            proto_dot_common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def describe_collection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/describe_collection',
            proto_dot_proxima__se__pb2.CollectionName.SerializeToString,
            proto_dot_proxima__se__pb2.DescribeCollectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def list_collections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/list_collections',
            proto_dot_proxima__se__pb2.ListCondition.SerializeToString,
            proto_dot_proxima__se__pb2.ListCollectionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stats_collection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/stats_collection',
            proto_dot_proxima__se__pb2.CollectionName.SerializeToString,
            proto_dot_proxima__se__pb2.StatsCollectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def register_fe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/register_fe',
            proto_dot_admin__pb2.RegisterFeRequest.SerializeToString,
            proto_dot_admin__pb2.RegisterFeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def register_se(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/register_se',
            proto_dot_admin__pb2.RegisterSeRequest.SerializeToString,
            proto_dot_admin__pb2.RegisterSeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def register_repo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/register_repo',
            proto_dot_admin__pb2.RegisterRepoRequest.SerializeToString,
            proto_dot_admin__pb2.RegisterRepoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_collection_placement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/get_collection_placement',
            proto_dot_proxima__se__pb2.CollectionName.SerializeToString,
            proto_dot_admin__pb2.CollectionPlacementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/heartbeat',
            proto_dot_admin__pb2.HeartbeatRequest.SerializeToString,
            proto_dot_common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def cluster_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/cluster_status',
            proto_dot_admin__pb2.ClusterStatusRequest.SerializeToString,
            proto_dot_admin__pb2.ClusterStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_version(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/get_version',
            proto_dot_proxima__se__pb2.GetVersionRequest.SerializeToString,
            proto_dot_proxima__se__pb2.GetVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def notify_se_service_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/notify_se_service_status',
            proto_dot_admin__pb2.NotifySeAppliedIndexRequest.SerializeToString,
            proto_dot_common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def notify_leader_start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/notify_leader_start',
            proto_dot_admin__pb2.NotifyLeaderStartRequest.SerializeToString,
            proto_dot_admin__pb2.NotifyLeaderStartResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def notify_update_single_shard_finished(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxima.de.proto.ProximaDeAdminService/notify_update_single_shard_finished',
            proto_dot_admin__pb2.NotifyUpdateSingleShardFinishedRequest.SerializeToString,
            proto_dot_common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
