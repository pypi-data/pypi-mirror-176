# coding: utf-8

"""
    Collibra Search API

    <p>The Search API allows you to create your own integration with the Collibra Search Engine.<br /> Find your data!</p>  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import collibra_search
from collibra_search.models.search_view_paged_response import SearchViewPagedResponse  # noqa: E501
from collibra_search.rest import ApiException

class TestSearchViewPagedResponse(unittest.TestCase):
    """SearchViewPagedResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SearchViewPagedResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = collibra_search.models.search_view_paged_response.SearchViewPagedResponse()  # noqa: E501
        if include_optional :
            return SearchViewPagedResponse(
                total = 1000, 
                offset = 10, 
                limit = 100, 
                results = [
                    collibra_search.models.search_view.SearchView(
                        id = '0534b012-651a-468a-bded-eb52c78216f1', 
                        name = '0', 
                        description = '0', 
                        search_request = collibra_search.models.search_request.SearchRequest(
                            keywords = 'issue', 
                            search_in_fields = [
                                collibra_search.models.search_in_fields.SearchInFields(
                                    resource_type = 'Asset', 
                                    fields = ["name","StringAttribute:00000000-0000-0000-0000-000000007022"], )
                                ], 
                            filters = [
                                collibra_search.models.search_filter.SearchFilter(
                                    field = 'assetType', 
                                    values = ["00000000-0000-0000-0000-000000031112"], )
                                ], 
                            aggregations = [
                                collibra_search.models.search_aggregation.SearchAggregation(
                                    field = 'createdBy', 
                                    limit = 12, )
                                ], 
                            sort_field = 'RELEVANCE', 
                            sort_order = 'DESC', 
                            highlights = collibra_search.models.search_highlight.SearchHighlight(
                                pre_tag = '<strong>', 
                                post_tag = '</strong>', ), 
                            limit = 50, 
                            offset = 0, ), )
                    ]
            )
        else :
            return SearchViewPagedResponse(
        )

    def testSearchViewPagedResponse(self):
        """Test SearchViewPagedResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
