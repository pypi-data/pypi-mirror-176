# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import Optional

import betterproto

from ......config.core import v3 as _____config_core_v3__


@dataclass(eq=False, repr=False)
class GcpAuthnFilterConfig(betterproto.Message):
    """Filter configuration."""

    http_uri: "_____config_core_v3__.HttpUri" = betterproto.message_field(1)
    """
    The HTTP URI to fetch tokens from GCE Metadata
    Server(https://cloud.google.com/compute/docs/metadata/overview). The URL
    format is
    "http://metadata.google.internal/computeMetadata/v1/instance/service-
    accounts/default/identity?audience=[AUDIENCE]"
    """

    retry_policy: "_____config_core_v3__.RetryPolicy" = betterproto.message_field(2)
    """
    Retry policy for fetching tokens. This field is optional. If it is not
    configured, the filter will be fail-closed (i.e., reject the requests).
    """

    cache_config: "TokenCacheConfig" = betterproto.message_field(3)
    """Token cache configuration. This field is optional."""


@dataclass(eq=False, repr=False)
class Audience(betterproto.Message):
    """
    Audience is the URL of the receiving service that performs token
    authentication. It will be provided to the filter through cluster's
    typed_filter_metadata.
    """

    url: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class TokenCacheConfig(betterproto.Message):
    """Token Cache configuration."""

    cache_size: Optional[int] = betterproto.message_field(
        1, wraps=betterproto.TYPE_UINT64
    )
    """
    The number of cache entries. The maximum number of entries is INT64_MAX as
    it is constrained by underlying cache implementation. Default value 0
    (i.e., proto3 defaults) disables the cache by default. Other default values
    will enable the cache.
    """
