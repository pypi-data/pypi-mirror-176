{"version":3,"file":"js/module_events.creation.e42b61e1.bundle.js","mappings":"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","sources":["webpack:///indico/modules/events/client/js/creation.js"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2022 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\n/* global handleAjaxError:false */\n\nimport checkRoomAvailabilityURL from 'indico-url:rb.check_room_available';\nimport rbURL from 'indico-url:rb.roombooking';\n\nimport moment from 'moment';\n\nimport {camelizeKeys} from 'indico/utils/case';\n\n/* eslint-disable import/unambiguous */\n(function(global) {\n  global.setupEventCreationDialog = function setupEventCreationDialog(options) {\n    options = $.extend(\n      {\n        categoryField: null,\n        listingValue: null,\n        protectionModeFields: null,\n        initialCategory: null,\n        checkAvailability: false,\n        rbExcludedCategories: null,\n        serverDefaultTimezone: null,\n      },\n      options\n    );\n\n    const messages = $($.parseHTML($('#event-creation-protection-messages').html()));\n    const protectionMessage = $('<div>', {class: 'form-group', css: {marginTop: '5px'}});\n    const listingMessage = $($.parseHTML($('#event-listing-message').html()));\n\n    const $createBooking = $('#event-creation-create_booking');\n    const $availableMessage = $('#room-available');\n    const $availablePrebookMessage = $('#room-available-prebook');\n    const $conflictBookingMessage = $('#room-conflict-booking');\n    const $conflictPrebookingMessage = $('#room-conflict-prebooking');\n    const $conflictPrebookingPrebookMessage = $('#room-conflict-prebooking-prebook');\n    const $userBookingMessage = $('#room-user-booking');\n    const $userPrebookingMessage = $('#room-user-prebooking');\n    const $unbookableMessage = $('#room-unbookable');\n    const $cannotBookMessage = $('#room-cannot-book');\n    const $bookingSwitch = $('#create-booking');\n    const $prebookingSwitch = $('#create-prebooking');\n    const $bookingSwitchPrebooking = $('#create-booking-over-prebooking');\n    const $prebookingSwitchPrebooking = $('#create-prebooking-over-prebooking');\n    const $listingField = $('#event-creation-listing-checkbox');\n\n    let currentCategory = null;\n    let previousRoomId, $currentMessage, startDt, endDt, category, roomData, timezone;\n    let multipleOccurrences = false;\n\n    protectionMessage.appendTo(options.protectionModeFields.closest('.form-field'));\n    listingMessage.appendTo($listingField.closest('.form-field'));\n\n    function updateProtectionMessage() {\n      if (!currentCategory) {\n        protectionMessage.html('');\n        return;\n      }\n      let mode = options.protectionModeFields.filter(':checked').val();\n      if (mode === 'inheriting') {\n        mode = currentCategory.is_protected ? 'inheriting-protected' : 'inheriting-public';\n      }\n      const elem = messages.filter(`.${mode}-protection-message`);\n      elem.find('.js-category-title').text(currentCategory && currentCategory.title);\n      protectionMessage.html(elem);\n    }\n\n    function updateWarningMessage() {\n      $(`#category-warning-event-creation-category`).toggleClass(\n        'hidden',\n        (currentCategory && currentCategory.has_events) || !currentCategory\n      );\n    }\n\n    options.categoryField.on('indico:categorySelected', (evt, cat) => {\n      if (!currentCategory) {\n        options.protectionModeFields.filter('[value=inheriting]').prop('checked', true);\n      }\n      if (cat) {\n        options.protectionModeFields.prop('disabled', false);\n      } else {\n        options.protectionModeFields.prop('disabled', true);\n        options.protectionModeFields.filter('[value=inheriting]').prop('checked', true);\n      }\n      currentCategory = cat;\n      updateProtectionMessage();\n    });\n\n    $listingField.on('change', evt => {\n      const value = JSON.parse(evt.target.value);\n      if (value) {\n        $('#form-group-event-creation-category').show();\n        $('#form-group-event-creation-protection_mode').show();\n        options.categoryField.val(JSON.stringify(options.initialCategory));\n        options.categoryField.trigger('indico:categorySelected', [options.initialCategory]);\n        $('#category-title-event-creation-category').text(\n          options.initialCategory ? options.initialCategory.title : ''\n        );\n      } else {\n        $('#form-group-event-creation-category').hide();\n        $('#form-group-event-creation-protection_mode').hide();\n        options.categoryField.trigger('indico:categorySelected', []);\n      }\n\n      // update listing and warning message boxes\n      listingMessage.toggleClass('hidden', JSON.parse($listingField.val()));\n      updateWarningMessage();\n    });\n\n    options.protectionModeFields.on('change', function() {\n      updateProtectionMessage();\n    });\n\n    if (options.initialCategory) {\n      options.categoryField.trigger('indico:categorySelected', [options.initialCategory]);\n    } else {\n      options.protectionModeFields.prop('disabled', true);\n    }\n\n    function setLectureTimes(occurrence) {\n      startDt = moment(`${occurrence['date']} ${occurrence['time']}`, 'YYYY-MM-DD HH:mm');\n      endDt = moment(startDt).add(occurrence['duration'], 'minutes');\n    }\n\n    function initAvailabilityValues() {\n      const startDate = $('#event-creation-start_dt-datestorage').val();\n      const startTime = $('#event-creation-start_dt-timestorage').val();\n      const endDate = $('#event-creation-end_dt-datestorage').val();\n      const endTime = $('#event-creation-end_dt-timestorage').val();\n      const occurrencesVal = $('#event-creation-occurrences').val();\n      const occurrences = occurrencesVal ? JSON.parse(occurrencesVal) : null;\n\n      roomData = JSON.parse($('#event-creation-location_data').val());\n      timezone = $('#event-creation-timezone').val();\n      category = JSON.parse($('#event-creation-category').val());\n\n      if (occurrences && occurrences.length === 1) {\n        setLectureTimes(occurrences[0]);\n      } else {\n        startDt = moment(`${startDate} ${startTime}`, 'DD/MM/YYYY HH:mm');\n        endDt = moment(`${endDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n      }\n    }\n\n    function isCategoryExcluded(categoryId) {\n      return options.rbExcludedCategories.some(excludedCategory => {\n        return parseInt(excludedCategory.id, 10) === categoryId;\n      });\n    }\n\n    function addCalendarLink($message) {\n      const params = {\n        path: 'calendar',\n        date: startDt.format('YYYY-MM-DD'),\n        text: roomData['room_name'],\n      };\n      const url = rbURL(params);\n      $message.find('a').prop('href', url);\n    }\n\n    function hideAvailability(resetCheckbox) {\n      if ($currentMessage) {\n        if (resetCheckbox) {\n          $('#availability-messages')\n            .find(\"input[id^='create']\")\n            .prop('checked', false);\n          $createBooking.val('false');\n        }\n        $currentMessage.hide();\n      }\n    }\n\n    function updateAvailability(resetCheckbox = false) {\n      hideAvailability(resetCheckbox);\n\n      if (\n        !('room_id' in roomData) ||\n        !startDt.isValid() ||\n        !endDt.isValid() ||\n        !startDt.isSame(endDt, 'day') ||\n        startDt.isSameOrAfter(endDt) ||\n        isCategoryExcluded(category['id']) ||\n        timezone !== options.serverDefaultTimezone ||\n        multipleOccurrences\n      ) {\n        $createBooking.val('false');\n        return;\n      }\n\n      const requestParams = {\n        room_id: roomData['room_id'],\n        start_dt: startDt.format(moment.HTML5_FMT.DATETIME_LOCAL),\n        end_dt: endDt.format(moment.HTML5_FMT.DATETIME_LOCAL),\n      };\n\n      $.ajax({\n        url: checkRoomAvailabilityURL(requestParams),\n        method: 'GET',\n        dataType: 'json',\n        contentType: 'application/json',\n        error: handleAjaxError,\n        success(data) {\n          data = camelizeKeys(data);\n          if (data.userBooking) {\n            $createBooking.val('false');\n            $currentMessage = $userBookingMessage;\n            addCalendarLink($currentMessage);\n          } else if (data.userPrebooking) {\n            $createBooking.val('false');\n            $currentMessage = $userPrebookingMessage;\n            addCalendarLink($currentMessage);\n          } else if (data.conflictBooking) {\n            $createBooking.val('false');\n            $currentMessage = $conflictBookingMessage;\n            addCalendarLink($currentMessage);\n          } else if (data.unbookable) {\n            $createBooking.val('false');\n            $currentMessage = $unbookableMessage;\n            addCalendarLink($currentMessage);\n          } else if (data.conflictPrebooking) {\n            if (data.canBook) {\n              $createBooking.val(String($bookingSwitchPrebooking[0].checked));\n              $currentMessage = $conflictPrebookingMessage;\n              addCalendarLink($currentMessage);\n            } else if (data.canPrebook) {\n              $createBooking.val(String($prebookingSwitchPrebooking[0].checked));\n              $currentMessage = $conflictPrebookingPrebookMessage;\n              addCalendarLink($currentMessage);\n            } else {\n              $createBooking.val('false');\n              $currentMessage = $cannotBookMessage;\n            }\n          } else if (data.canBook) {\n            $createBooking.val(String($bookingSwitch[0].checked));\n            $currentMessage = $availableMessage;\n          } else if (data.canPrebook) {\n            $createBooking.val(String($prebookingSwitch[0].checked));\n            $currentMessage = $availablePrebookMessage;\n          } else {\n            $createBooking.val('false');\n            $currentMessage = $cannotBookMessage;\n          }\n          $currentMessage.show();\n        },\n      });\n    }\n\n    if (options.checkAvailability) {\n      initAvailabilityValues();\n\n      $('#event-creation-location_data').on('change', function() {\n        roomData = JSON.parse($(this).val());\n        if (previousRoomId !== roomData['room_id']) {\n          previousRoomId = roomData['room_id'];\n          updateAvailability(true);\n        }\n      });\n\n      $('#event-creation-start_dt-datestorage').on('change', function() {\n        const startDate = $(this).val();\n        const startTime = $('#event-creation-start_dt-timestorage').val();\n        const endDate = $('#event-creation-end_dt-datestorage').val();\n        const endTime = $('#event-creation-end_dt-timestorage').val();\n        startDt = moment(`${startDate} ${startTime}`, 'DD/MM/YYYY HH:mm');\n        endDt = moment(`${endDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n        // workaround for automatic end date update if start date is after end date\n        if (endDt.isBefore(startDt)) {\n          endDt = moment(`${startDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n        }\n        updateAvailability();\n      });\n\n      $('#event-creation-start_dt-timestorage').on('change', function() {\n        const startDate = $('#event-creation-start_dt-datestorage').val();\n        const startTime = $('#event-creation-start_dt-timestorage').val();\n        startDt = moment(`${startDate} ${startTime}`, 'DD/MM/YYYY HH:mm');\n        updateAvailability();\n      });\n\n      $('#event-creation-end_dt-datestorage').on('change', function() {\n        const endDate = $(this).val();\n        const endTime = $('#event-creation-end_dt-timestorage').val();\n        endDt = moment(`${endDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n        updateAvailability();\n      });\n\n      $('#event-creation-end_dt-timestorage').on('change', function() {\n        const endDate = $('#event-creation-end_dt-datestorage').val();\n        const endTime = $(this).val();\n        endDt = moment(`${endDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n        updateAvailability();\n      });\n\n      $('#event-creation-occurrences').on('change', function() {\n        const occurrences = JSON.parse($(this).val());\n        if (occurrences.length === 1) {\n          setLectureTimes(occurrences[0]);\n          multipleOccurrences = false;\n        } else {\n          multipleOccurrences = true;\n        }\n        updateAvailability();\n      });\n\n      $('#event-creation-timezone').on('change', function() {\n        timezone = $(this).val();\n        updateAvailability();\n      });\n\n      $('#event-creation-category').on('change', function() {\n        category = JSON.parse($(this).val());\n        updateAvailability();\n      });\n\n      $bookingSwitch\n        .add($prebookingSwitch)\n        .add($bookingSwitchPrebooking)\n        .add($prebookingSwitchPrebooking)\n        .on('change', function() {\n          $createBooking.val(String(this.checked));\n        });\n    }\n  };\n})(window);\n"],"names":["window","setupEventCreationDialog","options","$","extend","categoryField","listingValue","protectionModeFields","initialCategory","checkAvailability","rbExcludedCategories","serverDefaultTimezone","messages","parseHTML","html","protectionMessage","class","css","marginTop","listingMessage","$createBooking","$availableMessage","$availablePrebookMessage","$conflictBookingMessage","$conflictPrebookingMessage","$conflictPrebookingPrebookMessage","$userBookingMessage","$userPrebookingMessage","$unbookableMessage","$cannotBookMessage","$bookingSwitch","$prebookingSwitch","$bookingSwitchPrebooking","$prebookingSwitchPrebooking","$listingField","previousRoomId","$currentMessage","startDt","endDt","category","roomData","timezone","currentCategory","multipleOccurrences","updateProtectionMessage","mode","filter","val","is_protected","elem","find","text","title","setLectureTimes","occurrence","moment","add","isCategoryExcluded","categoryId","some","excludedCategory","parseInt","id","addCalendarLink","$message","params","path","date","format","url","rbURL","prop","hideAvailability","resetCheckbox","hide","updateAvailability","isValid","isSame","isSameOrAfter","requestParams","room_id","start_dt","end_dt","ajax","checkRoomAvailabilityURL","method","dataType","contentType","error","handleAjaxError","success","data","camelizeKeys","userBooking","userPrebooking","conflictBooking","unbookable","conflictPrebooking","canBook","String","checked","canPrebook","show","appendTo","closest","on","evt","cat","JSON","parse","target","value","stringify","trigger","toggleClass","has_events","startDate","startTime","endDate","endTime","occurrencesVal","occurrences","length","initAvailabilityValues","this","isBefore"],"sourceRoot":""}