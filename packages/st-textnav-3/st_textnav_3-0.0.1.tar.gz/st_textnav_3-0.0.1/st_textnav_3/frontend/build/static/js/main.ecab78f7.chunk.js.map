{"version":3,"sources":["TextNav.jsx","index.js"],"names":["TextNav","props","state","numClicks","isFocused","render","data","args","start_char","end_char","text","split","slice","join","className","id","ref","parentRef","onClick","executeScroll","map","el","indx","startRef","current","scrollIntoView","behavior","block","_onFocus","setState","inputRef","React","createRef","setTimeout","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"kQAaMA,G,YAAO,kDAEX,WAAYC,GAAQ,IAAD,EAIiB,OAJjB,qBACjB,cAAMA,IAFRC,MAAQ,CAAEC,UAAW,EAAGC,WAAW,GAAO,EA2B1CC,OAAS,WACP,IAAIC,EAAO,EAAKL,MAAMM,KAAW,KAC7BC,EAAa,EAAKP,MAAMM,KAAiB,WACzCE,EAAW,EAAKR,MAAMM,KAAe,SAErCG,EAAO,GAMX,OAFAA,EAAO,EALPJ,EAAOA,EAAKK,MAAM,MAEWC,MAAM,EAAGJ,GAAYK,KAAK,KACrCP,EAAKM,MAAMJ,EAAYC,GAAUI,KAAK,KACjCP,EAAKM,MAAMH,GAAUI,KAAK,MAI/C,yBAAKC,UAAU,sBAAsBC,GAAG,QAAQC,IAAK,EAAKC,WACxD,4BAAQC,QAAS,EAAKC,eAAc,WACpC,2BACGT,EAAKU,KAAI,SAACC,EAAIC,GACb,OAAgB,IAATA,EACL,0BAAMN,IAAK,EAAKO,SAAUT,UAAU,uBAAqB,UACnDO,IAGNA,EAAK,UAMhB,EAEDF,cAAgB,WACd,EAAKI,SAASC,QAAQC,eAAe,CACnCC,SAAU,SACVC,MAAO,WAKV,EAGDC,SAAW,WACT,EAAKC,SAAS,CAAEzB,WAAW,KAjE3B,EAAK0B,SAAWC,IAAMC,YACtB,EAAKT,SAAWQ,IAAMC,YACtB,EAAKf,UAAYc,IAAMC,YAAW,EAoBnC,OAlBA,8CACD,WAAqB,IAAD,OAClBC,YAAW,WACT,EAAKV,SAASC,QAAQC,eAAe,CACnCC,SAAU,SACVC,MAAO,YAGR,OACJ,gCAED,WAAsB,IAAD,OACnBM,YAAW,WACT,EAAKV,SAASC,QAAQC,eAAe,CACnCC,SAAU,SACVC,MAAO,YAER,SACJ,EA1BU,CAASO,MAyEPC,cAAwBnC,GClFvCoC,IAAS/B,OACP,kBAAC,IAAMgC,WAAU,KACf,kBAAC,EAAO,OAEVC,SAASC,eAAe,W","file":"static/js/main.ecab78f7.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\"\r\nimport React, { ReactNode, useEffect, useRef, useState } from \"react\"\r\nimport { spawn } from \"child_process\"\r\n\r\n/**\r\n * This is a React-based component template. The `render()` function is called\r\n * automatically when your component should be re-rendered.\r\n */\r\nclass TextNav extends StreamlitComponentBase {\r\n  state = { numClicks: 0, isFocused: false }\r\n  constructor(props) {\r\n    super(props)\r\n    this.inputRef = React.createRef()\r\n    this.startRef = React.createRef()\r\n    this.parentRef = React.createRef()\r\n    \r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.startRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n\r\n      })\r\n    }, 1000)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    setTimeout(() => {\r\n      this.startRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      })\r\n    }, 1000)\r\n  }\r\n\r\n  render = () => {\r\n    let data = this.props.args[\"text\"]\r\n    let start_char = this.props.args[\"start_char\"]\r\n    let end_char = this.props.args[\"end_char\"]\r\n    data = data.split(\" \")\r\n    let text = []\r\n    let beforeHighlightEl = data.slice(0, start_char).join(\" \")\r\n    let highlightEl = data.slice(start_char, end_char).join(\" \")\r\n    let afterHighlightEl = data.slice(end_char).join(\" \")\r\n    text = [beforeHighlightEl, highlightEl, afterHighlightEl]\r\n\r\n    return (\r\n      <div className=\"text-wall scrollbar\" id=\"style\" ref={this.parentRef}>\r\n        <button onClick={this.executeScroll}> scroll</button>\r\n        <p>\r\n          {text.map((el, indx) => {\r\n            return indx === 1 ? (\r\n              <span ref={this.startRef} className=\"highlighted-section\">\r\n                {`${el}`}\r\n              </span>\r\n            ) : (\r\n              el + \" \"\r\n            )\r\n          })}\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  executeScroll = () => {\r\n    this.startRef.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    })\r\n    // this.startRef.current.scrollTop=50\r\n    //this.startRef.current.scrollTo(0, 0)\r\n    // console.log( this.startRef.current.scrollTop,this.parentRef.current.offsetTop)\r\n  }\r\n\r\n  /** Focus handler for our \"Click Me!\" button. */\r\n  _onFocus = () => {\r\n    this.setState({ isFocused: true })\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(TextNav)\r\n\r\n\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport TextNav from './TextNav'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <TextNav />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}