# generated by datamodel-codegen:
#   filename:  openapi.json
#   timestamp: 2022-11-15T15:49:04+00:00

from __future__ import annotations

from typing import Any, Dict, List, Mapping, Optional, Sequence, Union

from typing_extensions import Literal

from kelvin.sdk.client.data_model import DataModelBase
from kelvin.sdk.client.utils import instance_classmethod

from . import errors, requests


class Cursor(DataModelBase):
    """
    Cursor object.

    Parameters
    ----------
    next_page: Optional[str]
    previous_page: Optional[str]

    """

    next_page: Optional[str] = None
    previous_page: Optional[str] = None


class CursorResponse(DataModelBase):
    """
    CursorResponse object.

    Parameters
    ----------
    cursor: Optional[Cursor]
    data: Optional[List[Dict[str, Any]]]

    """

    cursor: Optional[Cursor] = None
    data: Optional[List[Dict[str, Any]]] = None


class LimitsResponse(DataModelBase):
    """
    LimitsResponse object.

    Parameters
    ----------
    data: Optional[List[Dict[str, Any]]]
    page: Optional[int]
    page_size: Optional[int]
    total_pages: Optional[int]

    """

    data: Optional[List[Dict[str, Any]]] = None
    page: Optional[int] = None
    page_size: Optional[int] = None
    total_pages: Optional[int] = None


class StreamResponse(DataModelBase):
    """
    StreamResponse object.

    Parameters
    ----------
    data: Optional[List[Dict[str, Any]]]

    """

    data: Optional[List[Dict[str, Any]]] = None

    @classmethod
    def list_failure_overview(
        cls,
        type: Optional[str] = None,
        page_size: Optional[int] = 1000,
        page: Optional[int] = None,
        next: Optional[str] = None,
        previous: Optional[str] = None,
        direction: Optional[str] = None,
        sort_by: Optional[Sequence[str]] = None,
        data: Optional[Union[requests.FailureOverview, Mapping[str, Any]]] = None,
        _dry_run: bool = False,
        _client: Any = None,
        **kwargs: Any,
    ) -> StreamResponse:
        """
        List Failure Overview

        Returns a dictionary with a data property containing an array of failure overview summaries for <a href='https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset' target='_blank'>Kelvin Asset</a> objects that have failures recorded on the Kelvin Platform based on the filter requirements in the body parameters.

        This will summarize all failures on <a href='https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/' target='_blank'>Kelvin Assets</a> in the <a href='https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset-hierarchy' target='_blank'>hierarchy</a> of each <a href='https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset' target='_blank'>Kelvin Asset</a> and give the failure quotient per <a href='https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset' target='_blank'>Kelvin Asset</a>.

        **Pagination Sortable Columns:** `name`, `title`, `asset_type_name`, `asset_type_title`, `device_type_name`, `device_type_title`, `failure_quotient`, `severity`, `total_sev1`, `total_sev2`, `total_sev3`, `total_sev4`, `total_sev5`

        **Permission Required:** `kelvin.permission.asset.read`.

        ``listFailureOverview``: ``POST`` ``/api/v4/assets/failure-overview/list``

        Parameters
        ----------
        type : :obj:`str`
            Pagination types. Allowed values: cursor, limits and stream. Defaults
            to cursor
        page_size : :obj:`int`
            Desired page size. Defaults to 20
        page : :obj:`int`
            Desired page. Only valid for type=limits pagination
        next : :obj:`str`
            Retrieve next page. Only valid for type=cursor pagination
        previous : :obj:`str`
            Retrieve previous page. Only valid for type=cursor pagination
        direction : :obj:`str`
            Direction in which to sort the data. Defaults to asc
        sort_by : :obj:`Sequence[str]`
            Columns by which to sort the data
        data: requests.FailureOverview, optional
        **kwargs:
            Extra parameters for requests.FailureOverview
              - alarm_severities: list
              - asset_names: list
              - asset_type_names: list
              - map_names: list
              - parent_asset_name: str
              - search: list

        """

        result = cls._make_request(
            _client,
            "post",
            "/api/v4/assets/failure-overview/list",
            {},
            {
                "type": type,
                "page_size": page_size,
                "page": page,
                "next": next,
                "previous": previous,
                "direction": direction,
                "sort_by": sort_by,
            },
            {},
            {},
            data,
            requests.FailureOverview,
            False,
            {
                "200": StreamResponse,
                "400": errors.ErrorMessage,
                "401": errors.ErrorMessage,
                "404": errors.ErrorMessage,
                "412": errors.ErrorMessage,
            },
            False,
            _dry_run,
            kwargs,
        )
        return result
