{
  "license": "ISC", 
  "name": "0flux", 
  "repository": [
    {
      "url": "https://github.com/reissbaker/0flux.git", 
      "type": "git"
    }
  ], 
  "versions": {
    "0.0.4": {
      "license": "ISC", 
      "_id": "0flux@0.0.4", 
      "gitHead": "82663ce575af51bfee9b6a46d34c76b528759d3a", 
      "name": "0flux", 
      "repository": [
        {
          "url": "https://github.com/reissbaker/0flux.git", 
          "type": "git"
        }
      ], 
      "author": {
        "name": "Matt Baker"
      }, 
      "directories": {}, 
      "typings": "build/index.d.ts", 
      "maintainers": [
        {
          "name": "reissbaker", 
          "email": "matthew.reiss.baker@gmail.com"
        }
      ], 
      "_npmUser": {
        "name": "reissbaker", 
        "email": "matthew.reiss.baker@gmail.com"
      }, 
      "_nodeVersion": "4.2.2", 
      "_npmVersion": "3.4.1", 
      "version": "0.0.4", 
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      }, 
      "_shasum": "fd6307538e680617a520b3d28521bbc6979eaa01", 
      "dist": {
        "tarball": "http://registry.npmjs.org/0flux/-/0flux-0.0.4.tgz", 
        "shasum": "fd6307538e680617a520b3d28521bbc6979eaa01"
      }, 
      "_from": ".", 
      "main": "build/index.js", 
      "description": "Typed state management"
    }, 
    "0.0.1": {
      "license": "ISC", 
      "typescript": {
        "definition": "build/lib/gamekernel.d.ts"
      }, 
      "gitHead": "1c3b277743eb01c401582c754bda7bb1298df00d", 
      "name": "0flux", 
      "repository": [
        {
          "url": "https://github.com/reissbaker/0flux.git", 
          "type": "git"
        }
      ], 
      "author": {
        "name": "Matt Baker"
      }, 
      "directories": {}, 
      "maintainers": [
        {
          "name": "reissbaker", 
          "email": "matthew.reiss.baker@gmail.com"
        }
      ], 
      "_id": "0flux@0.0.1", 
      "_npmUser": {
        "name": "reissbaker", 
        "email": "matthew.reiss.baker@gmail.com"
      }, 
      "_nodeVersion": "4.2.2", 
      "_npmVersion": "3.4.1", 
      "version": "0.0.1", 
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      }, 
      "_shasum": "b7537784b444fdee22a631f12f2745b58cb758c2", 
      "dist": {
        "tarball": "http://registry.npmjs.org/0flux/-/0flux-0.0.1.tgz", 
        "shasum": "b7537784b444fdee22a631f12f2745b58cb758c2"
      }, 
      "_from": ".", 
      "main": "build/index.js", 
      "description": "Typed state management"
    }, 
    "0.0.3": {
      "license": "ISC", 
      "_id": "0flux@0.0.3", 
      "gitHead": "b4f31f6e62f1827c8cefba12389211b5866206aa", 
      "name": "0flux", 
      "repository": [
        {
          "url": "https://github.com/reissbaker/0flux.git", 
          "type": "git"
        }
      ], 
      "author": {
        "name": "Matt Baker"
      }, 
      "directories": {}, 
      "typings": "build/index.d.ts", 
      "maintainers": [
        {
          "name": "reissbaker", 
          "email": "matthew.reiss.baker@gmail.com"
        }
      ], 
      "_npmUser": {
        "name": "reissbaker", 
        "email": "matthew.reiss.baker@gmail.com"
      }, 
      "_nodeVersion": "4.2.2", 
      "_npmVersion": "3.4.1", 
      "version": "0.0.3", 
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      }, 
      "_shasum": "68cf8ae68c2c6280af69d8a152bdce88ccaaac29", 
      "dist": {
        "tarball": "http://registry.npmjs.org/0flux/-/0flux-0.0.3.tgz", 
        "shasum": "68cf8ae68c2c6280af69d8a152bdce88ccaaac29"
      }, 
      "_from": ".", 
      "main": "build/index.js", 
      "description": "Typed state management"
    }, 
    "0.0.2": {
      "license": "ISC", 
      "_id": "0flux@0.0.2", 
      "gitHead": "bcea414e2128cb37d704858814e3ec7f0d151b0d", 
      "name": "0flux", 
      "repository": [
        {
          "url": "https://github.com/reissbaker/0flux.git", 
          "type": "git"
        }
      ], 
      "author": {
        "name": "Matt Baker"
      }, 
      "directories": {}, 
      "typings": "build/lib/index.d.ts", 
      "maintainers": [
        {
          "name": "reissbaker", 
          "email": "matthew.reiss.baker@gmail.com"
        }
      ], 
      "_npmUser": {
        "name": "reissbaker", 
        "email": "matthew.reiss.baker@gmail.com"
      }, 
      "_nodeVersion": "4.2.2", 
      "_npmVersion": "3.4.1", 
      "version": "0.0.2", 
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      }, 
      "_shasum": "488ea61763f0cfc219336918e23df2ad6559ae51", 
      "dist": {
        "tarball": "http://registry.npmjs.org/0flux/-/0flux-0.0.2.tgz", 
        "shasum": "488ea61763f0cfc219336918e23df2ad6559ae51"
      }, 
      "_from": ".", 
      "main": "build/index.js", 
      "description": "Typed state management"
    }
  }, 
  "_rev": "4-a55c2688639aed12d043df63b58a00e7", 
  "time": {
    "0.0.4": "2015-12-07T01:50:13.902Z", 
    "0.0.1": "2015-12-05T08:49:15.485Z", 
    "0.0.3": "2015-12-05T10:05:34.745Z", 
    "0.0.2": "2015-12-05T10:02:26.097Z", 
    "created": "2015-12-05T08:49:15.485Z", 
    "modified": "2015-12-07T01:50:13.902Z"
  }, 
  "_attachments": {}, 
  "maintainers": [
    {
      "name": "reissbaker", 
      "email": "matthew.reiss.baker@gmail.com"
    }
  ], 
  "readmeFilename": "README.md", 
  "author": {
    "name": "Matt Baker"
  }, 
  "dist-tags": {
    "latest": "0.0.4"
  }, 
  "readme": "\u00d8 Flux\n================================================================================\n\nA small, typed state management library.\n\nExample:\n\n```typescript\n'use strict';\n\nimport * as Flux from '0flux';\n\ninterface TodoAction {\n  name: string;\n  id: number;\n}\n\nconst container = new Flux();\n\nconst dispatcher = {\n  addTodo: container.action<TodoAction>(),\n  removeTodo: container.action<TodoAction>(),\n};\n\ninterface State {\n  todos: TodoAction[];\n}\n\nconst todoState = container.state<State>((getState, setState) => {\n  dispatcher.addTodo.bind((todoAction) => {\n    setState({\n      todos: getState().todos.concat([ todoAction ])\n    });\n  });\n\n  dispatcher.removeTodo.bind((todoAction) => {\n    setState({\n      todos: getState().todos.filter((item) => {\n        return item.id !== todoAction.id;\n      })\n    });\n  });\n\n  return {\n    todos: []\n  };\n});\n\nconst julia = dispatcher.addTodo.dispatch({\n  id: 0,\n  name: 'julia'\n});\n\nconst clone = dispatcher.addTodo.dispatch({\n  id: 1,\n  name: 'evil julia clone'\n});\n\nconsole.log('evil clone detected:');\nconsole.log(todoState.current);\n\ndispatcher.removeTodo.dispatch(clone);\n\nconsole.log('evil clone eliminated:');\nconsole.log(todoState.current);\n```\n", 
  "_id": "0flux", 
  "description": "Typed state management"
}