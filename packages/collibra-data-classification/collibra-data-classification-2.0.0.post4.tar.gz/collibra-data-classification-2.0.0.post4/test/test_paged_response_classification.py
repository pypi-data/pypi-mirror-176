# coding: utf-8

"""
    Collibra Catalog classification API

    <p>The Catalog API offers functionality related to the catalog product.<br/> It is mainly focused on facilitating the ingestion of information into Catalog. The API enables users to more easily connect Catalog to sources that are not necessarily natively supported in the product. </p>  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import collibra_data_classification
from collibra_data_classification.models.paged_response_classification import PagedResponseClassification  # noqa: E501
from collibra_data_classification.rest import ApiException

class TestPagedResponseClassification(unittest.TestCase):
    """PagedResponseClassification unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PagedResponseClassification
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = collibra_data_classification.models.paged_response_classification.PagedResponseClassification()  # noqa: E501
        if include_optional :
            return PagedResponseClassification(
                total = 1000, 
                offset = 10, 
                limit = 100, 
                results = [
                    collibra_data_classification.models.classification.Classification(
                        id = '0', 
                        created_by = '4d250cc5-e583-4640-9874-b93d82c7a6cb', 
                        created_on = 1475503010320, 
                        last_modified_by = 'a073ff90-e7bc-4b35-ba90-c4d475f642fe', 
                        last_modified_on = 1476703764163, 
                        system = True, 
                        resource_type = 'View', 
                        name = 'Test name', )
                    ]
            )
        else :
            return PagedResponseClassification(
        )

    def testPagedResponseClassification(self):
        """Test PagedResponseClassification"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
