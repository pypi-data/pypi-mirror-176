{"version":3,"file":"chunks/app_components_modals_dashboardWidgetQuerySelectorModal_tsx-node_modules_lodash_cloneDeep_js--138e70.xxxxxxxxxxxxxxxxxxxx.js","mappings":"63BAgCA,MAAMA,UAA0CC,EAAAA,UAC9CC,gBACE,MAAM,aAACC,EAAY,OAAEC,EAAM,UAAEC,EAAS,cAAEC,GAAiBC,KAAKC,MAyC9D,OAxCwBJ,EAAOK,QAAQC,KAAI,CAACC,EAAOC,KACjD,MAAMC,GAAmBC,EAAAA,EAAAA,IACvB,IACKV,EACHK,QAAS,CAACE,IAEZN,EACAF,EACA,EACAG,GAEF,OACE,QAAC,EAAAS,SAAQ,WACP,QAACC,EAAc,YACb,QAACC,EAAS,YACR,QAACC,EAAW,CAACC,QAAQ,qBAAqB,cAAYC,EAAAA,EAAAA,GAAE,iBAAiB,UACvE,QAAC,KAAU,OAEb,QAACC,EAAW,CAACC,MAAOX,EAAMY,WAAYC,UAAQ,QAEhD,QAAC,EAAAC,KAAI,CAACC,GAAIb,EAAiB,UACzB,QAACc,EAAoB,CACnBC,SAAS,UACTC,MAAM,QAAC,KAAW,CAACC,KAAK,KAAKC,UAAU,UACvCC,QAAS,MACPC,EAAAA,EAAAA,GACE,2CACA,CACE9B,eACA+B,YAAa9B,EAAO+B,aAEvB,EAEH,cAAYf,EAAAA,EAAAA,GAAE,4BArBPR,EAyBJ,GAIjB,CAEAwB,SACE,MAAM,KAACC,EAAI,OAAEC,EAAM,OAAElC,GAAUG,KAAKC,MACpC,OACE,QAAC,EAAAO,SAAQ,YACP,QAACuB,EAAM,CAACC,aAAW,YACjB,uBAAKnC,EAAOoC,WAEd,QAACH,EAAI,YACH,uBACGjB,EAAAA,EAAAA,GACC,qHAGHb,KAAKL,qBAId,EA/DIF,EAAiC,gDAkEvC,MAAMqB,GAAc,OAAOoB,EAAAA,EAAK,qBAAZ,CAAa,iIAU3BzB,GAAiB,OAAO,MAAK,qBAAZ,CAAa,+BAEjB0B,EAAAA,EAAAA,GAAM,GAAE,KAErBf,GAAuB,OAAOgB,EAAAA,GAAM,qBAAb,CAAc,gBAC1BD,EAAAA,EAAAA,GAAM,GAAE,KAGnBzB,GAAY,OAAO,MAAK,qBAAZ,CAAa,qBACT2B,GAAKA,EAAEC,MAAMC,QAAM,sBACnBF,GAAKA,EAAEC,MAAME,iBAAe,gBAClCH,GAAKA,EAAEC,MAAMG,qBAAmB,iBAC/BN,EAAAA,EAAAA,GAAM,GAAE,0FAIhBA,EAAAA,EAAAA,GAAM,GAAE,iDAGEE,GAAKA,EAAEC,MAAMI,cAAY,KAGtC/B,GAAc,OAAO,QAAO,qBAAd,CAAe,yBAEtBwB,EAAAA,EAAAA,GAAM,IAAI,sBAEZE,GAAKA,EAAEC,MAAMK,SAAO,KAGlBC,EAAW,CAAH,oEAMrB,GAAeC,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,GAAgBrD,G,kDC/IvC,IAAIsD,EAAY,EAAQ,wCA4BxBC,EAAOC,QAJP,SAAmBlC,GACjB,OAAOgC,EAAUhC,EAAOmC,EAC1B,C,wCCFAF,EAAOC,QAJP,SAAelC,GACb,OAAgB,MAATA,CACT,C,iDCtBA,IAAIoC,EAAa,EAAQ,yCACrBC,EAAe,EAAQ,0CAoC3BJ,EAAOC,QALP,SAAkBlC,GAChB,MAAuB,iBAATA,GACXqC,EAAarC,IA9BF,mBA8BYoC,EAAWpC,EACvC,C","sources":["webpack:///./app/components/modals/dashboardWidgetQuerySelectorModal.tsx","webpack:///../node_modules/lodash/cloneDeep.js","webpack:///../node_modules/lodash/isNil.js","webpack:///../node_modules/lodash/isNumber.js"],"sourcesContent":["import {Component, Fragment} from 'react';\nimport {Link} from 'react-router';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport Input from 'sentry/components/input';\nimport {IconChevron, IconSearch} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport withApi from 'sentry/utils/withApi';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport {Widget} from 'sentry/views/dashboardsV2/types';\nimport {getWidgetDiscoverUrl} from 'sentry/views/dashboardsV2/utils';\n\nexport type DashboardWidgetQuerySelectorModalOptions = {\n  organization: Organization;\n  widget: Widget;\n  isMetricsData?: boolean;\n};\n\ntype Props = ModalRenderProps &\n  DashboardWidgetQuerySelectorModalOptions & {\n    api: Client;\n    organization: Organization;\n    selection: PageFilters;\n  };\n\nclass DashboardWidgetQuerySelectorModal extends Component<Props> {\n  renderQueries() {\n    const {organization, widget, selection, isMetricsData} = this.props;\n    const querySearchBars = widget.queries.map((query, index) => {\n      const discoverLocation = getWidgetDiscoverUrl(\n        {\n          ...widget,\n          queries: [query],\n        },\n        selection,\n        organization,\n        0,\n        isMetricsData\n      );\n      return (\n        <Fragment key={index}>\n          <QueryContainer>\n            <Container>\n              <SearchLabel htmlFor=\"smart-search-input\" aria-label={t('Search events')}>\n                <IconSearch />\n              </SearchLabel>\n              <StyledInput value={query.conditions} disabled />\n            </Container>\n            <Link to={discoverLocation}>\n              <OpenInDiscoverButton\n                priority=\"primary\"\n                icon={<IconChevron size=\"xs\" direction=\"right\" />}\n                onClick={() => {\n                  trackAdvancedAnalyticsEvent(\n                    'dashboards_views.query_selector.selected',\n                    {\n                      organization,\n                      widget_type: widget.displayType,\n                    }\n                  );\n                }}\n                aria-label={t('Open in Discover')}\n              />\n            </Link>\n          </QueryContainer>\n        </Fragment>\n      );\n    });\n    return querySearchBars;\n  }\n\n  render() {\n    const {Body, Header, widget} = this.props;\n    return (\n      <Fragment>\n        <Header closeButton>\n          <h4>{widget.title}</h4>\n        </Header>\n        <Body>\n          <p>\n            {t(\n              'Multiple queries were used to create this widget visualization. Which query would you like to view in Discover?'\n            )}\n          </p>\n          {this.renderQueries()}\n        </Body>\n      </Fragment>\n    );\n  }\n}\n\nconst StyledInput = styled(Input)`\n  text-overflow: ellipsis;\n  padding: 0px;\n  box-shadow: none;\n  height: auto;\n  &:disabled {\n    border: none;\n    cursor: default;\n  }\n`;\nconst QueryContainer = styled('div')`\n  display: flex;\n  margin-bottom: ${space(1)};\n`;\nconst OpenInDiscoverButton = styled(Button)`\n  margin-left: ${space(1)};\n`;\n\nconst Container = styled('div')`\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: inset ${p => p.theme.dropShadowLight};\n  background: ${p => p.theme.backgroundSecondary};\n  padding: 7px ${space(1)};\n  position: relative;\n  display: grid;\n  grid-template-columns: max-content 1fr max-content;\n  gap: ${space(1)};\n  align-items: start;\n  flex-grow: 1;\n  border-radius: ${p => p.theme.borderRadius};\n`;\n\nconst SearchLabel = styled('label')`\n  display: flex;\n  padding: ${space(0.5)} 0;\n  margin: 0;\n  color: ${p => p.theme.gray300};\n`;\n\nexport const modalCss = css`\n  width: 100%;\n  max-width: 700px;\n  margin: 70px auto;\n`;\n\nexport default withApi(withPageFilters(DashboardWidgetQuerySelectorModal));\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nmodule.exports = isNil;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n"],"names":["DashboardWidgetQuerySelectorModal","Component","renderQueries","organization","widget","selection","isMetricsData","this","props","queries","map","query","index","discoverLocation","getWidgetDiscoverUrl","Fragment","QueryContainer","Container","SearchLabel","htmlFor","t","StyledInput","value","conditions","disabled","Link","to","OpenInDiscoverButton","priority","icon","size","direction","onClick","trackAdvancedAnalyticsEvent","widget_type","displayType","render","Body","Header","closeButton","title","Input","space","Button","p","theme","border","dropShadowLight","backgroundSecondary","borderRadius","gray300","modalCss","withApi","withPageFilters","baseClone","module","exports","CLONE_DEEP_FLAG","baseGetTag","isObjectLike"],"sourceRoot":""}