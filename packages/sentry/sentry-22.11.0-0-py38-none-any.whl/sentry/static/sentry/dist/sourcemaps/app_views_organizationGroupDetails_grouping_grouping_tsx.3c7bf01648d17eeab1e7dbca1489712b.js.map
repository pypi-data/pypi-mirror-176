{"version":3,"file":"chunks/app_views_organizationGroupDetails_grouping_grouping_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/organizationGroupDetails/grouping/errorMessage.tsx","webpack:///./app/views/organizationGroupDetails/grouping/newIssue.tsx","webpack:///./app/views/organizationGroupDetails/grouping/grouping.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport LoadingError from 'sentry/components/loadingError';\nimport {Panel} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {Group, Organization, Project} from 'sentry/types';\n\ntype ErrorCode =\n  | 'issue_not_hierarchical'\n  | 'project_not_hierarchical'\n  | 'no_events'\n  | 'merged_issues'\n  | 'missing_feature';\n\ntype Error = {\n  status: number;\n  responseJSON?: {\n    detail: {\n      code: ErrorCode;\n      extra: Record<string, any>;\n      message: string;\n    };\n  };\n};\n\ntype Props = {\n  error: Error | string;\n  groupId: Group['id'];\n  hasProjectWriteAccess: boolean;\n  onRetry: () => void;\n  orgSlug: Organization['slug'];\n  projSlug: Project['slug'];\n  className?: string;\n};\n\nfunction ErrorMessage({\n  error,\n  groupId,\n  onRetry,\n  orgSlug,\n  projSlug,\n  hasProjectWriteAccess,\n  className,\n}: Props) {\n  function getErrorDetails(errorCode: ErrorCode) {\n    switch (errorCode) {\n      case 'merged_issues':\n        return {\n          title: t('Grouping breakdown is not available in this issue'),\n          subTitle: t(\n            'This issue needs to be fully unmerged before grouping breakdown is available'\n          ),\n          action: (\n            <Button\n              priority=\"primary\"\n              to={`/organizations/${orgSlug}/issues/${groupId}/merged/?${location.search}`}\n            >\n              {t('Unmerge issue')}\n            </Button>\n          ),\n        };\n      case 'missing_feature':\n        return {\n          title: t(\n            'This project does not have the grouping breakdown available. Is your organization still an early adopter?'\n          ),\n        };\n\n      case 'no_events':\n        return {\n          title: t('This issue has no events'),\n        };\n      case 'issue_not_hierarchical':\n        return {\n          title: t('Grouping breakdown is not available in this issue'),\n          subTitle: t(\n            'Only new issues with the latest grouping strategy have this feature available'\n          ),\n        };\n      case 'project_not_hierarchical':\n        return {\n          title: (\n            <Fragment>\n              {t('Update your Grouping Config')}\n              <FeatureBadge type=\"beta\" />\n            </Fragment>\n          ),\n          subTitle: (\n            <Fragment>\n              <p>\n                {t(\n                  'Enable advanced grouping insights and functionality by updating this project to the latest Grouping Config:'\n                )}\n              </p>\n\n              <ul>\n                <li>\n                  {tct(\n                    '[strong:Breakdowns:] Explore events in this issue by call hierarchy.',\n                    {strong: <strong />}\n                  )}\n                </li>\n                <li>\n                  {tct(\n                    '[strong:Stack trace annotations:] See important frames Sentry uses to group issues directly in the stack trace.',\n                    {strong: <strong />}\n                  )}\n                </li>\n              </ul>\n            </Fragment>\n          ),\n          leftAligned: true,\n          action: (\n            <ButtonBar gap={1}>\n              <Button\n                priority=\"primary\"\n                to={`/settings/${orgSlug}/projects/${projSlug}/issue-grouping/#upgrade-grouping`}\n                disabled={!hasProjectWriteAccess}\n                title={\n                  !hasProjectWriteAccess\n                    ? t('You do not have permission to update this project')\n                    : undefined\n                }\n              >\n                {t('Upgrade Grouping Strategy')}\n              </Button>\n              <Button href=\"https://docs.sentry.io/product/data-management-settings/event-grouping/grouping-breakdown/\">\n                {t('Read the docs')}\n              </Button>\n            </ButtonBar>\n          ),\n        };\n      default:\n        return {};\n    }\n  }\n\n  if (typeof error === 'string') {\n    return (\n      <Alert type=\"warning\" className={className}>\n        {error}\n      </Alert>\n    );\n  }\n\n  if (error.status === 403 && error.responseJSON?.detail) {\n    const {code, message} = error.responseJSON.detail;\n    const {action, title, subTitle, leftAligned} = getErrorDetails(code);\n\n    return (\n      <Panel className={className}>\n        <EmptyMessage\n          size=\"large\"\n          title={title ?? message}\n          description={subTitle}\n          action={action}\n          leftAligned={leftAligned}\n        />\n      </Panel>\n    );\n  }\n\n  return (\n    <LoadingError\n      message={t('Unable to load grouping levels, please try again later')}\n      onRetry={onRetry}\n      className={className}\n    />\n  );\n}\n\nexport default ErrorMessage;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport EventOrGroupHeader from 'sentry/components/eventOrGroupHeader';\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconClock} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\ntype Props = {\n  eventCount: number;\n  organization: Organization;\n  sampleEvent: Event;\n};\n\nfunction NewIssue({sampleEvent, eventCount, organization}: Props) {\n  return (\n    <Fragment>\n      <EventDetails>\n        <EventOrGroupHeader\n          data={sampleEvent}\n          organization={organization}\n          grouping\n          hideIcons\n          hideLevel\n          source=\"new-issue\"\n        />\n        <ExtraInfo>\n          <TimeWrapper>\n            <StyledIconClock size=\"11px\" />\n            <TimeSince\n              date={\n                sampleEvent.dateCreated\n                  ? sampleEvent.dateCreated\n                  : sampleEvent.dateReceived\n              }\n              suffix={t('old')}\n            />\n          </TimeWrapper>\n        </ExtraInfo>\n      </EventDetails>\n      <EventCount>{eventCount}</EventCount>\n    </Fragment>\n  );\n}\n\nexport default NewIssue;\n\nconst EventDetails = styled('div')`\n  overflow: hidden;\n  line-height: 1.1;\n`;\n\nconst ExtraInfo = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(2)};\n  justify-content: flex-start;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: max-content 1fr;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst EventCount = styled('div')`\n  align-items: center;\n  font-variant-numeric: tabular-nums;\n  line-height: 1.1;\n`;\n\nconst StyledIconClock = styled(IconClock)`\n  color: ${p => p.theme.subText};\n`;\n","import {Fragment, useEffect, useState} from 'react';\nimport {browserHistory, InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport debounce from 'lodash/debounce';\n\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {FeatureFeedback} from 'sentry/components/featureFeedback';\nimport RangeSlider from 'sentry/components/forms/controls/rangeSlider';\nimport Slider from 'sentry/components/forms/controls/rangeSlider/slider';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {BaseGroup, Group, Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport withApi from 'sentry/utils/withApi';\n\nimport ErrorMessage from './errorMessage';\nimport NewIssue from './newIssue';\n\ntype Error = React.ComponentProps<typeof ErrorMessage>['error'];\n\ntype Props = {\n  api: Client;\n  groupId: Group['id'];\n  location: Location<{cursor?: string; level?: number}>;\n  organization: Organization;\n  projSlug: Project['slug'];\n  router: InjectedRouter;\n};\n\ntype GroupingLevelDetails = Partial<Pick<BaseGroup, 'title' | 'metadata'>> & {\n  eventCount: number;\n  hash: string;\n  latestEvent: BaseGroup['latestEvent'];\n};\n\ntype GroupingLevel = {\n  id: number;\n  isCurrent: boolean;\n};\n\nexport const groupingFeedbackTypes = [\n  t('Too eager grouping'),\n  t('Too specific grouping'),\n  t('Other grouping issue'),\n];\n\nconst GROUPING_BREAKDOWN__DOC_LINK =\n  'https://docs.sentry.io/product/data-management-settings/event-grouping/grouping-breakdown/';\n\nfunction Grouping({api, groupId, location, organization, router, projSlug}: Props) {\n  const {cursor, level} = location.query;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGroupingLevelDetailsLoading, setIsGroupingLevelDetailsLoading] =\n    useState(false);\n  const [error, setError] = useState<undefined | Error | string>(undefined);\n  const [groupingLevels, setGroupingLevels] = useState<GroupingLevel[]>([]);\n  const [activeGroupingLevel, setActiveGroupingLevel] = useState<number | undefined>(\n    undefined\n  );\n  const [activeGroupingLevelDetails, setActiveGroupingLevelDetails] = useState<\n    GroupingLevelDetails[]\n  >([]);\n\n  const [pagination, setPagination] = useState('');\n\n  useEffect(() => {\n    fetchGroupingLevels();\n    return browserHistory.listen(handleRouteLeave);\n  }, []);\n\n  useEffect(() => {\n    setSecondGrouping();\n  }, [groupingLevels]);\n\n  useEffect(() => {\n    updateUrlWithNewLevel();\n  }, [activeGroupingLevel]);\n\n  useEffect(() => {\n    fetchGroupingLevelDetails();\n  }, [activeGroupingLevel, cursor]);\n\n  function handleRouteLeave(newLocation: Location<{cursor?: string; level?: number}>) {\n    if (\n      newLocation.pathname === location.pathname ||\n      (newLocation.pathname !== location.pathname &&\n        newLocation.query.cursor === undefined &&\n        newLocation.query.level === undefined)\n    ) {\n      return true;\n    }\n\n    // Removes cursor and level from the URL on route leave\n    // so that the parameters will not interfere with other pages\n    browserHistory.replace({\n      pathname: newLocation.pathname,\n      query: {\n        ...newLocation.query,\n        cursor: undefined,\n        level: undefined,\n      },\n    });\n\n    return false;\n  }\n\n  const handleSetActiveGroupingLevel = debounce((groupingLevelId: number | '') => {\n    setActiveGroupingLevel(Number(groupingLevelId));\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  async function fetchGroupingLevels() {\n    setIsLoading(true);\n    setError(undefined);\n    try {\n      const response = await api.requestPromise(`/issues/${groupId}/grouping/levels/`);\n      setIsLoading(false);\n      setGroupingLevels(response.levels);\n    } catch (err) {\n      setIsLoading(false);\n      setError(err);\n    }\n  }\n\n  async function fetchGroupingLevelDetails() {\n    if (!groupingLevels.length || !defined(activeGroupingLevel)) {\n      return;\n    }\n\n    setIsGroupingLevelDetailsLoading(true);\n    setError(undefined);\n\n    try {\n      const [data, , resp] = await api.requestPromise(\n        `/issues/${groupId}/grouping/levels/${activeGroupingLevel}/new-issues/`,\n        {\n          method: 'GET',\n          includeAllArgs: true,\n          query: {\n            ...location.query,\n            per_page: 10,\n          },\n        }\n      );\n\n      const pageLinks = resp?.getResponseHeader?.('Link');\n      setPagination(pageLinks ?? '');\n      setActiveGroupingLevelDetails(Array.isArray(data) ? data : [data]);\n      setIsGroupingLevelDetailsLoading(false);\n    } catch (err) {\n      setIsGroupingLevelDetailsLoading(false);\n      setError(err);\n    }\n  }\n\n  function updateUrlWithNewLevel() {\n    if (!defined(activeGroupingLevel) || level === activeGroupingLevel) {\n      return;\n    }\n\n    router.replace({\n      pathname: location.pathname,\n      query: {...location.query, cursor: undefined, level: activeGroupingLevel},\n    });\n  }\n\n  function setSecondGrouping() {\n    if (!groupingLevels.length) {\n      return;\n    }\n\n    if (defined(level)) {\n      if (!defined(groupingLevels[level])) {\n        setError(t('The level you were looking for was not found.'));\n        return;\n      }\n\n      if (level === activeGroupingLevel) {\n        return;\n      }\n\n      setActiveGroupingLevel(level);\n      return;\n    }\n\n    if (groupingLevels.length > 1) {\n      setActiveGroupingLevel(groupingLevels[1].id);\n      return;\n    }\n\n    setActiveGroupingLevel(groupingLevels[0].id);\n  }\n\n  if (isLoading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return (\n      <Fragment>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <ErrorWrapper>\n              <ButtonBar gap={1}>\n                <Button href={GROUPING_BREAKDOWN__DOC_LINK} external>\n                  {t('Read Docs')}\n                </Button>\n                <FeatureFeedback\n                  featureName=\"grouping\"\n                  feedbackTypes={groupingFeedbackTypes}\n                />\n              </ButtonBar>\n              <StyledErrorMessage\n                onRetry={fetchGroupingLevels}\n                groupId={groupId}\n                error={error}\n                projSlug={projSlug}\n                orgSlug={organization.slug}\n                hasProjectWriteAccess={organization.access.includes('project:write')}\n              />\n            </ErrorWrapper>\n          </Layout.Main>\n        </Layout.Body>\n      </Fragment>\n    );\n  }\n\n  if (!activeGroupingLevelDetails.length) {\n    return <LoadingIndicator />;\n  }\n\n  const links = parseLinkHeader(pagination);\n  const hasMore = links.previous?.results || links.next?.results;\n  const paginationCurrentQuantity = activeGroupingLevelDetails.length;\n\n  return (\n    <Layout.Body>\n      <Layout.Main fullWidth>\n        <Wrapper>\n          <Header>\n            {t(\n              'This issue is an aggregate of multiple events that sentry determined originate from the same root-cause. Use this page to explore more detailed groupings that exist within this issue.'\n            )}\n          </Header>\n          <Body>\n            <Actions>\n              <SliderWrapper>\n                {t('Fewer issues')}\n                <StyledRangeSlider\n                  name=\"grouping-level\"\n                  allowedValues={groupingLevels.map(groupingLevel =>\n                    Number(groupingLevel.id)\n                  )}\n                  value={activeGroupingLevel ?? 0}\n                  onChange={handleSetActiveGroupingLevel}\n                  showLabel={false}\n                />\n                {t('More issues')}\n              </SliderWrapper>\n              <StyledButtonBar gap={1}>\n                <Button href={GROUPING_BREAKDOWN__DOC_LINK} external>\n                  {t('Read Docs')}\n                </Button>\n                <FeatureFeedback\n                  featureName=\"grouping\"\n                  feedbackTypes={groupingFeedbackTypes}\n                />\n              </StyledButtonBar>\n            </Actions>\n            <Content isReloading={isGroupingLevelDetailsLoading}>\n              <StyledPanelTable headers={['', t('Events')]}>\n                {activeGroupingLevelDetails.map(\n                  ({hash, title, metadata, latestEvent, eventCount}) => {\n                    // XXX(markus): Ugly hack to make NewIssue show the right things.\n                    return (\n                      <NewIssue\n                        key={hash}\n                        sampleEvent={{\n                          ...latestEvent,\n                          metadata: {\n                            ...(metadata || latestEvent.metadata),\n                            current_level: activeGroupingLevel,\n                          },\n                          title: title || latestEvent.title,\n                        }}\n                        eventCount={eventCount}\n                        organization={organization}\n                      />\n                    );\n                  }\n                )}\n              </StyledPanelTable>\n              <StyledPagination\n                pageLinks={pagination}\n                disabled={isGroupingLevelDetailsLoading}\n                caption={tct('Showing [current] of [total] [result]', {\n                  result: hasMore\n                    ? t('results')\n                    : tn('result', 'results', paginationCurrentQuantity),\n                  current: paginationCurrentQuantity,\n                  total: hasMore\n                    ? `${paginationCurrentQuantity}+`\n                    : paginationCurrentQuantity,\n                })}\n              />\n            </Content>\n          </Body>\n        </Wrapper>\n      </Layout.Main>\n    </Layout.Body>\n  );\n}\n\nexport default withApi(Grouping);\n\nconst Wrapper = styled('div')`\n  flex: 1;\n  display: grid;\n  align-content: flex-start;\n  margin: -${space(3)} -${space(4)};\n  padding: ${space(3)} ${space(4)};\n`;\n\nconst Header = styled('p')`\n  && {\n    margin-bottom: ${space(2)};\n  }\n`;\n\nconst Body = styled('div')`\n  display: grid;\n  gap: ${space(3)};\n`;\n\nconst Actions = styled('div')`\n  display: grid;\n  align-items: center;\n  gap: ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: 1fr max-content;\n    gap: ${space(2)};\n  }\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  justify-content: flex-start;\n`;\n\nconst StyledErrorMessage = styled(ErrorMessage)`\n  width: 100%;\n`;\n\nconst ErrorWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: ${space(1)};\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: 1fr minmax(60px, auto);\n  > * {\n    padding: ${space(1.5)} ${space(2)};\n    :nth-child(-n + 2) {\n      padding: ${space(2)};\n    }\n    :nth-child(2n) {\n      display: flex;\n      text-align: right;\n      justify-content: flex-end;\n    }\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: 1fr minmax(80px, auto);\n  }\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin-top: 0;\n`;\n\nconst Content = styled('div')<{isReloading: boolean}>`\n  ${p =>\n    p.isReloading &&\n    `\n      ${StyledPanelTable}, ${StyledPagination} {\n        opacity: 0.5;\n        pointer-events: none;\n      }\n    `}\n`;\n\nconst SliderWrapper = styled('div')`\n  display: grid;\n  gap: ${space(1.5)};\n  grid-template-columns: max-content max-content;\n  justify-content: space-between;\n  align-items: flex-start;\n  position: relative;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n  padding-bottom: ${space(2)};\n\n  @media (min-width: 700px) {\n    grid-template-columns: max-content minmax(270px, auto) max-content;\n    align-items: center;\n    justify-content: flex-start;\n    padding-bottom: 0;\n  }\n`;\n\nconst StyledRangeSlider = styled(RangeSlider)`\n  ${Slider} {\n    background: transparent;\n    margin-top: 0;\n    margin-bottom: 0;\n\n    ::-ms-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n\n    ::-moz-range-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n\n    ::-webkit-slider-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n  }\n\n  position: absolute;\n  bottom: 0;\n  left: ${space(1.5)};\n  right: ${space(1.5)};\n\n  @media (min-width: 700px) {\n    position: static;\n    left: auto;\n    right: auto;\n  }\n`;\n"],"names":["ErrorMessage","error","groupId","onRetry","orgSlug","projSlug","hasProjectWriteAccess","className","type","status","responseJSON","detail","code","message","action","title","subTitle","leftAligned","errorCode","t","priority","to","location","search","Fragment","tct","strong","gap","disabled","undefined","href","getErrorDetails","size","description","NewIssue","sampleEvent","eventCount","organization","EventDetails","data","grouping","hideIcons","hideLevel","source","ExtraInfo","TimeWrapper","StyledIconClock","date","dateCreated","dateReceived","suffix","EventCount","space","p","theme","fontSizeSmall","IconClock","subText","groupingFeedbackTypes","GROUPING_BREAKDOWN__DOC_LINK","Grouping","api","router","cursor","level","query","isLoading","setIsLoading","useState","isGroupingLevelDetailsLoading","setIsGroupingLevelDetailsLoading","setError","groupingLevels","setGroupingLevels","activeGroupingLevel","setActiveGroupingLevel","activeGroupingLevelDetails","setActiveGroupingLevelDetails","pagination","setPagination","handleRouteLeave","newLocation","pathname","browserHistory","useEffect","fetchGroupingLevels","length","defined","id","setSecondGrouping","replace","async","resp","requestPromise","method","includeAllArgs","per_page","pageLinks","getResponseHeader","Array","isArray","err","fetchGroupingLevelDetails","handleSetActiveGroupingLevel","debounce","groupingLevelId","Number","DEFAULT_DEBOUNCE_DURATION","response","levels","fullWidth","ErrorWrapper","external","featureName","feedbackTypes","StyledErrorMessage","slug","access","includes","links","parseLinkHeader","hasMore","previous","results","next","paginationCurrentQuantity","Wrapper","Header","Body","Actions","SliderWrapper","StyledRangeSlider","name","allowedValues","map","groupingLevel","value","onChange","showLabel","StyledButtonBar","Content","isReloading","StyledPanelTable","headers","hash","metadata","latestEvent","current_level","StyledPagination","caption","result","tn","current","total","withApi","breakpoints","small","ButtonBar","PanelTable","xlarge","Pagination","fontSizeMedium","RangeSlider","Slider","backgroundSecondary"],"sourceRoot":""}