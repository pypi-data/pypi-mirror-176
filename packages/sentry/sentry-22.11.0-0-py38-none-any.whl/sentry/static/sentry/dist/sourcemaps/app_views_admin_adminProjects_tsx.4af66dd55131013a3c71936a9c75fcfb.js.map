{"version":3,"file":"chunks/app_views_admin_adminProjects_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/dropdownLink.tsx","webpack:///./app/components/resultGrid.tsx","webpack:///./app/views/admin/adminProjects.tsx","webpack:///./app/views/asyncView.tsx"],"sourcesContent":["import {css, useTheme} from '@emotion/react';\nimport classNames from 'classnames';\n\nimport DeprecatedDropdownMenu from 'sentry/components/deprecatedDropdownMenu';\nimport {IconChevron} from 'sentry/icons';\nimport {Theme} from 'sentry/utils/theme';\n\nconst getRootCss = (theme: Theme) => css`\n  .dropdown-menu {\n    & > li > a {\n      color: ${theme.textColor};\n\n      &:hover,\n      &:focus {\n        color: inherit;\n        background-color: ${theme.hover};\n      }\n    }\n\n    & .disabled {\n      cursor: not-allowed;\n      &:hover {\n        background: inherit;\n        color: inherit;\n      }\n    }\n  }\n\n  .dropdown-submenu:hover > span {\n    color: ${theme.textColor};\n    background: ${theme.hover};\n  }\n`;\n\n// .dropdown-actor-title = flexbox to fix vertical alignment on firefox Need\n// the extra container because dropdown-menu alignment is off if\n// `dropdown-actor` is a flexbox\n\ntype Props = Omit<\n  Omit<DeprecatedDropdownMenu['props'], 'children'>,\n  keyof typeof DeprecatedDropdownMenu.defaultProps\n> &\n  Partial<typeof DeprecatedDropdownMenu.defaultProps> & {\n    children: React.ReactNode;\n    /**\n     * Always render children of dropdown menu, this is included to support menu\n     * items that open a confirm modal. Otherwise when dropdown menu hides, the\n     * modal also gets unmounted\n     */\n    alwaysRenderMenu?: boolean;\n    anchorMiddle?: boolean;\n    /**\n     * Anchors menu to the right\n     */\n    anchorRight?: boolean;\n    /**\n     * display dropdown caret\n     */\n    caret?: boolean;\n    className?: string;\n    customTitle?: React.ReactNode;\n    disabled?: boolean;\n    menuClasses?: string;\n    title?: React.ReactNode;\n    topLevelClasses?: string;\n  };\n\nfunction DropdownLink({\n  anchorMiddle,\n  title,\n  customTitle,\n  children,\n  menuClasses,\n  className,\n  topLevelClasses,\n  anchorRight = false,\n  disabled = false,\n  caret = true,\n  alwaysRenderMenu = true,\n  ...otherProps\n}: Props) {\n  const theme = useTheme();\n\n  return (\n    <DeprecatedDropdownMenu alwaysRenderMenu={alwaysRenderMenu} {...otherProps}>\n      {({isOpen, getRootProps, getActorProps, getMenuProps}) => {\n        const shouldRenderMenu = alwaysRenderMenu || isOpen;\n        const cx = classNames('dropdown-actor', className, {\n          'dropdown-menu-right': anchorRight,\n          'dropdown-toggle': true,\n          hover: isOpen,\n          disabled,\n        });\n        const topLevelCx = classNames('dropdown', topLevelClasses, {\n          'pull-right': anchorRight,\n          'anchor-right': anchorRight,\n          'anchor-middle': anchorMiddle,\n          open: isOpen,\n        });\n\n        const {onClick: onClickActor, ...actorProps} = getActorProps({\n          className: cx,\n        });\n\n        return (\n          <span\n            css={getRootCss(theme)}\n            {...getRootProps({\n              className: topLevelCx,\n            })}\n            data-test-id=\"dropdown-link\"\n          >\n            <a onClick={disabled ? undefined : onClickActor} {...actorProps}>\n              {customTitle || (\n                <div className=\"dropdown-actor-title\">\n                  {title}\n                  {caret && <IconChevron direction={isOpen ? 'up' : 'down'} size=\"xs\" />}\n                </div>\n              )}\n            </a>\n\n            {shouldRenderMenu && (\n              <ul\n                {...getMenuProps({\n                  className: classNames(menuClasses, 'dropdown-menu'),\n                })}\n              >\n                {children}\n              </ul>\n            )}\n          </span>\n        );\n      }}\n    </DeprecatedDropdownMenu>\n  );\n}\n\nexport default DropdownLink;\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {Client, RequestOptions} from 'sentry/api';\nimport DropdownLink from 'sentry/components/dropdownLink';\nimport MenuItem from 'sentry/components/menuItem';\nimport Pagination from 'sentry/components/pagination';\nimport {IconSearch} from 'sentry/icons';\nimport withApi from 'sentry/utils/withApi';\n\ntype Option = [value: string, label: string];\n\ntype FilterProps = {\n  location: Location;\n  name: string;\n  options: Option[];\n  path: string;\n  queryKey: string;\n  value: string;\n};\n\nclass Filter extends Component<FilterProps> {\n  getCurrentLabel() {\n    const selected = this.props.options.find(\n      item => item[0] === (this.props.value ?? '')\n    );\n    if (selected) {\n      return this.props.name + ': ' + selected[1];\n    }\n    return this.props.name + ': ' + 'Any';\n  }\n\n  getDefaultItem() {\n    const query = {...this.props.location.query, cursor: ''};\n    delete query[this.props.queryKey];\n\n    return (\n      <MenuItem\n        key=\"\"\n        isActive={this.props.value === '' || !this.props.value}\n        to={{pathname: this.props.path, query}}\n      >\n        Any\n      </MenuItem>\n    );\n  }\n\n  getSelector = () => (\n    <DropdownLink title={this.getCurrentLabel()}>\n      {this.getDefaultItem()}\n      {this.props.options.map(([value, label]) => {\n        const filterQuery = {\n          [this.props.queryKey]: value,\n          cursor: '',\n        };\n\n        const query = {...this.props.location.query, ...filterQuery};\n        return (\n          <MenuItem\n            key={value}\n            isActive={this.props.value === value}\n            to={{pathname: this.props.path, query}}\n          >\n            {label}\n          </MenuItem>\n        );\n      })}\n    </DropdownLink>\n  );\n\n  render() {\n    return (\n      <div className=\"filter-options\">\n        {this.props.options.length === 1 ? (\n          <strong>{this.getCurrentLabel()}</strong>\n        ) : (\n          this.getSelector()\n        )}\n      </div>\n    );\n  }\n}\n\ntype SortByProps = {\n  location: Location;\n  options: Option[];\n  path: string;\n  value: string;\n};\n\nclass SortBy extends Component<SortByProps> {\n  getCurrentSortLabel() {\n    return this.props.options.find(([value]) => value === this.props.value)?.[1];\n  }\n\n  getSortBySelector() {\n    return (\n      <DropdownLink title={this.getCurrentSortLabel()} className=\"sorted-by\">\n        {this.props.options.map(([value, label]) => {\n          const query = {...this.props.location.query, sortBy: value, cursor: ''};\n          return (\n            <MenuItem\n              isActive={this.props.value === value}\n              key={value}\n              to={{pathname: this.props.path, query}}\n            >\n              {label}\n            </MenuItem>\n          );\n        })}\n      </DropdownLink>\n    );\n  }\n\n  render() {\n    if (this.props.options.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"sort-options\">\n        Showing results sorted by\n        {this.props.options.length === 1 ? (\n          <strong className=\"sorted-by\">{this.getCurrentSortLabel()}</strong>\n        ) : (\n          this.getSortBySelector()\n        )}\n      </div>\n    );\n  }\n}\n\ntype FilterConfig = {\n  name: string;\n  options: Option[];\n};\n\n// XXX(ts): Using Partial here on the DefaultProps is not really correct, since\n// defaultProps guarantees they'll be set. But because this component is\n// wrapped with a HoC, we lose the defaultProps, and users of the component\ntype Props = {\n  api: Client;\n  location: Location;\n} & Partial<DefaultProps>;\n\ntype DefaultProps = {\n  columns: React.ReactNode[];\n  columnsForRow: (row: any) => React.ReactNode[];\n  defaultParams: Record<string, any>;\n  defaultSort: string;\n  endpoint: string;\n  filters: Record<string, FilterConfig>;\n  hasPagination: boolean;\n  hasSearch: boolean;\n  keyForRow: (row: any) => string;\n  method: RequestOptions['method'];\n  path: string;\n  sortOptions: Option[];\n};\n\ntype State = {\n  error: string | boolean;\n  filters: Record<string, string>;\n  loading: boolean;\n  pageLinks: null | string;\n  query: string;\n  rows: any[];\n  sortBy: string;\n};\n\nclass ResultGrid extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    path: '',\n    endpoint: '',\n    method: 'GET',\n    columns: [],\n    sortOptions: [],\n    filters: {},\n    defaultSort: '',\n    keyForRow: row => row.id,\n    columnsForRow: () => [],\n    defaultParams: {\n      per_page: 50,\n    },\n    hasPagination: true,\n    hasSearch: false,\n  };\n\n  state: State = this.defaultState;\n\n  componentWillMount() {\n    this.fetchData();\n  }\n\n  componentWillReceiveProps() {\n    const queryParams = this.query;\n    this.setState(\n      {\n        query: queryParams.query ?? '',\n        sortBy: queryParams.sortBy ?? this.props.defaultSort,\n        filters: {...queryParams},\n        pageLinks: null,\n        loading: true,\n        error: false,\n      },\n      this.fetchData\n    );\n  }\n\n  get defaultState() {\n    const queryParams = this.query;\n\n    return {\n      rows: [],\n      loading: true,\n      error: false,\n      pageLinks: null,\n      query: queryParams.query ?? '',\n      sortBy: queryParams.sortBy ?? this.props.defaultSort,\n      filters: {...queryParams},\n    } as State;\n  }\n\n  get query() {\n    return ((this.props.location ?? {}).query ?? {}) as {[k: string]: string};\n  }\n\n  remountComponent() {\n    this.setState(this.defaultState, this.fetchData);\n  }\n\n  refresh() {\n    this.setState({loading: true}, this.fetchData);\n  }\n\n  fetchData() {\n    // TODO(dcramer): this should explicitly allow filters/sortBy/cursor/perPage\n    const queryParams = {\n      ...this.props.defaultParams,\n      sortBy: this.state.sortBy,\n      ...this.query,\n    };\n\n    this.props.api.request(this.props.endpoint!, {\n      method: this.props.method,\n      data: queryParams,\n      success: (data, _, resp) => {\n        this.setState({\n          loading: false,\n          error: false,\n          rows: data,\n          pageLinks: resp?.getResponseHeader('Link') ?? null,\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      },\n    });\n  }\n\n  onSearch = (e: React.FormEvent<HTMLFormElement>) => {\n    const location = this.props.location ?? {};\n    const {query} = this.state;\n    const targetQueryParams = {...(location.query ?? {}), query, cursor: ''};\n\n    e.preventDefault();\n\n    browserHistory.push({\n      pathname: this.props.path,\n      query: targetQueryParams,\n    });\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({query: evt.target.value});\n  };\n\n  renderLoading() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns!.length}>\n          <div className=\"loading\">\n            <div className=\"loading-indicator\" />\n            <div className=\"loading-message\">Hold on to your butts!</div>\n          </div>\n        </td>\n      </tr>\n    );\n  }\n\n  renderError() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns!.length}>\n          <div className=\"alert-block alert-error\">Something bad happened :(</div>\n        </td>\n      </tr>\n    );\n  }\n\n  renderNoResults() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns!.length}>No results found.</td>\n      </tr>\n    );\n  }\n\n  renderResults() {\n    return this.state.rows.map(row => (\n      <tr key={this.props.keyForRow?.(row)}>{this.props.columnsForRow?.(row)}</tr>\n    ));\n  }\n\n  render() {\n    const {filters, sortOptions, path, location} = this.props;\n    return (\n      <div className=\"result-grid\">\n        <div className=\"table-options\">\n          {this.props.hasSearch && (\n            <div className=\"result-grid-search\">\n              <form onSubmit={this.onSearch}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control input-search\"\n                    placeholder=\"search\"\n                    style={{width: 300}}\n                    name=\"query\"\n                    autoComplete=\"off\"\n                    value={this.state.query}\n                    onChange={this.onQueryChange}\n                  />\n                  <button type=\"submit\" className=\"btn btn-sm btn-primary\">\n                    <IconSearch size=\"xs\" />\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n          <SortBy\n            options={sortOptions ?? []}\n            value={this.state.sortBy}\n            path={path ?? ''}\n            location={location}\n          />\n          {Object.keys(filters ?? {}).map(filterKey => (\n            <Filter\n              key={filterKey}\n              queryKey={filterKey}\n              value={this.state.filters[filterKey]}\n              path={path ?? ''}\n              location={location}\n              {...(filters?.[filterKey] as FilterConfig)}\n            />\n          ))}\n        </div>\n\n        <table className=\"table table-grid\">\n          <thead>\n            <tr>{this.props.columns}</tr>\n          </thead>\n          <tbody>\n            {this.state.loading\n              ? this.renderLoading()\n              : this.state.error\n              ? this.renderError()\n              : this.state.rows.length === 0\n              ? this.renderNoResults()\n              : this.renderResults()}\n          </tbody>\n        </table>\n        {this.props.hasPagination && this.state.pageLinks && (\n          <Pagination pageLinks={this.state.pageLinks} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport {ResultGrid};\n\nexport default withApi(ResultGrid);\n","import {RouteComponentProps} from 'react-router';\nimport moment from 'moment';\n\nimport ResultGrid from 'sentry/components/resultGrid';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\n\ntype Row = {\n  dateCreated: string;\n  name: string;\n  organization: Organization;\n  slug: string;\n  status: string;\n};\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype State = AsyncView['state'];\n\nexport default class AdminProjects extends AsyncView<Props, State> {\n  getRow = (row: Row) => [\n    <td key=\"name\">\n      <strong>\n        <a href={`/${row.organization.slug}/${row.slug}/`}>{row.name}</a>\n      </strong>\n      <br />\n      <small>{row.organization.name}</small>\n    </td>,\n    <td key=\"status\" style={{textAlign: 'center'}}>\n      {row.status}\n    </td>,\n    <td key=\"dateCreated\" style={{textAlign: 'right'}}>\n      {moment(row.dateCreated).format('ll')}\n    </td>,\n  ];\n\n  render() {\n    const columns = [\n      <th key=\"name\">Project</th>,\n      <th key=\"status\" style={{width: 150, textAlign: 'center'}}>\n        Status\n      </th>,\n      <th key=\"dateCreated\" style={{width: 200, textAlign: 'right'}}>\n        Created\n      </th>,\n    ];\n\n    return (\n      <div>\n        <h3>{t('Projects')}</h3>\n        <ResultGrid\n          path=\"/manage/projects/\"\n          endpoint=\"/projects/?show=all\"\n          method=\"GET\"\n          columns={columns}\n          columnsForRow={this.getRow}\n          hasSearch\n          filters={{\n            status: {\n              name: 'Status',\n              options: [\n                ['active', 'Active'],\n                ['deleted', 'Deleted'],\n              ],\n            },\n          }}\n          sortOptions={[['date', 'Date Created']]}\n          defaultSort=\"date\"\n          {...this.props}\n        />\n      </div>\n    );\n  }\n}\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["getRootCss","theme","css","textColor","hover","DropdownLink","anchorMiddle","title","customTitle","children","menuClasses","className","topLevelClasses","anchorRight","disabled","caret","alwaysRenderMenu","otherProps","useTheme","isOpen","getRootProps","getActorProps","getMenuProps","shouldRenderMenu","cx","classNames","topLevelCx","open","onClick","onClickActor","actorProps","undefined","direction","size","Filter","Component","this","getCurrentLabel","getDefaultItem","props","options","map","value","label","filterQuery","queryKey","cursor","query","location","isActive","to","pathname","path","selected","find","item","name","render","length","getSelector","SortBy","getCurrentSortLabel","getSortBySelector","sortBy","ResultGrid","defaultState","e","state","targetQueryParams","preventDefault","browserHistory","evt","setState","target","componentWillMount","fetchData","componentWillReceiveProps","queryParams","defaultSort","filters","pageLinks","loading","error","rows","remountComponent","refresh","defaultParams","api","request","endpoint","method","data","success","_","resp","getResponseHeader","renderLoading","colSpan","columns","renderError","renderNoResults","renderResults","row","columnsForRow","keyForRow","sortOptions","hasSearch","onSubmit","onSearch","type","placeholder","style","width","autoComplete","onChange","onQueryChange","Object","keys","filterKey","hasPagination","id","per_page","withApi","AdminProjects","AsyncView","href","organization","slug","textAlign","status","moment","dateCreated","format","t","getRow","AsyncComponent","getTitle","renderComponent"],"sourceRoot":""}