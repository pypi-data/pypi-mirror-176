{"version":3,"file":"chunks/app_data_forms_accountEmails_tsx-app_views_settings_components_settingsLayout_tsx-node_module-f8cead.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/breadcrumbDropdown.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/crumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/divider.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/findFirstRouteWithoutRouteParam.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/menuItem.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/organizationCrumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/projectCrumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/teamCrumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/index.tsx","webpack:///./app/views/settings/components/settingsSearch/index.tsx","webpack:///./app/views/settings/components/settingsLayout.tsx","webpack:///../node_modules/lodash/flattenDepth.js"],"sourcesContent":["import {JsonFormObject} from 'sentry/components/forms/types';\nimport {t} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: t('Add Secondary Emails'),\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: t('Additional Email'),\n        placeholder: t('e.g. secondary@example.com'),\n        help: t('Designate an alternative email for this account'),\n        saveOnBlur: false,\n        saveMessage: t('Add this new email address to your account?'),\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import {useState} from 'react';\n\nimport DropdownAutoCompleteMenu from 'sentry/components/dropdownAutoComplete/menu';\nimport {Item} from 'sentry/components/dropdownAutoComplete/types';\nimport Crumb from 'sentry/views/settings/components/settingsBreadcrumb/crumb';\nimport Divider from 'sentry/views/settings/components/settingsBreadcrumb/divider';\n\nimport {RouteWithName} from './types';\n\ninterface AdditionalDropdownProps\n  extends Pick<\n    React.ComponentProps<typeof DropdownAutoCompleteMenu>,\n    'onChange' | 'busyItemsStillVisible'\n  > {}\n\nexport interface BreadcrumbDropdownProps extends AdditionalDropdownProps {\n  items: Item[];\n  name: React.ReactNode;\n  onSelect: (item: Item) => void;\n  route: RouteWithName;\n  hasMenu?: boolean;\n  isLast?: boolean;\n}\n\nfunction BreadcrumbDropdown({\n  hasMenu,\n  route,\n  isLast,\n  name,\n  onSelect,\n  ...dropdownProps\n}: BreadcrumbDropdownProps) {\n  const [isActive, setIsActive] = useState(false);\n\n  return (\n    <DropdownAutoCompleteMenu\n      blendCorner={false}\n      isOpen={isActive}\n      virtualizedHeight={41}\n      onSelect={item => {\n        setIsActive(false);\n        onSelect(item);\n      }}\n      menuProps={{\n        onMouseEnter: () => setIsActive(true),\n        onMouseLeave: () => setIsActive(false),\n      }}\n      {...dropdownProps}\n    >\n      {({getActorProps, isOpen}) => (\n        <Crumb\n          {...getActorProps({\n            onClick: () => setIsActive(false),\n            onMouseEnter: () => setIsActive(true),\n            onMouseLeave: () => setIsActive(false),\n          })}\n        >\n          <span>{name || route.name} </span>\n          <Divider isHover={hasMenu && isOpen} isLast={isLast} />\n        </Crumb>\n      )}\n    </DropdownAutoCompleteMenu>\n  );\n}\n\nexport default BreadcrumbDropdown;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nconst Crumb = styled('div')`\n  display: flex;\n  align-items: center;\n  position: relative;\n  font-size: 18px;\n  color: ${p => p.theme.subText};\n  padding-right: ${space(1)};\n  cursor: pointer;\n  white-space: nowrap;\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default Crumb;\n","import styled from '@emotion/styled';\n\nimport {IconChevron} from 'sentry/icons';\n\ntype Props = {\n  isHover?: boolean;\n  isLast?: boolean;\n};\n\nconst Divider = ({isHover, isLast}: Props) =>\n  isLast ? null : (\n    <StyledDivider>\n      <StyledIconChevron direction={isHover ? 'down' : 'right'} size=\"14px\" />\n    </StyledDivider>\n  );\n\nconst StyledIconChevron = styled(IconChevron)`\n  display: block;\n`;\n\nconst StyledDivider = styled('span')`\n  display: inline-block;\n  margin-left: 6px;\n  color: ${p => p.theme.gray200};\n  position: relative;\n`;\n\nexport default Divider;\n","import {PlainRoute} from 'react-router';\n\n/**\n * For all routes with a `path`, find the first route without a route param (e.g. :apiKey)\n *\n * @param routes A list of react-router route objects\n * @param route If given, will only take into account routes between `route` and end of the routes list\n * @return Object Returns a react-router route object\n */\nexport default function findFirstRouteWithoutRouteParam(\n  routes: PlainRoute[],\n  route?: PlainRoute\n) {\n  const routeIndex = route !== undefined ? routes.indexOf(route) : -1;\n  const routesToSearch = route && routeIndex > -1 ? routes.slice(routeIndex) : routes;\n\n  return (\n    routesToSearch.filter(({path}) => !!path).find(({path}) => !path?.includes(':')) ||\n    route\n  );\n}\n","import styled from '@emotion/styled';\n\nconst MenuItem = styled('div')`\n  font-size: 14px;\n  ${p => p.theme.overflowEllipsis};\n`;\n\nexport default MenuItem;\n","import {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport IdBadge from 'sentry/components/idBadge';\nimport {Organization} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport withLatestContext from 'sentry/utils/withLatestContext';\nimport BreadcrumbDropdown from 'sentry/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\nimport findFirstRouteWithoutRouteParam from 'sentry/views/settings/components/settingsBreadcrumb/findFirstRouteWithoutRouteParam';\nimport MenuItem from 'sentry/views/settings/components/settingsBreadcrumb/menuItem';\n\nimport {CrumbLink} from '.';\n\ntype Props = RouteComponentProps<{projectId?: string}, {}> & {\n  organization: Organization;\n  organizations: Organization[];\n};\n\nconst OrganizationCrumb = ({\n  organization,\n  organizations,\n  params,\n  routes,\n  route,\n  ...props\n}: Props) => {\n  const handleSelect = (item: {value: string}) => {\n    // If we are currently in a project context, and we're attempting to switch organizations,\n    // then we need to default to index route (e.g. `route`)\n    //\n    // Otherwise, find the last route without a router param\n    // e.g. if you are on API details, we want the API listing\n    // This fails if our route tree is not nested\n    const hasProjectParam = !!params.projectId;\n    let destination = hasProjectParam\n      ? route\n      : findFirstRouteWithoutRouteParam(routes.slice(routes.indexOf(route)));\n\n    // It's possible there is no route without route params (e.g. organization settings index),\n    // in which case, we can use the org settings index route (e.g. `route`)\n    if (!hasProjectParam && typeof destination === 'undefined') {\n      destination = route;\n    }\n\n    if (destination === undefined) {\n      return;\n    }\n\n    browserHistory.push(\n      recreateRoute(destination, {\n        routes,\n        params: {...params, orgId: item.value},\n      })\n    );\n  };\n\n  if (!organization) {\n    return null;\n  }\n\n  const hasMenu = organizations.length > 1;\n\n  return (\n    <BreadcrumbDropdown\n      name={\n        <CrumbLink\n          to={recreateRoute(route, {\n            routes,\n            params: {...params, orgId: organization.slug},\n          })}\n        >\n          <BadgeWrapper>\n            <IdBadge avatarSize={18} organization={organization} />\n          </BadgeWrapper>\n        </CrumbLink>\n      }\n      onSelect={handleSelect}\n      hasMenu={hasMenu}\n      route={route}\n      items={organizations.map((org, index) => ({\n        index,\n        value: org.slug,\n        label: (\n          <MenuItem>\n            <IdBadge organization={org} />\n          </MenuItem>\n        ),\n      }))}\n      {...props}\n    />\n  );\n};\n\nconst BadgeWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nexport {OrganizationCrumb};\nexport default withLatestContext(OrganizationCrumb);\n","import {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport IdBadge from 'sentry/components/idBadge';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport withLatestContext from 'sentry/utils/withLatestContext';\nimport withProjects from 'sentry/utils/withProjects';\nimport BreadcrumbDropdown from 'sentry/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\nimport findFirstRouteWithoutRouteParam from 'sentry/views/settings/components/settingsBreadcrumb/findFirstRouteWithoutRouteParam';\nimport MenuItem from 'sentry/views/settings/components/settingsBreadcrumb/menuItem';\n\nimport {CrumbLink} from '.';\n\ntype Props = RouteComponentProps<{projectId?: string}, {}> & {\n  organization: Organization;\n  project: Project;\n  projects: Project[];\n};\n\nconst ProjectCrumb = ({\n  organization: latestOrganization,\n  project: latestProject,\n  projects,\n  params,\n  routes,\n  route,\n  ...props\n}: Props) => {\n  const handleSelect = (item: {value: string}) => {\n    // We have to make exceptions for routes like \"Project Alerts Rule Edit\" or \"Client Key Details\"\n    // Since these models are project specific, we need to traverse up a route when switching projects\n    //\n    // we manipulate `routes` so that it doesn't include the current project's route\n    // which, unlike the org version, does not start with a route param\n    const returnTo = findFirstRouteWithoutRouteParam(\n      routes.slice(routes.indexOf(route) + 1),\n      route\n    );\n\n    if (returnTo === undefined) {\n      return;\n    }\n\n    browserHistory.push(\n      recreateRoute(returnTo, {routes, params: {...params, projectId: item.value}})\n    );\n  };\n\n  if (!latestOrganization) {\n    return null;\n  }\n  if (!projects) {\n    return null;\n  }\n\n  const hasMenu = projects && projects.length > 1;\n\n  return (\n    <BreadcrumbDropdown\n      hasMenu={hasMenu}\n      route={route}\n      name={\n        <ProjectName>\n          {!latestProject ? (\n            <LoadingIndicator mini />\n          ) : (\n            <CrumbLink\n              to={replaceRouterParams('/settings/:orgId/projects/:projectId/', {\n                orgId: latestOrganization.slug,\n                projectId: latestProject.slug,\n              })}\n            >\n              <IdBadge project={latestProject} avatarSize={18} disableLink />\n            </CrumbLink>\n          )}\n        </ProjectName>\n      }\n      onSelect={handleSelect}\n      items={projects.map((project, index) => ({\n        index,\n        value: project.slug,\n        label: (\n          <MenuItem>\n            <IdBadge\n              project={project}\n              avatarProps={{consistentWidth: true}}\n              avatarSize={18}\n              disableLink\n            />\n          </MenuItem>\n        ),\n      }))}\n      {...props}\n    />\n  );\n};\n\nexport {ProjectCrumb};\nexport default withProjects(withLatestContext(ProjectCrumb));\n\n// Set height of crumb because of spinner\nconst SPINNER_SIZE = '24px';\n\nconst ProjectName = styled('div')`\n  display: flex;\n\n  .loading {\n    width: ${SPINNER_SIZE};\n    height: ${SPINNER_SIZE};\n    margin: 0 ${space(0.25)} 0 0;\n  }\n`;\n","import {browserHistory, RouteComponentProps} from 'react-router';\nimport debounce from 'lodash/debounce';\n\nimport IdBadge from 'sentry/components/idBadge';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport useTeams from 'sentry/utils/useTeams';\nimport BreadcrumbDropdown from 'sentry/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\nimport MenuItem from 'sentry/views/settings/components/settingsBreadcrumb/menuItem';\n\nimport {CrumbLink} from '.';\n\ntype Props = RouteComponentProps<{teamId: string}, {}>;\n\nconst TeamCrumb = ({params, routes, route, ...props}: Props) => {\n  const {teams, onSearch, fetching} = useTeams();\n\n  const team = teams.find(({slug}) => slug === params.teamId);\n  const hasMenu = teams.length > 1;\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearch(e.target.value);\n  };\n  const debouncedHandleSearch = debounce(handleSearchChange, DEFAULT_DEBOUNCE_DURATION);\n\n  if (!team) {\n    return null;\n  }\n\n  return (\n    <BreadcrumbDropdown\n      name={\n        <CrumbLink\n          to={recreateRoute(route, {\n            routes,\n            params: {...params, teamId: team.slug},\n          })}\n        >\n          <IdBadge avatarSize={18} team={team} />\n        </CrumbLink>\n      }\n      onSelect={item => {\n        browserHistory.push(\n          recreateRoute('', {\n            routes,\n            params: {...params, teamId: item.value},\n          })\n        );\n      }}\n      hasMenu={hasMenu}\n      route={route}\n      items={teams.map((teamItem, index) => ({\n        index,\n        value: teamItem.slug,\n        label: (\n          <MenuItem>\n            <IdBadge team={teamItem} />\n          </MenuItem>\n        ),\n      }))}\n      onChange={debouncedHandleSearch}\n      busyItemsStillVisible={fetching}\n      {...props}\n    />\n  );\n};\n\nexport default TeamCrumb;\n","import styled from '@emotion/styled';\n\nimport Link from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport Crumb from 'sentry/views/settings/components/settingsBreadcrumb/crumb';\nimport Divider from 'sentry/views/settings/components/settingsBreadcrumb/divider';\nimport OrganizationCrumb from 'sentry/views/settings/components/settingsBreadcrumb/organizationCrumb';\nimport ProjectCrumb from 'sentry/views/settings/components/settingsBreadcrumb/projectCrumb';\nimport TeamCrumb from 'sentry/views/settings/components/settingsBreadcrumb/teamCrumb';\n\nimport {useBreadcrumbsPathmap} from './context';\nimport {RouteWithName} from './types';\n\nconst MENUS = {\n  Organization: OrganizationCrumb,\n  Project: ProjectCrumb,\n  Team: TeamCrumb,\n} as const;\n\ntype Props = {\n  params: {[param: string]: string | undefined};\n  route: any;\n  routes: RouteWithName[];\n  className?: string;\n};\n\nfunction SettingsBreadcrumb({className, routes, params}: Props) {\n  const pathMap = useBreadcrumbsPathmap();\n\n  const lastRouteIndex = routes.map(r => !!r.name).lastIndexOf(true);\n\n  return (\n    <Breadcrumbs aria-label={t('Settings Breadcrumbs')} className={className}>\n      {routes.map((route, i) => {\n        if (!route.name) {\n          return null;\n        }\n        const pathTitle = pathMap[getRouteStringFromRoutes(routes.slice(0, i + 1))];\n        const isLast = i === lastRouteIndex;\n        const createMenu = MENUS[route.name];\n        const Menu = typeof createMenu === 'function' && createMenu;\n        const hasMenu = !!Menu;\n\n        const CrumbItem = hasMenu\n          ? Menu\n          : () => (\n              <Crumb>\n                <CrumbLink to={recreateRoute(route, {routes, params})}>\n                  {pathTitle || route.name}{' '}\n                </CrumbLink>\n                <Divider isLast={isLast} />\n              </Crumb>\n            );\n\n        return (\n          <CrumbItem\n            key={`${route.name}:${route.path}`}\n            routes={routes}\n            params={params}\n            route={route}\n            isLast={isLast}\n          />\n        );\n      })}\n    </Breadcrumbs>\n  );\n}\n\nexport default SettingsBreadcrumb;\n\nconst CrumbLink = styled(Link)`\n  display: block;\n\n  color: ${p => p.theme.subText};\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport {CrumbLink};\n\nconst Breadcrumbs = styled('nav')`\n  display: flex;\n  align-items: center;\n`;\n","import {useRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Search} from 'sentry/components/search';\nimport {IconSearch} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {useHotkeys} from 'sentry/utils/useHotkeys';\n\nconst MIN_SEARCH_LENGTH = 1;\nconst MAX_RESULTS = 10;\n\nfunction SettingsSearch() {\n  const searchInput = useRef<HTMLInputElement>(null);\n\n  useHotkeys([{match: '/', callback: () => searchInput.current?.focus()}], []);\n\n  return (\n    <Search\n      entryPoint=\"settings_search\"\n      minSearch={MIN_SEARCH_LENGTH}\n      maxResults={MAX_RESULTS}\n      renderInput={({getInputProps}) => (\n        <SearchInputWrapper>\n          <SearchInputIcon size=\"14px\" />\n          <SearchInput\n            aria-label={t('Search Settings')}\n            {...getInputProps({type: 'text', placeholder: t('Search')})}\n            ref={searchInput}\n          />\n        </SearchInputWrapper>\n      )}\n    />\n  );\n}\n\nexport default SettingsSearch;\n\nconst SearchInputWrapper = styled('div')`\n  position: relative;\n`;\n\nconst SearchInputIcon = styled(IconSearch)`\n  color: ${p => p.theme.gray300};\n  position: absolute;\n  left: 10px;\n  top: 8px;\n`;\n\nconst SearchInput = styled('input')`\n  color: ${p => p.theme.formText};\n  background-color: ${p => p.theme.background};\n  transition: border-color 0.15s ease;\n  font-size: 14px;\n  width: 260px;\n  line-height: 1;\n  padding: 5px 8px 4px 28px;\n  border: 1px solid ${p => p.theme.border};\n  border-radius: 30px;\n  height: 28px;\n\n  box-shadow: inset ${p => p.theme.dropShadowLight};\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${p => p.theme.border};\n  }\n\n  &::placeholder {\n    color: ${p => p.theme.formPlaceholder};\n  }\n`;\n","import {isValidElement, useEffect, useRef, useState} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {IconClose, IconMenu} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {fadeIn, slideInLeft} from 'sentry/styles/animations';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\n\nimport SettingsBreadcrumb from './settingsBreadcrumb';\nimport SettingsHeader from './settingsHeader';\nimport SettingsSearch from './settingsSearch';\n\ntype Props = {\n  children: React.ReactNode;\n  renderNavigation?: (opts: {isMobileNavVisible: boolean}) => React.ReactNode;\n} & RouteComponentProps<{}, {}>;\n\nfunction SettingsLayout(props: Props) {\n  // This is used when the screen is small enough that the navigation should be\n  // hidden. This state is only used when the media query matches.\n  //\n  // [!!] On large screens this state is totally unused!\n  const [isMobileNavVisible, setMobileNavVisible] = useState(false);\n\n  // Offset mobile settings navigation by the height of main navigation,\n  // settings breadcrumbs and optional warnings.\n  const [navOffsetTop, setNavOffsetTop] = useState(0);\n\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  function toggleNav(visible: boolean) {\n    const bodyElement = document.getElementsByTagName('body')[0];\n\n    window.scrollTo?.(0, 0);\n    bodyElement.classList[visible ? 'add' : 'remove']('scroll-lock');\n\n    setMobileNavVisible(visible);\n    setNavOffsetTop(headerRef.current?.getBoundingClientRect().bottom ?? 0);\n  }\n\n  // Close menu when navigating away\n  useEffect(() => browserHistory.listen(() => toggleNav(false)), []);\n\n  const {renderNavigation, children, params, routes, route} = props;\n\n  // We want child's view's props\n  const childProps = children && isValidElement(children) ? children.props : props;\n  const childRoutes = childProps.routes || routes || [];\n  const childRoute = childProps.route || route || {};\n  const shouldRenderNavigation = typeof renderNavigation === 'function';\n\n  return (\n    <SettingsColumn>\n      <SettingsHeader ref={headerRef}>\n        <HeaderContent>\n          {shouldRenderNavigation && (\n            <NavMenuToggle\n              priority=\"link\"\n              aria-label={isMobileNavVisible ? t('Close the menu') : t('Open the menu')}\n              icon={\n                isMobileNavVisible ? <IconClose aria-hidden /> : <IconMenu aria-hidden />\n              }\n              onClick={() => toggleNav(!isMobileNavVisible)}\n            />\n          )}\n          <StyledSettingsBreadcrumb\n            params={params}\n            routes={childRoutes}\n            route={childRoute}\n          />\n          <SettingsSearch />\n        </HeaderContent>\n      </SettingsHeader>\n\n      <MaxWidthContainer>\n        {shouldRenderNavigation && (\n          <SidebarWrapper\n            aria-label={t('Settings Navigation')}\n            isVisible={isMobileNavVisible}\n            offsetTop={navOffsetTop}\n          >\n            {renderNavigation({isMobileNavVisible})}\n          </SidebarWrapper>\n        )}\n        <NavMask isVisible={isMobileNavVisible} onClick={() => toggleNav(false)} />\n        <Content>{children}</Content>\n      </MaxWidthContainer>\n    </SettingsColumn>\n  );\n}\n\nconst SettingsColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  flex: 1; /* so this stretches vertically so that footer is fixed at bottom */\n  min-width: 0; /* fixes problem when child content stretches beyond layout width */\n  footer {\n    margin-top: 0;\n  }\n`;\n\nconst HeaderContent = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst NavMenuToggle = styled(Button)`\n  display: none;\n  margin: -${space(1)} ${space(1)} -${space(1)} -${space(1)};\n  padding: ${space(1)};\n  color: ${p => p.theme.subText};\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => p.theme.textColor};\n  }\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    display: block;\n  }\n`;\n\nconst StyledSettingsBreadcrumb = styled(SettingsBreadcrumb)`\n  flex: 1;\n`;\n\nconst MaxWidthContainer = styled('div')`\n  display: flex;\n  max-width: ${p => p.theme.settings.containerWidth};\n  flex: 1;\n`;\n\nconst SidebarWrapper = styled('nav')<{isVisible: boolean; offsetTop: number}>`\n  flex-shrink: 0;\n  width: ${p => p.theme.settings.sidebarWidth};\n  background: ${p => p.theme.background};\n  border-right: 1px solid ${p => p.theme.border};\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    display: ${p => (p.isVisible ? 'block' : 'none')};\n    position: fixed;\n    top: ${p => p.offsetTop}px;\n    bottom: 0;\n    overflow-y: auto;\n    animation: ${slideInLeft} 100ms ease-in-out;\n    z-index: ${p => p.theme.zIndex.settingsSidebarNav};\n    box-shadow: ${p => p.theme.dropShadowHeavy};\n  }\n`;\n\nconst NavMask = styled('div')<{isVisible: boolean}>`\n  display: none;\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    display: ${p => (p.isVisible ? 'block' : 'none')};\n    background: rgba(0, 0, 0, 0.35);\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    z-index: ${p => p.theme.zIndex.settingsSidebarNavMask};\n    animation: ${fadeIn} 250ms ease-in-out;\n  }\n`;\n\n/**\n * Note: `overflow: hidden` will cause some buttons in `SettingsPageHeader` to be cut off because it has negative margin.\n * Will also cut off tooltips.\n */\nconst Content = styled('div')`\n  flex: 1;\n  padding: ${space(4)};\n  min-width: 0; /* keep children from stretching container */\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    padding: ${space(2)};\n  }\n\n  /**\n   * PageContent is not normally used in settings but <PermissionDenied /> uses it under the hood.\n   * This prevents double padding.\n   */\n  ${PageContent} {\n    padding: 0;\n  }\n`;\n\nexport default SettingsLayout;\n","var baseFlatten = require('./_baseFlatten'),\n    toInteger = require('./toInteger');\n\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\nfunction flattenDepth(array, depth) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nmodule.exports = flattenDepth;\n"],"names":["route","title","t","fields","name","type","label","placeholder","help","saveOnBlur","saveMessage","BreadcrumbDropdown","hasMenu","isLast","onSelect","dropdownProps","isActive","setIsActive","useState","blendCorner","isOpen","virtualizedHeight","item","menuProps","onMouseEnter","onMouseLeave","getActorProps","onClick","isHover","p","theme","subText","space","textColor","StyledIconChevron","IconChevron","StyledDivider","gray200","direction","size","findFirstRouteWithoutRouteParam","routes","routeIndex","undefined","indexOf","slice","filter","path","find","includes","overflowEllipsis","OrganizationCrumb","organization","organizations","params","props","length","CrumbLink","to","recreateRoute","orgId","slug","BadgeWrapper","avatarSize","hasProjectParam","projectId","destination","browserHistory","value","items","map","org","index","withLatestContext","ProjectCrumb","latestOrganization","project","latestProject","projects","ProjectName","replaceRouterParams","disableLink","mini","returnTo","avatarProps","consistentWidth","withProjects","SPINNER_SIZE","TeamCrumb","teams","onSearch","fetching","useTeams","team","teamId","debouncedHandleSearch","debounce","e","target","DEFAULT_DEBOUNCE_DURATION","teamItem","onChange","busyItemsStillVisible","MENUS","Organization","Project","Team","SettingsBreadcrumb","className","pathMap","useBreadcrumbsPathmap","lastRouteIndex","r","lastIndexOf","Breadcrumbs","i","pathTitle","getRouteStringFromRoutes","createMenu","Menu","CrumbItem","Link","SettingsSearch","searchInput","useRef","useHotkeys","match","callback","current","focus","entryPoint","minSearch","maxResults","renderInput","getInputProps","SearchInputWrapper","SearchInputIcon","SearchInput","ref","IconSearch","gray300","formText","background","border","dropShadowLight","formPlaceholder","SettingsLayout","isMobileNavVisible","setMobileNavVisible","navOffsetTop","setNavOffsetTop","headerRef","toggleNav","visible","bodyElement","document","getElementsByTagName","window","scrollTo","classList","getBoundingClientRect","bottom","useEffect","renderNavigation","children","childProps","isValidElement","childRoutes","childRoute","shouldRenderNavigation","SettingsColumn","HeaderContent","NavMenuToggle","priority","icon","StyledSettingsBreadcrumb","MaxWidthContainer","SidebarWrapper","isVisible","offsetTop","NavMask","Content","Button","breakpoints","medium","settings","containerWidth","sidebarWidth","slideInLeft","zIndex","settingsSidebarNav","dropShadowHeavy","settingsSidebarNavMask","fadeIn","PageContent","baseFlatten","toInteger","module","exports","array","depth"],"sourceRoot":""}