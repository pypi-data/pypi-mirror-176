{"version":3,"file":"chunks/app_views_profiling_profileSummary_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/profiling/breadcrumb.tsx","webpack:///./app/components/profiling/arrayLinks.tsx","webpack:///./app/components/profiling/functionsTable.tsx","webpack:///./app/views/profiling/profileSummary/content.tsx","webpack:///./app/utils/profiling/hooks/useFunctions.tsx","webpack:///./app/views/profiling/profileSummary/index.tsx"],"sourcesContent":["import {useMemo} from 'react';\nimport {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport _Breadcrumbs, {Crumb} from 'sentry/components/breadcrumbs';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {\n  generateProfileDetailsRouteWithQuery,\n  generateProfileFlamechartRouteWithQuery,\n  generateProfileSummaryRouteWithQuery,\n  generateProfilingRouteWithQuery,\n} from 'sentry/utils/profiling/routes';\n\ninterface BreadcrumbsProps {\n  organization: Organization;\n  trails: Trail[];\n}\n\nfunction Breadcrumb({organization, trails}: BreadcrumbsProps) {\n  const crumbs = useMemo(\n    () => trails.map(trail => trailToCrumb(trail, {organization})),\n    [organization, trails]\n  );\n  return <_Breadcrumbs crumbs={crumbs} />;\n}\n\nfunction trailToCrumb(\n  trail: Trail,\n  {\n    organization,\n  }: {\n    organization: Organization;\n  }\n): Crumb {\n  switch (trail.type) {\n    case 'landing': {\n      return {\n        to: generateProfilingRouteWithQuery({\n          // cursor and query are not used in the landing page\n          // and break the API call as the qs gets forwarded to the API\n          query: omit(trail.payload.query, ['cursor', 'query']),\n          orgSlug: organization.slug,\n        }),\n        label: t('Profiling'),\n        preservePageFilters: true,\n      };\n    }\n    case 'profile summary': {\n      return {\n        to: generateProfileSummaryRouteWithQuery({\n          // cursor and query are not used in the summary page\n          // and break the API call as the qs gets forwarded to the API\n          query: omit(trail.payload.query, ['cursor', 'query']),\n          orgSlug: organization.slug,\n          projectSlug: trail.payload.projectSlug,\n          transaction: trail.payload.transaction,\n        }),\n        label: t('Profile Summary'),\n        preservePageFilters: true,\n      };\n    }\n    case 'flamechart': {\n      const generateRouteWithQuery =\n        trail.payload.tab === 'flamechart'\n          ? generateProfileFlamechartRouteWithQuery\n          : generateProfileDetailsRouteWithQuery;\n      return {\n        to: generateRouteWithQuery({\n          query: trail.payload.query,\n          orgSlug: organization.slug,\n          projectSlug: trail.payload.projectSlug,\n          profileId: trail.payload.profileId,\n        }),\n        label: trail.payload.transaction,\n        preservePageFilters: true,\n      };\n    }\n    default:\n      throw new Error(`Unknown breadcrumb type: ${JSON.stringify(trail)}`);\n  }\n}\n\ntype ProfilingTrail = {\n  payload: {\n    query: Location['query'];\n  };\n  type: 'landing';\n};\n\ntype ProfileSummaryTrail = {\n  payload: {\n    projectSlug: Project['slug'];\n    query: Location['query'];\n    transaction: string;\n  };\n  type: 'profile summary';\n};\n\ntype FlamegraphTrail = {\n  payload: {\n    profileId: string;\n    projectSlug: string;\n    query: Location['query'];\n    tab: 'flamechart' | 'details';\n    transaction: string;\n  };\n  type: 'flamechart';\n};\n\ntype Trail = ProfilingTrail | ProfileSummaryTrail | FlamegraphTrail;\n\nexport {Breadcrumb};\n","import {useState} from 'react';\nimport {Link} from 'react-router';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\n\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Item = {\n  target: LocationDescriptor;\n  value: string;\n};\n\ninterface ArrayLinksProps {\n  items: Item[];\n}\n\nfunction ArrayLinks({items}: ArrayLinksProps) {\n  const [expanded, setExpanded] = useState(false);\n  const firstItem = items[0];\n\n  return (\n    <ArrayContainer expanded={expanded}>\n      {firstItem && <LinkedItem item={firstItem} />}\n      {items.length > 1 &&\n        expanded &&\n        items\n          .slice(1, items.length)\n          .map(item => <LinkedItem key={item.value} item={item} />)}\n      {items.length > 1 ? (\n        <ButtonContainer>\n          <button onClick={() => setExpanded(!expanded)}>\n            {expanded ? t('[collapse]') : t('[+%s more]', items.length - 1)}\n          </button>\n        </ButtonContainer>\n      ) : null}\n    </ArrayContainer>\n  );\n}\n\nfunction LinkedItem({item}: {item: Item}) {\n  return (\n    <ArrayItem>\n      <Link to={item.target}>{item.value}</Link>\n    </ArrayItem>\n  );\n}\n\nconst ArrayContainer = styled('div')<{expanded: boolean}>`\n  display: flex;\n  flex-direction: ${p => (p.expanded ? 'column' : 'row')};\n`;\n\nconst ArrayItem = styled('span')`\n  flex-shrink: 1;\n  display: block;\n\n  ${p => p.theme.overflowEllipsis};\n  width: unset;\n`;\n\nconst ButtonContainer = styled('div')`\n  white-space: nowrap;\n\n  & button {\n    background: none;\n    border: 0;\n    outline: none;\n    padding: 0;\n    cursor: pointer;\n    color: ${p => p.theme.blue300};\n    margin-left: ${space(0.5)};\n  }\n`;\n\nexport {ArrayLinks};\n","import {useCallback, useMemo} from 'react';\nimport styled from '@emotion/styled';\n\nimport Count from 'sentry/components/count';\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport {ArrayLinks} from 'sentry/components/profiling/arrayLinks';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport {SuspectFunction} from 'sentry/types/profiling/core';\nimport {Container, NumberContainer} from 'sentry/utils/discover/styles';\nimport {getShortEventId} from 'sentry/utils/events';\nimport {generateProfileFlamechartRouteWithQuery} from 'sentry/utils/profiling/routes';\nimport {renderTableHead} from 'sentry/utils/profiling/tableRenderer';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ninterface FunctionsTableProps {\n  error: string | null;\n  functions: SuspectFunction[];\n  isLoading: boolean;\n  project: Project;\n  sort: string;\n}\n\nfunction FunctionsTable(props: FunctionsTableProps) {\n  const location = useLocation();\n  const organization = useOrganization();\n\n  const sort = useMemo(() => {\n    let column = props.sort;\n    let order: 'asc' | 'desc' = 'asc' as const;\n\n    if (props.sort.startsWith('-')) {\n      column = props.sort.substring(1);\n      order = 'desc' as const;\n    }\n\n    if (!SORTABLE_COLUMNS.has(column as any)) {\n      column = 'p99';\n    }\n\n    return {\n      key: column as TableColumnKey,\n      order,\n    };\n  }, [props.sort]);\n\n  const functions: TableDataRow[] = useMemo(() => {\n    return props.functions.map(func => {\n      const {worst, examples, ...rest} = func;\n\n      const allExamples = examples.filter(example => example !== worst);\n      allExamples.unshift(worst);\n\n      return {\n        ...rest,\n        examples: allExamples.map(example => {\n          const profileId = example.replaceAll('-', '');\n          return {\n            value: getShortEventId(profileId),\n            target: generateProfileFlamechartRouteWithQuery({\n              orgSlug: organization.slug,\n              projectSlug: props.project.slug,\n              profileId,\n              query: {\n                // specify the frame to focus, the flamegraph will switch\n                // to the appropriate thread when these are specified\n                frameName: func.name,\n                framePackage: func.package,\n              },\n            }),\n          };\n        }),\n      };\n    });\n  }, [organization.slug, props.project.slug, props.functions]);\n\n  const generateSortLink = useCallback(\n    (column: TableColumnKey) => {\n      if (!SORTABLE_COLUMNS.has(column)) {\n        return () => undefined;\n      }\n\n      const direction =\n        sort.key !== column ? 'desc' : sort.order === 'desc' ? 'asc' : 'desc';\n\n      return () => ({\n        ...location,\n        query: {\n          ...location.query,\n          functionsSort: `${direction === 'desc' ? '-' : ''}${column}`,\n        },\n      });\n    },\n    [location, sort]\n  );\n\n  return (\n    <GridEditable\n      isLoading={props.isLoading}\n      error={props.error}\n      data={functions}\n      columnOrder={COLUMN_ORDER.map(key => COLUMNS[key])}\n      columnSortBy={[]}\n      grid={{\n        renderHeadCell: renderTableHead({\n          currentSort: sort,\n          rightAlignedColumns: RIGHT_ALIGNED_COLUMNS,\n          sortableColumns: SORTABLE_COLUMNS,\n          generateSortLink,\n        }),\n        renderBodyCell: renderFunctionsTableCell,\n      }}\n      location={location}\n    />\n  );\n}\n\nconst RIGHT_ALIGNED_COLUMNS = new Set<TableColumnKey>(['p75', 'p99', 'count']);\nconst SORTABLE_COLUMNS = RIGHT_ALIGNED_COLUMNS;\n\nfunction renderFunctionsTableCell(\n  column: TableColumn,\n  dataRow: TableDataRow,\n  rowIndex: number,\n  columnIndex: number\n) {\n  return (\n    <ProfilingFunctionsTableCell\n      column={column}\n      dataRow={dataRow}\n      rowIndex={rowIndex}\n      columnIndex={columnIndex}\n    />\n  );\n}\n\ninterface ProfilingFunctionsTableCellProps {\n  column: TableColumn;\n  columnIndex: number;\n  dataRow: TableDataRow;\n  rowIndex: number;\n}\n\nconst EmptyValueContainer = styled('span')`\n  color: ${p => p.theme.gray300};\n`;\n\nfunction ProfilingFunctionsTableCell({\n  column,\n  dataRow,\n}: ProfilingFunctionsTableCellProps) {\n  const value = dataRow[column.key];\n\n  switch (column.key) {\n    case 'count':\n      return (\n        <NumberContainer>\n          <Count value={value} />\n        </NumberContainer>\n      );\n    case 'p75':\n    case 'p99':\n      return (\n        <NumberContainer>\n          <PerformanceDuration nanoseconds={value} abbreviation />\n        </NumberContainer>\n      );\n    case 'examples':\n      return <ArrayLinks items={value} />;\n    case 'name':\n    case 'package':\n      const name = value || <EmptyValueContainer>{t('Unknown')}</EmptyValueContainer>;\n      return <Container>{name}</Container>;\n    default:\n      return <Container>{value}</Container>;\n  }\n}\n\ntype TableColumnKey = keyof Omit<SuspectFunction, 'fingerprint' | 'worst'>;\n\ntype TableDataRow = Record<TableColumnKey, any>;\n\ntype TableColumn = GridColumnOrder<TableColumnKey>;\n\nconst COLUMN_ORDER: TableColumnKey[] = [\n  'name',\n  'package',\n  'count',\n  'p75',\n  'p99',\n  'examples',\n];\n\nconst COLUMNS: Record<TableColumnKey, TableColumn> = {\n  name: {\n    key: 'name',\n    name: t('Name'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  package: {\n    key: 'package',\n    name: t('Package'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  path: {\n    key: 'path',\n    name: t('Path'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p75: {\n    key: 'p75',\n    name: t('P75 Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p99: {\n    key: 'p99',\n    name: t('P99 Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  count: {\n    key: 'count',\n    name: t('Count'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  examples: {\n    key: 'examples',\n    name: t('Example Profiles'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n};\n\nexport {FunctionsTable};\n","import {useCallback, useMemo, useState} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport CompactSelect from 'sentry/components/compactSelect';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport Pagination from 'sentry/components/pagination';\nimport {FunctionsTable} from 'sentry/components/profiling/functionsTable';\nimport {ProfileEventsTable} from 'sentry/components/profiling/profileEventsTable';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {PageFilters, Project} from 'sentry/types';\nimport {useFunctions} from 'sentry/utils/profiling/hooks/useFunctions';\nimport {\n  formatSort,\n  useProfileEvents,\n} from 'sentry/utils/profiling/hooks/useProfileEvents';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nconst FUNCTIONS_CURSOR_NAME = 'functionsCursor';\n\ninterface ProfileSummaryContentProps {\n  location: Location;\n  project: Project;\n  query: string;\n  selection: PageFilters;\n  transaction: string;\n}\n\nfunction ProfileSummaryContent(props: ProfileSummaryContentProps) {\n  const profilesCursor = useMemo(\n    () => decodeScalar(props.location.query.cursor),\n    [props.location.query.cursor]\n  );\n\n  const functionsCursor = useMemo(\n    () => decodeScalar(props.location.query.functionsCursor),\n    [props.location.query.functionsCursor]\n  );\n\n  const functionsSort = useMemo(\n    () => decodeScalar(props.location.query.functionsSort, '-p99'),\n    [props.location.query.functionsSort]\n  );\n\n  const sort = formatSort<FieldType>(decodeScalar(props.location.query.sort), FIELDS, {\n    key: 'timestamp',\n    order: 'desc',\n  });\n\n  const profiles = useProfileEvents<FieldType>({\n    cursor: profilesCursor,\n    fields: FIELDS,\n    query: props.query,\n    sort,\n    limit: 5,\n    referrer: 'api.profiling.profile-summary-table',\n  });\n\n  const [functionType, setFunctionType] = useState<'application' | 'system' | 'all'>(\n    'application'\n  );\n\n  const functions = useFunctions({\n    cursor: functionsCursor,\n    project: props.project,\n    query: '', // TODO: This doesnt support the same filters\n    selection: props.selection,\n    transaction: props.transaction,\n    sort: functionsSort,\n    functionType,\n  });\n\n  const handleFunctionsCursor = useCallback((cursor, pathname, query) => {\n    browserHistory.push({\n      pathname,\n      query: {...query, [FUNCTIONS_CURSOR_NAME]: cursor},\n    });\n  }, []);\n\n  const handleFilterChange = useCallback(\n    value => {\n      browserHistory.push({\n        ...props.location,\n        query: {...props.location.query, sort: value},\n      });\n    },\n    [props.location]\n  );\n\n  return (\n    <Layout.Main fullWidth>\n      <TableHeader>\n        <CompactSelect\n          triggerProps={{prefix: t('Filter'), size: 'xs'}}\n          value={sort.order === 'asc' ? sort.key : `-${sort.key}`}\n          options={FILTER_OPTIONS}\n          onChange={opt => handleFilterChange(opt.value)}\n        />\n        <StyledPagination\n          pageLinks={\n            profiles.status === 'success'\n              ? profiles.data?.[2]?.getResponseHeader('Link') ?? null\n              : null\n          }\n          size=\"xs\"\n        />\n      </TableHeader>\n      <ProfileEventsTable\n        columns={FIELDS}\n        data={profiles.status === 'success' ? profiles.data[0] : null}\n        error={profiles.status === 'error' ? t('Unable to load profiles') : null}\n        isLoading={profiles.status === 'loading'}\n        sort={sort}\n      />\n      <TableHeader>\n        <CompactSelect\n          triggerProps={{prefix: t('Suspect Functions'), size: 'xs'}}\n          value={functionType}\n          options={[\n            {\n              label: t('All'),\n              value: 'all' as const,\n            },\n            {\n              label: t('Application'),\n              value: 'application' as const,\n            },\n            {\n              label: t('System'),\n              value: 'system' as const,\n            },\n          ]}\n          onChange={({value}) => setFunctionType(value)}\n        />\n        <StyledPagination\n          pageLinks={functions.type === 'resolved' ? functions.data.pageLinks : null}\n          onCursor={handleFunctionsCursor}\n          size=\"xs\"\n        />\n      </TableHeader>\n      <FunctionsTable\n        error={functions.type === 'errored' ? functions.error : null}\n        isLoading={functions.type === 'initial' || functions.type === 'loading'}\n        functions={functions.type === 'resolved' ? functions.data.functions : []}\n        project={props.project}\n        sort={functionsSort}\n      />\n    </Layout.Main>\n  );\n}\n\nconst FIELDS = [\n  'id',\n  'timestamp',\n  'release',\n  'device.model',\n  'device.classification',\n  'profile.duration',\n] as const;\n\nconst FILTER_OPTIONS = [\n  {\n    label: t('Recent Profiles'),\n    value: '-timestamp',\n  },\n  {\n    label: t('Slowest Profiles'),\n    value: '-profile.duration',\n  },\n  {\n    label: t('Fastest Profiles'),\n    value: 'profile.duration',\n  },\n];\n\ntype FieldType = typeof FIELDS[number];\n\nconst TableHeader = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${space(1)};\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin: 0 0 0 ${space(1)};\n`;\n\nexport {ProfileSummaryContent};\n","import {useEffect, useState} from 'react';\nimport * as Sentry from '@sentry/react';\n\nimport {Client} from 'sentry/api';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters, Project, RequestState} from 'sentry/types';\nimport {SuspectFunction} from 'sentry/types/profiling/core';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ntype FunctionsResult = {\n  functions: SuspectFunction[];\n  pageLinks: string | null;\n};\n\ninterface UseFunctionsOptions {\n  project: Project;\n  query: string;\n  sort: string;\n  transaction: string;\n  cursor?: string;\n  functionType?: 'application' | 'system' | 'all';\n  selection?: PageFilters;\n}\n\nfunction useFunctions({\n  functionType,\n  project,\n  query,\n  transaction,\n  sort,\n  cursor,\n  selection,\n}: UseFunctionsOptions): RequestState<FunctionsResult> {\n  const api = useApi();\n  const organization = useOrganization();\n\n  const [requestState, setRequestState] = useState<RequestState<FunctionsResult>>({\n    type: 'initial',\n  });\n\n  useEffect(() => {\n    if (selection === undefined) {\n      return undefined;\n    }\n\n    setRequestState({type: 'loading'});\n\n    fetchFunctions(api, organization, {\n      functionType,\n      projectSlug: project.slug,\n      query,\n      selection,\n      sort,\n      transaction,\n      cursor,\n    })\n      .then(([functions, , response]) => {\n        setRequestState({\n          type: 'resolved',\n          data: {\n            functions: functions.functions ?? [],\n            pageLinks: response?.getResponseHeader('Link') ?? null,\n          },\n        });\n      })\n      .catch(err => {\n        setRequestState({type: 'errored', error: t('Error: Unable to load functions')});\n        Sentry.captureException(err);\n      });\n\n    return () => api.clear();\n  }, [\n    api,\n    cursor,\n    functionType,\n    organization,\n    project.slug,\n    query,\n    selection,\n    sort,\n    transaction,\n  ]);\n\n  return requestState;\n}\n\nfunction fetchFunctions(\n  api: Client,\n  organization: Organization,\n  {\n    cursor,\n    functionType,\n    projectSlug,\n    query,\n    selection,\n    sort,\n    transaction,\n  }: {\n    cursor: string | undefined;\n    functionType: 'application' | 'system' | 'all' | undefined;\n    projectSlug: Project['slug'];\n    query: string;\n    selection: PageFilters;\n    sort: string;\n    transaction: string;\n  }\n) {\n  const conditions = new MutableSearch(query);\n  conditions.setFilterValues('transaction_name', [transaction]);\n\n  return api.requestPromise(\n    `/projects/${organization.slug}/${projectSlug}/profiling/functions/`,\n    {\n      method: 'GET',\n      includeAllArgs: true,\n      query: {\n        cursor,\n        environment: selection.environments,\n        ...normalizeDateTimeParams(selection.datetime),\n        query: conditions.formatString(),\n        sort,\n        is_application:\n          functionType === 'application'\n            ? '1'\n            : functionType === 'system'\n            ? '0'\n            : undefined,\n      },\n    }\n  );\n}\nexport {useFunctions};\n","import {Fragment, useCallback, useEffect, useMemo} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport IdBadge from 'sentry/components/idBadge';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport {Breadcrumb} from 'sentry/components/profiling/breadcrumb';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport SmartSearchBar, {SmartSearchBarProps} from 'sentry/components/smartSearchBar';\nimport {MAX_QUERY_LENGTH} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {PageFilters, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {isAggregateField} from 'sentry/utils/discover/fields';\nimport {useProfileFilters} from 'sentry/utils/profiling/hooks/useProfileFilters';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nimport {ProfileSummaryContent} from './content';\n\ninterface ProfileSummaryPageProps {\n  location: Location;\n  params: {\n    projectId?: Project['slug'];\n  };\n  selection: PageFilters;\n}\n\nfunction ProfileSummaryPage(props: ProfileSummaryPageProps) {\n  const organization = useOrganization();\n  const {projects} = useProjects({\n    slugs: defined(props.params.projectId) ? [props.params.projectId] : [],\n  });\n\n  useEffect(() => {\n    trackAdvancedAnalyticsEvent('profiling_views.profile_summary', {\n      organization,\n    });\n  }, [organization]);\n\n  // Extract the project matching the provided project slug,\n  // if it doesn't exist, set this to null and handle it accordingly.\n  const project = projects.length === 1 ? projects[0] : null;\n\n  const transaction = decodeScalar(props.location.query.transaction);\n\n  const rawQuery = useMemo(\n    () => decodeScalar(props.location.query.query, ''),\n    [props.location.query.query]\n  );\n\n  const query = useMemo(() => {\n    const search = new MutableSearch(rawQuery);\n\n    if (defined(transaction)) {\n      search.setFilterValues('transaction', [transaction]);\n    }\n\n    // there are no aggregations happening on this page,\n    // so remove any aggregate filters\n    Object.keys(search.filters).forEach(field => {\n      if (isAggregateField(field)) {\n        search.removeFilter(field);\n      }\n    });\n\n    return search.formatString();\n  }, [rawQuery, transaction]);\n\n  const filtersQuery = useMemo(() => {\n    // To avoid querying for the filters each time the query changes,\n    // do not pass the user query to get the filters.\n    const search = new MutableSearch('');\n\n    if (defined(transaction)) {\n      search.setFilterValues('transaction_name', [transaction]);\n    }\n\n    return search.formatString();\n  }, [transaction]);\n\n  const profileFilters = useProfileFilters({\n    query: filtersQuery,\n    selection: props.selection,\n  });\n\n  const handleSearch: SmartSearchBarProps['onSearch'] = useCallback(\n    (searchQuery: string) => {\n      browserHistory.push({\n        ...props.location,\n        query: {\n          ...props.location.query,\n          query: searchQuery || undefined,\n        },\n      });\n    },\n    [props.location]\n  );\n\n  return (\n    <SentryDocumentTitle\n      title={t('Profiling \\u2014 Profile Summary')}\n      orgSlug={organization.slug}\n    >\n      <PageFiltersContainer\n        shouldForceProject={defined(project)}\n        forceProject={project}\n        specificProjectSlugs={defined(project) ? [project.slug] : []}\n      >\n        <NoProjectMessage organization={organization}>\n          {project && transaction && (\n            <Fragment>\n              <Layout.Header>\n                <Layout.HeaderContent>\n                  <Breadcrumb\n                    organization={organization}\n                    trails={[\n                      {\n                        type: 'landing',\n                        payload: {\n                          query: props.location.query,\n                        },\n                      },\n                      {\n                        type: 'profile summary',\n                        payload: {\n                          projectSlug: project.slug,\n                          query: props.location.query,\n                          transaction,\n                        },\n                      },\n                    ]}\n                  />\n                  <Layout.Title>\n                    <Title>\n                      <IdBadge\n                        project={project}\n                        avatarSize={28}\n                        hideName\n                        avatarProps={{hasTooltip: true, tooltip: project.slug}}\n                      />\n                      {transaction}\n                    </Title>\n                  </Layout.Title>\n                </Layout.HeaderContent>\n              </Layout.Header>\n              <Layout.Body>\n                <Layout.Main fullWidth>\n                  <ActionBar>\n                    <PageFilterBar condensed>\n                      <EnvironmentPageFilter />\n                      <DatePageFilter alignDropdown=\"left\" />\n                    </PageFilterBar>\n                    <SmartSearchBar\n                      organization={organization}\n                      hasRecentSearches\n                      searchSource=\"profile_summary\"\n                      supportedTags={profileFilters}\n                      query={rawQuery}\n                      onSearch={handleSearch}\n                      maxQueryLength={MAX_QUERY_LENGTH}\n                    />\n                  </ActionBar>\n                  <ProfileSummaryContent\n                    location={props.location}\n                    project={project}\n                    selection={props.selection}\n                    transaction={transaction}\n                    query={query}\n                  />\n                </Layout.Main>\n              </Layout.Body>\n            </Fragment>\n          )}\n        </NoProjectMessage>\n      </PageFiltersContainer>\n    </SentryDocumentTitle>\n  );\n}\n\nconst Title = styled('div')`\n  display: flex;\n  gap: ${space(1)};\n`;\n\nconst ActionBar = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  grid-template-columns: min-content auto;\n  margin-bottom: ${space(2)};\n`;\n\nexport default withPageFilters(ProfileSummaryPage);\n"],"names":["Breadcrumb","organization","trails","crumbs","useMemo","map","trail","type","to","generateProfilingRouteWithQuery","query","omit","payload","orgSlug","slug","label","t","preservePageFilters","generateProfileSummaryRouteWithQuery","projectSlug","transaction","tab","generateProfileFlamechartRouteWithQuery","generateProfileDetailsRouteWithQuery","profileId","Error","JSON","stringify","trailToCrumb","ArrayLinks","items","expanded","setExpanded","useState","firstItem","ArrayContainer","LinkedItem","item","length","slice","value","ButtonContainer","onClick","ArrayItem","Link","target","p","theme","overflowEllipsis","blue300","space","FunctionsTable","props","location","useLocation","useOrganization","sort","column","order","startsWith","substring","SORTABLE_COLUMNS","has","key","functions","func","worst","examples","rest","allExamples","filter","example","unshift","replaceAll","getShortEventId","project","frameName","name","framePackage","package","generateSortLink","useCallback","direction","functionsSort","isLoading","error","data","columnOrder","COLUMN_ORDER","COLUMNS","columnSortBy","grid","renderHeadCell","renderTableHead","currentSort","rightAlignedColumns","RIGHT_ALIGNED_COLUMNS","sortableColumns","renderBodyCell","renderFunctionsTableCell","Set","dataRow","rowIndex","columnIndex","ProfilingFunctionsTableCell","EmptyValueContainer","gray300","nanoseconds","abbreviation","width","COL_WIDTH_UNDEFINED","path","p75","p99","count","ProfileSummaryContent","profilesCursor","decodeScalar","cursor","functionsCursor","formatSort","FIELDS","profiles","useProfileEvents","fields","limit","referrer","functionType","setFunctionType","selection","api","useApi","requestState","setRequestState","useEffect","undefined","conditions","MutableSearch","setFilterValues","requestPromise","method","includeAllArgs","environment","environments","normalizeDateTimeParams","datetime","formatString","is_application","fetchFunctions","then","response","pageLinks","getResponseHeader","catch","err","Sentry","clear","useFunctions","handleFunctionsCursor","pathname","browserHistory","handleFilterChange","fullWidth","TableHeader","triggerProps","prefix","size","options","FILTER_OPTIONS","onChange","opt","StyledPagination","status","columns","onCursor","Pagination","ProfileSummaryPage","projects","useProjects","slugs","defined","params","projectId","trackAdvancedAnalyticsEvent","rawQuery","search","Object","keys","filters","forEach","field","isAggregateField","removeFilter","filtersQuery","profileFilters","useProfileFilters","handleSearch","searchQuery","title","shouldForceProject","forceProject","specificProjectSlugs","Fragment","Title","avatarSize","hideName","avatarProps","hasTooltip","tooltip","ActionBar","condensed","alignDropdown","hasRecentSearches","searchSource","supportedTags","onSearch","maxQueryLength","MAX_QUERY_LENGTH","withPageFilters"],"sourceRoot":""}