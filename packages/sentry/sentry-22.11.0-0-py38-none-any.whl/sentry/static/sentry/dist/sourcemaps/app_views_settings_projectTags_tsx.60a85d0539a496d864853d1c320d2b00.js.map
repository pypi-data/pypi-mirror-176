{"version":3,"file":"chunks/app_views_settings_projectTags_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectTags.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport {IconDelete} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {TagWithTopValues} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> &\n  AsyncView['props'];\n\ntype State = {\n  tags: Array<TagWithTopValues>;\n} & AsyncView['state'];\n\nclass ProjectTags extends AsyncView<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      tags: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {projectId, orgId} = this.props.params;\n    return [['tags', `/projects/${orgId}/${projectId}/tags/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Tags'), projectId, false);\n  }\n\n  handleDelete = (key: TagWithTopValues['key'], idx: number) => async () => {\n    const {params} = this.props;\n    const {projectId, orgId} = params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/tags/${key}/`, {\n        method: 'DELETE',\n      });\n\n      const tags = [...this.state.tags];\n      tags.splice(idx, 1);\n      this.setState({tags});\n    } catch (error) {\n      this.setState({error: true, loading: false});\n    }\n  };\n\n  renderBody() {\n    const {tags} = this.state;\n    const isEmpty = !tags || !tags.length;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader title={t('Tags')} />\n        <PermissionAlert />\n\n        <TextBlock>\n          {tct(\n            `Each event in Sentry may be annotated with various tags (key and value pairs).\n                 Learn how to [link:add custom tags].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platform-redirect/?next=/enriching-events/tags/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <Panel>\n          <PanelHeader>{t('Tags')}</PanelHeader>\n          <PanelBody>\n            {isEmpty ? (\n              <EmptyMessage>\n                {tct('There are no tags, [link:learn how to add tags]', {\n                  link: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/enrich-data/\" />\n                  ),\n                })}\n              </EmptyMessage>\n            ) : (\n              <Access access={['project:write']}>\n                {({hasAccess}) =>\n                  tags.map(({key, canDelete}, idx) => {\n                    const enabled = canDelete && hasAccess;\n                    return (\n                      <TagPanelItem key={key} data-test-id=\"tag-row\">\n                        <TagName>{key}</TagName>\n                        <Actions>\n                          <Confirm\n                            message={t('Are you sure you want to remove this tag?')}\n                            onConfirm={this.handleDelete(key, idx)}\n                            disabled={!enabled}\n                          >\n                            <Button\n                              size=\"xs\"\n                              title={\n                                enabled\n                                  ? t('Remove tag')\n                                  : hasAccess\n                                  ? t('This tag cannot be deleted.')\n                                  : t('You do not have permission to remove tags.')\n                              }\n                              aria-label={t('Remove tag')}\n                              icon={<IconDelete size=\"xs\" />}\n                              data-test-id=\"delete\"\n                            />\n                          </Confirm>\n                        </Actions>\n                      </TagPanelItem>\n                    );\n                  })\n                }\n              </Access>\n            )}\n          </PanelBody>\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n\nexport default ProjectTags;\n\nconst TagPanelItem = styled(PanelItem)`\n  padding: 0;\n  align-items: center;\n`;\n\nconst TagName = styled('div')`\n  flex: 1;\n  padding: ${space(2)};\n`;\n\nconst Actions = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n`;\n"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","PermissionAlert","access","props","hasAccess","type","t","ProjectTags","key","idx","async","params","projectId","orgId","api","requestPromise","method","tags","state","splice","setState","error","loading","getDefaultState","super","getEndpoints","routeTitleGen","renderBody","isEmpty","length","Fragment","tct","link","href","map","canDelete","enabled","TagPanelItem","TagName","Actions","message","onConfirm","handleDelete","disabled","size","icon","PanelItem","space"],"sourceRoot":""}