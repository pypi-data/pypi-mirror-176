"""DO NOT EDIT THIS FILE!

This file is auto generated by github rest api discription.
See https://github.com/github/rest-api-description for more information.
"""

{% from "client/_param.py.jinja" import endpoint_params, endpoint_raw_params, endpoint_model_params %}
{% from "client/_response.py.jinja" import build_response_type %}
{% from "client/_request.py.jinja" import build_request, build_request_params %}

{% for endpoint in endpoints %}
{% for import_ in endpoint.get_imports() %}
{{ import_ }}
{% endfor %}
{% endfor %}

from typing import TYPE_CHECKING, overload

from pydantic import BaseModel, parse_obj_as

from cityfront.utils import exclude_unset

if TYPE_CHECKING:
    from cityfront import AppWrite
    from cityfront.response import Response

class {{ pascal_case(tag) }}Client:
    def __init__(self, appwrite: "AppWrite"):
        self._appwrite = appwrite

    {% for endpoint in endpoints %}
    {% if endpoint.request_body and endpoint.request_body.allowed_models %}
    {# generate raw data overload #}
    @overload
    def {{ endpoint.name }}(
        self,
        {{ endpoint_raw_params(endpoint) | indent(8) }}
    ) -> "{{ build_response_type(endpoint.success_response) }}":
        ...

    {# generate model data overload #}
    {% for model in endpoint.request_body.allowed_models %}
    @overload
    def {{ endpoint.name }}(
        self,
        {{ endpoint_model_params(endpoint, model) | indent(8) }}
    ) -> "{{ build_response_type(endpoint.success_response) }}":
        ...

    {% endfor %}
    {% endif %}
    def {{ endpoint.name }}(
        self,
        {{ endpoint_params(endpoint) | indent(8) }}
    ) -> "{{ build_response_type(endpoint.success_response) }}":
        headers = {}
        {{ build_request(endpoint) | indent(8) }}
        return self._appwrite.request(
            {{ build_request_params(endpoint) | indent(12) }}
        )

    {% if endpoint.request_body and endpoint.request_body.allowed_models %}
    {# generate raw data overload #}
    @overload
    async def async_{{ endpoint.name }}(
        self,
        {{ endpoint_raw_params(endpoint) | indent(8) }}
    ) -> "{{ build_response_type(endpoint.success_response) }}":
        ...

    {# generate model data overload #}
    {% for model in endpoint.request_body.allowed_models %}
    @overload
    async def async_{{ endpoint.name }}(
        self,
        {{ endpoint_model_params(endpoint, model) | indent(8) }}
    ) -> "{{ build_response_type(endpoint.success_response) }}":
        ...

    {% endfor %}
    {% endif %}
    async def async_{{ endpoint.name }}(
        self,
        {{ endpoint_params(endpoint) | indent(8) }}
    ) -> "{{ build_response_type(endpoint.success_response) }}":
        {{ build_request(endpoint) | indent(8) }}
        headers = {}
        return await self._appwrite.arequest(
            {{ build_request_params(endpoint) | indent(12) }}
        )

    {% endfor %}