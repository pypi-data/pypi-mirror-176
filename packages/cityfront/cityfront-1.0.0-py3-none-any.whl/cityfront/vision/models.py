"""DO NOT EDIT THIS FILE!

This file is auto generated by github rest api discription.
See https://github.com/github/rest-api-description for more information.
"""


from __future__ import annotations

from datetime import datetime
from typing import List, Union

from cityfront.utils import UNSET, Unset
from pydantic import BaseModel, Extra, Field


class CityFrontModel(BaseModel, allow_population_by_field_name=True):
    ...


class Answer(CityFrontModel):
    """Answer

    Represents a Answer record
    """


    id: int = Field(title='Id', default=...)
    answered_at: datetime = Field(title='Answered At', default=...)
    rating: int = Field(title='Rating', default=...)
    question_id: int = Field(title='Question Id', default=...)
    user_id: int = Field(title='User Id', default=...)
    question: Union[Unset, Question] = Field(title='Question', description='Represents a Question record', default=UNSET)
    user: Union[Unset, User] = Field(title='User', description='Represents a User record', default=UNSET)



class Question(CityFrontModel):
    """Question

    Represents a Question record
    """


    id: int = Field(title='Id', default=...)
    question: str = Field(title='Question', default=...)
    category: str = Field(title='Category', default=...)
    feat_label: str = Field(title='Feat Label', default=...)
    answers: Union[Unset, List[Answer]] = Field(title='Answers', default=UNSET)



class User(CityFrontModel):
    """User

    Represents a User record
    """


    id: int = Field(title='Id', default=...)
    email: str = Field(title='Email', default=...)
    name: Union[Unset, str] = Field(title='Name', default=UNSET)
    fdb_ref: str = Field(title='Fdb Ref', default=...)
    answers: Union[Unset, List[Answer]] = Field(title='Answers', default=UNSET)
    vision_board: Union[Unset, List[VisionBoard]] = Field(title='Visionboard', default=UNSET, alias='VisionBoard')



class VisionBoard(CityFrontModel):
    """VisionBoard

    Represents a VisionBoard record
    """


    id: str = Field(title='Id', default=...)
    name: str = Field(title='Name', default=...)
    description: str = Field(title='Description', default=...)
    user_id: int = Field(title='User Id', default=...)
    goals: Union[Unset, List[Goal]] = Field(title='Goals', default=UNSET)
    user: Union[Unset, User] = Field(title='User', description='Represents a User record', default=UNSET)
    img_url: Union[Unset, str] = Field(title='Img Url', default=UNSET)



class Goal(CityFrontModel):
    """Goal

    Represents a Goal record
    """


    id: str = Field(title='Id', default=...)
    name: str = Field(title='Name', default=...)
    description: str = Field(title='Description', default=...)
    url: str = Field(title='Url', default=...)
    vision_id: str = Field(title='Vision Id', default=...)
    vision: Union[Unset, VisionBoard] = Field(title='VisionBoard', description='Represents a VisionBoard record', default=UNSET)
    top_pos: Union[Unset, float] = Field(title='Top Pos', default=UNSET)
    bottom_pos: Union[Unset, float] = Field(title='Bottom Pos', default=UNSET)
    left_pos: Union[Unset, float] = Field(title='Left Pos', default=UNSET)
    right_pos: Union[Unset, float] = Field(title='Right Pos', default=UNSET)
    size_id: Union[Unset, str] = Field(title='Size Id', default=UNSET)
    size: Union[Unset, PrismaModelsSize] = Field(title='Size', description='Represents a Size record', default=UNSET)
    created_at: datetime = Field(title='Createdat', default=..., alias='createdAt')
    updated_at: datetime = Field(title='Updatedat', default=..., alias='updatedAt')



class PrismaModelsSize(CityFrontModel):
    """Size

    Represents a Size record
    """


    id: str = Field(title='Id', default=...)
    height: float = Field(title='Height', default=...)
    width: float = Field(title='Width', default=...)
    goal: Union[Unset, List[Goal]] = Field(title='Goal', default=UNSET, alias='Goal')



class AnswerQuestion(CityFrontModel):
    """AnswerQuestion
    """


    user_ref: str = Field(title='User Ref', default=...)
    answer: int = Field(title='Answer', default=...)
    question_id: int = Field(title='Question Id', default=...)



class BareImgParams(CityFrontModel):
    """BareImgParams
    """


    query: str = Field(title='Query', default=...)
    page: Union[Unset, int] = Field(title='Page', default=0)



class BaseGoal(CityFrontModel):
    """BaseGoal
    """


    name: str = Field(title='Name', default=...)
    description: str = Field(title='Description', default=...)
    url: str = Field(title='Url', default=...)
    coordinates: Union[Unset, Coordinates] = Field(title='Coordinates', default=UNSET)
    size: Union[Unset, VisionApiSchemasSize] = Field(title='Size', default=UNSET)



class Coordinates(CityFrontModel):
    """Coordinates
    """


    top: float = Field(title='Top', default=...)
    left: float = Field(title='Left', default=...)
    bottom: float = Field(title='Bottom', default=...)
    right: float = Field(title='Right', default=...)
    alignment: Union[Unset, float] = Field(title='Alignment', default=0)



class VisionApiSchemasSize(CityFrontModel):
    """Size
    """


    height: Union[Unset, float] = Field(title='Height', default=200)
    width: Union[Unset, float] = Field(title='Width', default=200)



class CreateGoal(CityFrontModel):
    """CreateGoal
    """


    vision_id: str = Field(title='Vision Id', default=...)
    goal: BaseGoal = Field(title='BaseGoal', default=...)



class CreateVision(CityFrontModel):
    """CreateVision
    """


    id: Union[Unset, str] = Field(title='Id', default=UNSET)
    name: str = Field(title='Name', default=...)
    description: str = Field(title='Description', default=...)
    user_id: int = Field(title='User Id', default=...)
    img_url: Union[Unset, str] = Field(title='Img Url', default=UNSET)
    user_ref: str = Field(title='User Ref', default=...)



class GetQuestion(CityFrontModel):
    """GetQuestion
    """


    user_ref: str = Field(title='User Ref', default=...)



class GoalById(CityFrontModel):
    """GoalById
    """


    goal_id: str = Field(title='Goal Id', default=...)



class HTTPValidationError(CityFrontModel):
    """HTTPValidationError
    """


    detail: Union[Unset, List[ValidationError]] = Field(title='Detail', default=UNSET)



class ValidationError(CityFrontModel):
    """ValidationError
    """


    loc: List[Union[str, int]] = Field(title='Location', default=...)
    msg: str = Field(title='Message', default=...)
    type: str = Field(title='Error Type', default=...)



class ImagesResult(CityFrontModel):
    """ImagesResult

    An image result from a search
    """


    position: Union[Unset, int] = Field(title='Position', default=UNSET)
    original: Union[Unset, str] = Field(title='Original', default=UNSET)
    source: Union[Unset, str] = Field(title='Source', default=UNSET)
    title: Union[Unset, str] = Field(title='Title', default=UNSET)
    link: Union[Unset, str] = Field(title='Link', default=UNSET)
    thumbnail: Union[Unset, str] = Field(title='Thumbnail', default=UNSET)



class QuestionStats(CityFrontModel):
    """QuestionStats
    """


    remaining: int = Field(title='Remaining', default=...)
    total: int = Field(title='Total', default=...)
    percentage: Union[Unset, float] = Field(title='Percentage', default=0)



class SearchInformation(CityFrontModel):
    """SearchInformation
    """


    image_results_state: Union[Unset, str] = Field(title='Image Results State', default=UNSET)



class SearchMetadata(CityFrontModel):
    """SearchMetadata
    """


    id: Union[Unset, str] = Field(title='Id', default=UNSET)
    status: Union[Unset, str] = Field(title='Status', default=UNSET)
    json_endpoint: Union[Unset, str] = Field(title='Json Endpoint', default=UNSET)
    created_at: Union[Unset, str] = Field(title='Created At', default=UNSET)
    processed_at: Union[Unset, str] = Field(title='Processed At', default=UNSET)
    google_url: Union[Unset, str] = Field(title='Google Url', default=UNSET)
    raw_html_file: Union[Unset, str] = Field(title='Raw Html File', default=UNSET)
    total_time_taken: Union[Unset, float] = Field(title='Total Time Taken', default=UNSET)



class SearchParameters(CityFrontModel):
    """SearchParameters
    """


    engine: Union[Unset, str] = Field(title='Engine', default=UNSET)
    q: Union[Unset, str] = Field(title='Q', default=UNSET)
    google_domain: Union[Unset, str] = Field(title='Google Domain', default=UNSET)
    ijn: Union[Unset, str] = Field(title='Ijn', default=UNSET)
    device: Union[Unset, str] = Field(title='Device', default=UNSET)
    tbm: Union[Unset, str] = Field(title='Tbm', default=UNSET)



class SerpImageResult(CityFrontModel):
    """SerpImageResult

    The API result call results for an image search.
    """


    search_metadata: Union[Unset, SearchMetadata] = Field(title='SearchMetadata', default=UNSET)
    search_parameters: Union[Unset, SearchParameters] = Field(title='SearchParameters', default=UNSET)
    search_information: Union[Unset, SearchInformation] = Field(title='SearchInformation', default=UNSET)
    images_results: Union[Unset, List[ImagesResult]] = Field(title='Images Results', default=[])



class StdResponseGoal(CityFrontModel):
    """StdResponse[Goal]
    """


    status: int = Field(title='Status', default=...)
    message: str = Field(title='Message', default=...)
    data: Union[Unset, Goal] = Field(title='Goal', description='Represents a Goal record', default=UNSET)



class StdResponseListPrismaModelsVisionBoard(CityFrontModel):
    """StdResponse[List[prisma.models.VisionBoard]]
    """


    status: int = Field(title='Status', default=...)
    message: str = Field(title='Message', default=...)
    data: Union[Unset, List[VisionBoard]] = Field(title='Data', default=UNSET)



class StdResponseVisionBoard(CityFrontModel):
    """StdResponse[VisionBoard]
    """


    status: int = Field(title='Status', default=...)
    message: str = Field(title='Message', default=...)
    data: Union[Unset, VisionBoard] = Field(title='VisionBoard', description='Represents a VisionBoard record', default=UNSET)



class UpdateVision(CityFrontModel):
    """UpdateVision
    """


    vision_id: str = Field(title='Vision Id', default=...)
    name: Union[Unset, str] = Field(title='Name', default=UNSET)
    description: Union[Unset, str] = Field(title='Description', default=UNSET)
    img_url: Union[Unset, str] = Field(title='Img Url', default=UNSET)
    goals: Union[Unset, List[UpsertGoal]] = Field(title='Goals', default=[])



class UpsertGoal(CityFrontModel):
    """UpsertGoal
    """


    name: str = Field(title='Name', default=...)
    description: str = Field(title='Description', default=...)
    url: str = Field(title='Url', default=...)
    coordinates: Union[Unset, Coordinates] = Field(title='Coordinates', default=UNSET)
    size: Union[Unset, VisionApiSchemasSize] = Field(title='Size', default=UNSET)
    goal_id: str = Field(title='Goal Id', default=...)



class UserDetached(CityFrontModel):
    """UserDetached
    """


    id: int = Field(title='Id', default=...)
    email: str = Field(title='Email', default=...)
    name: Union[Unset, str] = Field(title='Name', default=UNSET)
    fdb_ref: str = Field(title='Fdb Ref', default=...)



class VisionDetailsById(CityFrontModel):
    """VisionDetailsById
    """


    vision_id: str = Field(title='Vision Id', default=...)



class VisionsByUserRef(CityFrontModel):
    """VisionsByUserRef
    """


    user_ref: str = Field(title='User Ref', default=...)



Answer.update_forward_refs()
Question.update_forward_refs()
User.update_forward_refs()
VisionBoard.update_forward_refs()
Goal.update_forward_refs()
PrismaModelsSize.update_forward_refs()
AnswerQuestion.update_forward_refs()
BareImgParams.update_forward_refs()
BaseGoal.update_forward_refs()
Coordinates.update_forward_refs()
VisionApiSchemasSize.update_forward_refs()
CreateGoal.update_forward_refs()
CreateVision.update_forward_refs()
GetQuestion.update_forward_refs()
GoalById.update_forward_refs()
HTTPValidationError.update_forward_refs()
ValidationError.update_forward_refs()
ImagesResult.update_forward_refs()
QuestionStats.update_forward_refs()
SearchInformation.update_forward_refs()
SearchMetadata.update_forward_refs()
SearchParameters.update_forward_refs()
SerpImageResult.update_forward_refs()
StdResponseGoal.update_forward_refs()
StdResponseListPrismaModelsVisionBoard.update_forward_refs()
StdResponseVisionBoard.update_forward_refs()
UpdateVision.update_forward_refs()
UpsertGoal.update_forward_refs()
UserDetached.update_forward_refs()
VisionDetailsById.update_forward_refs()
VisionsByUserRef.update_forward_refs()

__all__ = [
    "CityFrontModel",
    "Answer",
    "Question",
    "User",
    "VisionBoard",
    "Goal",
    "PrismaModelsSize",
    "AnswerQuestion",
    "BareImgParams",
    "BaseGoal",
    "Coordinates",
    "VisionApiSchemasSize",
    "CreateGoal",
    "CreateVision",
    "GetQuestion",
    "GoalById",
    "HTTPValidationError",
    "ValidationError",
    "ImagesResult",
    "QuestionStats",
    "SearchInformation",
    "SearchMetadata",
    "SearchParameters",
    "SerpImageResult",
    "StdResponseGoal",
    "StdResponseListPrismaModelsVisionBoard",
    "StdResponseVisionBoard",
    "UpdateVision",
    "UpsertGoal",
    "UserDetached",
    "VisionDetailsById",
    "VisionsByUserRef",
]
