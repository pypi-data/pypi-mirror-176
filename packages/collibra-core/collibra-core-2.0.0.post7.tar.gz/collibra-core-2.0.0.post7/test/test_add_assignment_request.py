# coding: utf-8

"""
    Collibra Data Governance Center Core API

    <p>The Core REST API allows you to create your own integrations with Collibra Data Governance Center.</p><p><i>Create custom applications to help users get access to the right data.</i></p>  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import collibra_core
from collibra_core.models.add_assignment_request import AddAssignmentRequest  # noqa: E501
from collibra_core.rest import ApiException

class TestAddAssignmentRequest(unittest.TestCase):
    """AddAssignmentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AddAssignmentRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = collibra_core.models.add_assignment_request.AddAssignmentRequest()  # noqa: E501
        if include_optional :
            return AddAssignmentRequest(
                id = '0', 
                asset_type_id = '0', 
                status_ids = [
                    '0'
                    ], 
                characteristic_types = [
                    collibra_core.models.characteristic_type_assignment_reference.CharacteristicTypeAssignmentReference(
                        id = '0', 
                        min = 0, 
                        max = 56, 
                        type = 'View', 
                        relation_type_direction = 'TO_SOURCE', 
                        relation_type_restriction = '0', )
                    ], 
                articulation_rules = [
                    collibra_core.models.articulation_rule_request.ArticulationRuleRequest(
                        id = '0', 
                        operation = 'ADD', 
                        score = 1.337, 
                        status_id = '0', 
                        attribute_type_id = '0', )
                    ], 
                validation_rule_ids = [
                    '0'
                    ], 
                data_quality_rule_ids = [
                    '0'
                    ], 
                domain_type_ids = [
                    '0'
                    ], 
                default_status_id = '0', 
                scope_id = '0'
            )
        else :
            return AddAssignmentRequest(
                asset_type_id = '0',
                status_ids = [
                    '0'
                    ],
                default_status_id = '0',
        )

    def testAddAssignmentRequest(self):
        """Test AddAssignmentRequest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
