{"version":3,"file":"9bdcedc5.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AAsEA;;AAtEA;;ACsCA;AACA;;;;;AAKA;;;;;;;;AAQA;;;AAGA;;;AAGA;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;AApDA","sources":["webpack://home-assistant-frontend/./src/components/ha-card.ts","webpack://home-assistant-frontend/./src/layouts/supervisor-error-screen.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-card\")\nexport class HaCard extends LitElement {\n  @property() public header?: string;\n\n  @property({ type: Boolean, reflect: true }) public raised = false;\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--card-background-color, white)\n        );\n        box-shadow: var(--ha-card-box-shadow, none);\n        box-sizing: border-box;\n        border-radius: var(--ha-card-border-radius, 12px);\n        border-width: var(--ha-card-border-width, 1px);\n        border-style: solid;\n        border-color: var(\n          --ha-card-border-color,\n          var(--divider-color, #e0e0e0)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      :host([raised]) {\n        border: none;\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n          0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n          0px 1px 3px 0px rgba(0, 0, 0, 0.12)\n        );\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 48px;\n        padding: 12px 16px 16px;\n        display: block;\n        margin-block-start: 0px;\n        margin-block-end: 0px;\n        font-weight: normal;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid var(--divider-color, #e8e8e8);\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`<h1 class=\"card-header\">${this.header}</h1>`\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-card\": HaCard;\n  }\n}\n","import \"@material/mwc-button\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { atLeastVersion } from \"../common/config/version\";\nimport { applyThemesOnElement } from \"../common/dom/apply_themes_on_element\";\nimport \"../components/ha-card\";\nimport \"../resources/ha-style\";\nimport { haStyle } from \"../resources/styles\";\nimport { HomeAssistant } from \"../types\";\nimport \"./hass-subpage\";\n\n@customElement(\"supervisor-error-screen\")\nclass SupervisorErrorScreen extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n\n    this._applyTheme();\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    if (!oldHass) {\n      return;\n    }\n    if (oldHass.themes !== this.hass.themes) {\n      this._applyTheme();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <hass-subpage\n        .hass=${this.hass}\n        .header=${this.hass.localize(\"ui.errors.supervisor.title\")}\n      >\n        <ha-card header=\"Troubleshooting\">\n          <div class=\"card-content\">\n            <ol>\n              <li>${this.hass.localize(\"ui.errors.supervisor.wait\")}</li>\n              <li>\n                <a\n                  class=\"supervisor_error-link\"\n                  href=\"http://homeassistant.local:4357\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  ${this.hass.localize(\"ui.errors.supervisor.observer\")}\n                </a>\n              </li>\n              <li>${this.hass.localize(\"ui.errors.supervisor.reboot\")}</li>\n              <li>\n                <a href=\"/config/info\" target=\"_parent\">\n                  ${this.hass.localize(\"ui.errors.supervisor.system_health\")}\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"https://www.home-assistant.io/help/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  ${this.hass.localize(\"ui.errors.supervisor.ask\")}\n                </a>\n              </li>\n            </ol>\n          </div>\n        </ha-card>\n      </hass-subpage>\n    `;\n  }\n\n  private _applyTheme() {\n    let themeName: string;\n    let themeSettings: Partial<HomeAssistant[\"selectedTheme\"]> | undefined;\n\n    if (atLeastVersion(this.hass.config.version, 0, 114)) {\n      themeName =\n        this.hass.selectedTheme?.theme ||\n        (this.hass.themes.darkMode && this.hass.themes.default_dark_theme\n          ? this.hass.themes.default_dark_theme!\n          : this.hass.themes.default_theme);\n\n      themeSettings = this.hass.selectedTheme;\n    } else {\n      themeName =\n        (this.hass.selectedTheme as unknown as string) ||\n        this.hass.themes.default_theme;\n    }\n\n    applyThemesOnElement(\n      this.parentElement,\n      this.hass.themes,\n      themeName,\n      themeSettings,\n      true\n    );\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        a {\n          color: var(--mdc-theme-primary);\n        }\n\n        ha-card {\n          width: 600px;\n          margin: auto;\n          padding: 8px;\n        }\n        @media all and (max-width: 500px) {\n          ha-card {\n            width: calc(100vw - 32px);\n          }\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"supervisor-error-screen\": SupervisorErrorScreen;\n  }\n}\n"],"names":[],"sourceRoot":""}