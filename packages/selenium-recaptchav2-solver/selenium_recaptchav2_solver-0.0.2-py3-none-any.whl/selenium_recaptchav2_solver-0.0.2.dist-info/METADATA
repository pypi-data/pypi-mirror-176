Metadata-Version: 2.1
Name: selenium-recaptchav2-solver
Version: 0.0.2
Summary: UNKNOWN
Home-page: https://github.com/thicccat688/selenium-recaptchav2-solver
Author: Tom√°s Perestrelo
Author-email: tomasperestrelo21@gmail.com
License: MIT
Download-URL: https://pypi.org/project/selenium-recaptchav2-solver
Keywords: python,captcha,speech recognition,selenium,web automation
Platform: UNKNOWN
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests

## Selenium-recaptcha-solver

The peerberrypy package is a Python API wrapper for the Peerberry platform.
Peerberry currently has no API documentation and some endpoints could be simplified/optimized, which is one of the main goals of this project.

Peerberry platform: https://peerberry.com/

## Requirements 

Python 3.7+

Main dependencies:
  <ul>
    <li>pandas for the large data handling.</li>
    <li>pyotp for handling two-factor authentication.</li>
    <li>requests for handling HTTP requests to the Peerberry API.</li>
    <li>openpyxl for parsing spreadsheets supplied by Peerberry.</li>
  </ul>

## Installation

```bash
python -m pip install selenium-recaptcha-solver
```

## Usage

```python
from selenium_recaptcha_solver import API
from selenium import webdriver

# Example driver, the API works for any browser
driver = webdriver.Chrome()

# Create API object and bind it to your webdriver
api_client = API(driver=driver)

# Fetch random web page
driver.get('https://foo.bar.com')

# Get example iframe web element
iframe = driver.find_element(
    by='insert-your-locator-here', 
    value='insert-captcha-iframe-here',
)

# Solve Captcha using API
api_client.solve_captcha_v2(iframe=iframe)

# Write the rest of your operations to do after solving the Captcha
```

## Contributing
Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.
Please make sure to update tests as appropriate.

## License
[MIT](https://choosealicense.com/licenses/mit/)


