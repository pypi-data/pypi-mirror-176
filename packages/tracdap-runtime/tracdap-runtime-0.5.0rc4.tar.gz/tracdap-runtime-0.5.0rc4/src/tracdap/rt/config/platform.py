# Code generated by TRAC

from __future__ import annotations
import typing as _tp  # noqa
import dataclasses as _dc  # noqa
import enum as _enum  # noqa

from .common import *  # noqa



@_dc.dataclass
class PlatformConfig:

    config: _tp.Dict[str, str] = _dc.field(default_factory=dict)

    authentication: AuthenticationConfig = None

    platformInfo: PlatformInfo = None

    instances: InstantMap = None

    services: ServiceMap = None


@_dc.dataclass
class PlatformInfo:

    environment: str = None

    production: bool = None

    deploymentInfo: _tp.Dict[str, str] = _dc.field(default_factory=dict)


@_dc.dataclass
class InstantMap:

    meta: _tp.List[InstanceConfig] = _dc.field(default_factory=list)

    data: _tp.List[InstanceConfig] = _dc.field(default_factory=list)

    orch: _tp.List[InstanceConfig] = _dc.field(default_factory=list)


@_dc.dataclass
class InstanceConfig:

    scheme: str = None

    host: str = None

    port: int = None


@_dc.dataclass
class ServiceMap:

    meta: MetaServiceConfig = None

    data: DataServiceConfig = None

    orch: OrchServiceConfig = None


@_dc.dataclass
class MetaServiceConfig:

    port: int = None

    dalType: str = None

    dalProps: _tp.Dict[str, str] = _dc.field(default_factory=dict)


@_dc.dataclass
class DataServiceConfig:

    port: int = None

    defaultStorageKey: str = None

    defaultStorageFormat: str = None

    storage: _tp.Dict[str, StorageConfig] = _dc.field(default_factory=dict)


@_dc.dataclass
class OrchServiceConfig:

    port: int = None

    executor: ExecutorConfig = None

    repositories: _tp.Dict[str, RepositoryConfig] = _dc.field(default_factory=dict)


@_dc.dataclass
class StorageConfig:

    instances: _tp.List[StorageInstance] = _dc.field(default_factory=list)


@_dc.dataclass
class StorageInstance:

    storageType: str = None

    storageProps: _tp.Dict[str, str] = _dc.field(default_factory=dict)


@_dc.dataclass
class RepositoryConfig:

    repoType: str = None

    repoUrl: str = None

    repoProps: _tp.Dict[str, str] = _dc.field(default_factory=dict)


@_dc.dataclass
class ExecutorConfig:

    executorType: str = None

    executorProps: _tp.Dict[str, str] = _dc.field(default_factory=dict)
