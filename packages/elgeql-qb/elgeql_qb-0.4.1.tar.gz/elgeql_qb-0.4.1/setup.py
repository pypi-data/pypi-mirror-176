# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['edgeql_qb', 'edgeql_qb.render']

package_data = \
{'': ['*']}

setup_kwargs = {
    'name': 'elgeql-qb',
    'version': '0.4.1',
    'description': 'EdgeQL Query Builder',
    'long_description': "[![Python 3.10+](https://img.shields.io/badge/python-3.10-green.svg)](https://www.python.org/downloads/release/python-3100/)\n[![Tests](https://github.com/Pentusha/edgeql-qb/actions/workflows/tests.yml/badge.svg)](https://github.com/Pentusha/edgeql-qb/actions/workflows/tests.yml)\n[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=Pentusha_edgeql-qb&metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=Pentusha_edgeql-qb)\n[![Coverage](https://sonarcloud.io/api/project_badges/measure?project=Pentusha_edgeql-qb&metric=coverage)](https://sonarcloud.io/summary/new_code?id=Pentusha_edgeql-qb)\n\n# EdgeQL Query Builder\n\nQuery builder for EdgeDB\n\n## Description\n* Project currently in pre-alpha status. It is not production-ready yet, and It may be buggy and unstable as well.\n* The project is not affiliated with the official developers of EdgeDB.\n* This project only supports a small part of the EdgeDB syntax.\n* The library does not contain any code to connect to the database or to execute queries.\n* The library does not introspect the database and will not check if you made a typo somewhere in a column name. What you write is what you get.\n* Minimal required version of python is 3.10. Not sure if I'll ever do a backport.\n* There is no external dependencies, even on EdgeDB itself.\n\n# Usage examples\nMany examples of queries are given in the [documentation](https://pentusha.github.io/edgeql-qb/queries) directory.\n\n```python\nfrom edgeql_qb import EdgeDBModel\nfrom edgeql_qb.types import int16\nfrom edgedb.blocking_client import create_client\n\n\nclient = create_client()\nMovie = EdgeDBModel('Movie')\nPerson = EdgeDBModel('Person')\n\ninsert = Movie.insert.values(\n    title='Blade Runner 2049',\n    year=int16(2017),\n    director=(\n        Person.select()\n        .where(Person.c.id == director_id)\n        .limit1\n    ),\n    actors=Person.insert.values(\n        first_name='Harrison',\n        last_name='Ford',\n    ),\n).build()\n\n\nselect = (\n    Movie.select(\n        Movie.c.title,\n        Movie.c.year,\n        Movie.c.director(\n            Movie.c.director.first_name,\n            Movie.c.director.last_name,\n        ),\n        Movie.c.actors(\n            Movie.c.actors.first_name,\n            Movie.c.actors.last_name,\n        ),\n    )\n    .where(Movie.c.title == 'Blade Runner 2049')\n    .build()\n)\n\ndelete = Movie.delete.where(Movie.c.title == 'Blade Runner 2049').build()\n\ndecade = (Movie.c.year // 10).label('decade')\ngroup = Movie.group().using(decade).by(decade).build()\n\nclient.query(insert.query, **insert.context)\nresult = client.query(select.query, **select.context)\n\nmovies_by_decade = client.query(group.query, **group.context)\n\nclient.query(delete.query, **delete.context)\n```\n\n## Status\n- Queries:\n  - [x] select\n    - [x] [nested shapes](https://www.edgedb.com/tutorial/nested-structures/shapes)\n      - [x] filters for nested shapes\n      - [x] order by for nested shapes\n      - [x] limit/offset for nested shapes\n      - [x] aggregations for nested shapes\n    - [x] function calls\n    - [x] computed fields\n    - [x] filters\n      - [x] filter by nested paths\n    - [x] limit & offset\n    - [x] order by\n    - [ ] [backlinks](https://www.edgedb.com/docs/edgeql/paths#backlinks)\n    - [x] [subqueries](https://www.edgedb.com/tutorial/nested-structures/shapes/subqueries)\n    - [ ] [polymorphic fields](https://www.edgedb.com/tutorial/nested-structures/polymorphism)\n    - [ ] [link properties](https://www.edgedb.com/docs/edgeql/paths#link-properties) (@notation)\n    - [ ] [detached](https://github.com/edgedb/edgedb/blob/master/docs/reference/edgeql/with.rst)\n  - [x] group\n    - [x] columns\n    - [x] using\n    - [x] by\n    - [x] function calls\n  - [x] update\n    - [x] function calls\n    - [x] nested queries\n  - [x] delete\n    - [x] delete without filters\n    - [x] function calls\n    - [x] limit & offset\n    - [x] order by\n  - [x] insert\n    - [x] [nested inserts](https://www.edgedb.com/docs/edgeql/insert#nested-inserts)\n    - [X] [conditional inserts](https://www.edgedb.com/tutorial/data-mutations/upsert/conditional-inserts)\n    - [x] [idempotent insert](https://www.edgedb.com/tutorial/data-mutations/upsert/idempotent-insert)\n    - [x] [select-or-insert](https://www.edgedb.com/tutorial/data-mutations/upsert/select-or-insert)\n  - [x] function calls\n    - [x] positional arguments\n    - [ ] keyword arguments\n  - [x] [with block](https://www.edgedb.com/tutorial/nested-structures/shapes/with-block)\n    - [x] with literal\n    - [x] with subquery\n    - [x] with module + closure\n    - [ ] with x := subquery select x\n    - [ ] with x := subquery group x\n    - [ ] with x := subquery update x\n    - [ ] with x := Type.column\n  - [ ] if statements\n  - [ ] [globals](https://www.edgedb.com/docs/datamodel/globals#globals)\n  - [ ] [for statements](https://www.edgedb.com/docs/edgeql/paths#link-properties)\n    - [ ] union statements\n  - [ ] queries without models, like select [1,2,3]\n- Types:\n  - [x] type casts\n  - [ ] cal::date_duration\n  - [ ] cal::relative_duration\n  - [ ] std::array\n  - [ ] std::json\n  - [ ] std::range\n  - [ ] std::set\n  - [ ] std::tuple\n  - [x] cal::local_date\n  - [x] cal::local_date\n  - [x] cal::local_datetime\n  - [x] cal::local_time\n  - [x] std::bigint\n  - [x] std::bool\n  - [x] std::bytes\n  - [x] std::datetime\n  - [x] std::decimal\n  - [x] std::duration\n  - [x] std::float32\n  - [x] std::float64\n  - [x] std::int16\n  - [x] std::int32\n  - [x] std::int64\n  - [x] std::str\n  - [x] std::uuid\n\n- Functions\n  - [x] cal\n  - [x] math\n  - [x] std\n  - [x] sys\n",
    'author': 'Ivan Larin',
    'author_email': 'pentusha@gmail.com',
    'maintainer': 'Ivan Larin',
    'maintainer_email': 'pentusha@gmail.com',
    'url': 'https://github.com/Pentusha/edgeql-qb',
    'packages': packages,
    'package_data': package_data,
    'python_requires': '>=3.10,<4.0',
}


setup(**setup_kwargs)
