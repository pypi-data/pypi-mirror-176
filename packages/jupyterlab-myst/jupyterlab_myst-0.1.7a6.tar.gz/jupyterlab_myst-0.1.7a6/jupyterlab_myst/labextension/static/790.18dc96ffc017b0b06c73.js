"use strict";(self.webpackChunkjupyterlab_myst=self.webpackChunkjupyterlab_myst||[]).push([[790],{790:(t,n,e)=>{e.r(n),e.d(n,{default:()=>g});var i=e(208);const a="executablebooks/jupyterlab-markup",s=(0,i.simpleMarkdownItPlugin)(a,{id:"markdown-it-front-matter",title:"Front Matter",description:"Plugin for processing front matter for markdown-it markdown parser",documentationUrls:{Plugin:"https://github.com/ParkSB/markdown-it-front-matter"},examples:{"Example ":"---\nvalid-front-matter: true\n---"},plugin:async()=>{const t=await e.e(588).then(e.t.bind(e,201,23));function n(t){}return[function(e,i){t.default(e,n)}]}});var o=e(321);const l="eval-expr";class r extends o.Role{run(t){const n=new this.state.Token("expr","input",0);return n.attrSet("class",l),n.attrSet("type","hidden"),n.attrSet("value",t.content),n.content=t.content,[n]}}const c=o.directivesDefault.figure,{uri:u}=o.directiveOptions;class p extends o.Directive{constructor(){super(...arguments),this.required_arguments=1,this.optional_arguments=0,this.final_argument_whitespace=!1,this.has_content=!1,this.rawOptions=!0}run(t){const n=this.createToken("expr","input",0,{content:t.body,map:t.bodyMap}),e=u(t.args[0]||"");return n.attrSet("type","hidden"),n.attrSet("class",l),n.attrSet("value",e),[n]}}class d extends c{create_image(t){const n=u(t.args[0]||""),e=this.createToken("expr","input",0,{map:t.map,block:!0});e.attrSet("type","hidden"),e.attrSet("class",l),e.attrSet("value",n),e.attrSet("alt",t.options.alt||"");const i=[];return t.options.alt&&this.state.md.inline.parse(t.options.alt,this.state.md,this.state.env,i),e.children=i,t.options.height&&e.attrSet("height",t.options.height),t.options.width&&e.attrSet("width",t.options.width),t.options.align&&e.attrJoin("class",`align-${t.options.align}`),t.options.class&&e.attrJoin("class",t.options.class.join(" ")),e}}function m(t){return t.includes("\\\\")?`\\begin{split}${t}\\end{split}`:t}function h(t){const n=t.split("\n\n"),e=n.map(m);if(1===n.length)return`\\begin{equation}\\begin{split}${n[0]}\\end{split}\\end{equation}\n`;if(n.length>1){let t=" \\begin{align}\\begin{aligned}";return t+=e.join("\\\\\n"),t+=" \\end{aligned}\\end{align}",t}return e.join("////")}const g=[s,(0,i.simpleMarkdownItPlugin)(a,{id:"markdown-it-docutils",title:"Docutils",description:"Plugin for implementing docutils style roles (inline extension point) and directives (block extension point)",documentationUrls:{Plugin:"https://github.com/executablebooks/markdown-it-docutils"},examples:{"Example ":"```{name} argument\n:option: value\n\ncontent\n```"},plugin:async()=>{const t=await Promise.resolve().then(e.t.bind(e,321,23));return[function(n,e){var i,a;const s=Object.assign(Object.assign({},null!==(i=null==e?void 0:e.roles)&&void 0!==i?i:o.rolesDefault),{eval:r}),l=Object.assign(Object.assign({},null!==(a=null==e?void 0:e.directives)&&void 0!==a?a:o.directivesDefault),{"eval:figure":d,eval:p});t.default(n,Object.assign(Object.assign({},e),{roles:s,directives:l}))}]}}),(0,i.simpleMarkdownItPlugin)(a,{id:"markdown-it-amsmath",title:"amsmath",description:"Plugin for amsmath LaTeX environments",documentationUrls:{Plugin:"https://github.com/executablebooks/markdown-it-amsmath"},examples:{"Example ":"\\begin{equation}\na = 1\n\\end{equation}"},plugin:async()=>[(await e.e(771).then(e.t.bind(e,99,23))).default]}),(0,i.simpleMarkdownItPlugin)(a,{id:"markdown-it-myst-extras",title:"MyST Extras",description:"Additional markdown-it plugins required for the MyST specification",documentationUrls:{Plugin:"https://github.com/executablebooks/markdown-it-myst-extras"},examples:{Blockquotes:"% comment","Block Breaks":"+++","MyST Targets":"(name)=","Colon Fence":":::name\ncontained text\n :::"},plugin:async()=>{const t=await e.e(866).then(e.t.bind(e,936,23));return[function(n,e){t.mystBlockPlugin(n),t.colonFencePlugin(n)}]}}),(0,i.simpleMarkdownItPlugin)(a,{id:"sphinx-display-math",title:"Sphinx Display Math",description:"Plugin for transforming display math using the Sphinx displaymath rules",documentationUrls:{},examples:{"Multi-line Equation ":"$$\nx = y \\\\ + mx + c\n$$\n","Multiple Equations ":"$$x = y\n\ny + z = 2$$\n"},plugin:async()=>[t=>{t.core.ruler.push("sphinx-displaymath",(t=>{t.tokens.forEach((t=>{"math_block"===t.type?t.content=h(t.content):"inline"===t.type&&t.children.forEach((t=>{"math_inline_double"===t.type&&(t.content=h(t.content))}))}))}))}]})]}}]);