#!/bin/sh

export PYTHONPATH=$PYTHONPATH:/usr/local/bin:/usr/bin:/opt/clustermgr:/opt/clustermgr/bin
export PYTHONWARNINGS="ignore"
export PATH=$PATH:/opt/clustermgr/bin

if [ -z "${DATA_DIR}" ]; then
  DATA_DIR="$HOME/.clustermgr4"
fi

CELERY_PID="$DATA_DIR/celery.pid"
CELERY_BEAT_PID="$DATA_DIR/celery-beat.pid"
GUNICORN_PID="$DATA_DIR/gunicorn.pid"
PW_FILE="$DATA_DIR/.pw"
NEW_UUID=`head /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1`
app=`which clusterapp.py`
export PYTHONPATH=$PYTHONPATH:`dirname $app`

#if ! java -version 2>&1 >/dev/null | grep -q "version"; then
#  echo "Java is not found in PATH. Please install Java and/or add PATH before starting Cluster Manager."
#  exit
#fi

start() { 
    if [ ! -f "$DATA_DIR/instance" ]
    then
        echo "Creating clustermgr data directory"
        mkdir -p "$DATA_DIR/instance/"
    fi

    echo "Upgrading Database"
    $app db upgrade

    printf "DEBUG = False\nSECRET_KEY = '$NEW_UUID'\nLICENSE_ENFORCEMENT_ENABLED = False" > "$DATA_DIR/instance/config.py"

    if [ ! -f "$DATA_DIR/.start" ]
    then
        echo `date +%s` > $DATA_DIR/.start
    fi

    echo "Starting Celery Worker"
    if [ -f "$CELERY_PID" ]
    then
        echo "Celery Worker pid file $CELERY_PID exists, not starting"
    else
        NEW_UUID=$NEW_UUID celery multi start -A clusterapp.celery worker --loglevel=info -P prefork --pidfile=$CELERY_PID --logfile="$DATA_DIR/logs/celery.log" --detach
    fi
    
    echo "Starting Celery Beat"
    if [ -f "$CELERY_BEAT_PID" ]
    then
        echo "Celery Beat pid file $CELERY_BEAT_PID exists, not starting"
    else
        NEW_UUID=$NEW_UUID celery -A clusterapp.celery beat --loglevel=info --pidfile=$CELERY_BEAT_PID --logfile="$DATA_DIR/logs/celery-beat.log" -s "$DATA_DIR/celerybeat-schedule" --detach
    fi

    echo "Starting Gunicorn Web Server"
    if [ -f "$GUNICORN_PID" ]
    then
        echo "Gunicorn pid file $GUNICORN_PID exists, not starting"
    else
        NEW_UUID=$NEW_UUID gunicorn --daemon --pid $GUNICORN_PID  --error-logfile "$DATA_DIR/logs/gunicorn_error.log"   -w 2 -b 127.0.0.1:5000 clusterapp:app
    fi
}

stop() {
    
    echo "Stopping Celery Workers"
    ps auxww | grep '[c]elery worker' | awk '{print $2}' | xargs kill -9
    
    if [ -f "$CELERY_PID" ]
    then
        rm "$CELERY_PID"
    fi

    
    echo "Stopping Celery Beats"
    ps auxww | grep '[c]elery beat' | awk '{print $2}' | xargs kill -9

    if [ -f "$CELERY_BEAT_PID" ]
    then
        rm "$CELERY_BEAT_PID"
    fi


    echo "Stopping Gunicorn Web Server"
    ps auxww | grep '[g]unicorn --daemon' | awk '{print $2}' | xargs kill -9

    if [ -f "$GUNICORN_PID" ]
    then
        rm "$GUNICORN_PID"
    fi

    if [ -f "$PW_FILE" ]
    then
        rm "$PW_FILE"
    fi

}

restart() {
    stop
    start
}



case "$1" in
    start)
        start
    ;;

    stop)
        stop
    ;;


    restart)
        restart
    ;;

    *)
        echo "Usage: clustermgr-cli {start|stop|restart}"
        exit 64
    ;;
esac
