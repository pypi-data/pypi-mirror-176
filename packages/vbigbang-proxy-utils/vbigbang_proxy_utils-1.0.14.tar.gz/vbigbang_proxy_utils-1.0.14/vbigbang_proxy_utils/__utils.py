import ctypes
import inspect
import math
import time
import uuid

import redis

xx_http_city_code = {'北京市': 215, '天津市': 235, '石家庄市': 255, '唐山市': 279, '秦皇岛市': 294, '邯郸市': 302,
                     '邢台市': 322, '保定市': 340,
                     '张家口市': 366, '承德市': 382, '沧州市': 394, '廊坊市': 410, '衡水市': 421, '太原市': 434,
                     '大同市': 445, '阳泉市': 457,
                     '长治市': 461, '晋城市': 473, '朔州市': 479, '晋中市': 486, '运城市': 498, '忻州市': 512,
                     '临汾市': 527,
                     '吕梁市': 545,
                     '呼和浩特市': 560, '包头市': 570, '乌海市': 580, '赤峰市': 584, '通辽市': 597, '鄂尔多斯市': 606,
                     '呼伦贝尔市': 615, '巴彦淖尔市': 629,
                     '乌兰察布市': 637, '兴安盟': 649, '锡林郭勒盟': 656, '阿拉善盟': 669, '沈阳市': 674, '大连市': 687,
                     '鞍山市': 698, '抚顺市': 705,
                     '本溪市': 713, '丹东市': 720, '锦州市': 727, '营口市': 735, '阜新市': 742, '辽阳市': 750,
                     '盘锦市': 758,
                     '铁岭市': 763,
                     '朝阳市': 771,
                     '葫芦岛市': 779, '长春市': 787, '吉林市': 797, '四平市': 807, '辽源市': 812, '通化市': 817,
                     '白山市': 825, '松原市': 832,
                     '白城市': 838, '延边朝鲜族自治州': 844, '哈尔滨市': 854, '齐齐哈尔市': 874, '鸡西市': 891,
                     '鹤岗市': 901, '双鸭山市': 910,
                     '大庆市': 919,
                     '伊春市': 929, '佳木斯市': 947, '七台河市': 957, '牡丹江市': 962, '黑河市': 972, '绥化市': 979,
                     '大兴安岭地区': 990, '上海市': 995,
                     '南京市': 1015, '无锡市': 1029, '徐州市': 1038, '常州市': 1049, '苏州市': 1057, '南通市': 1069,
                     '连云港市': 1078,
                     '淮安市': 1085,
                     '盐城市': 1093, '扬州市': 1103, '镇江市': 1111, '泰州市': 1118, '宿迁市': 1125, '杭州市': 1132,
                     '宁波市': 1146, '温州市': 1158,
                     '嘉兴市': 1170, '湖州市': 1178, '绍兴市': 1184, '金华市': 1191, '衢州市': 1201, '舟山市': 1208,
                     '台州市': 1212, '丽水市': 1222,
                     '合肥市': 1233, '芜湖市': 1241, '蚌埠市': 1249, '淮南市': 1257, '马鞍山市': 1264, '淮北市': 1269,
                     '铜陵市': 1274,
                     '安庆市': 1278,
                     '黄山市': 1289, '滁州市': 1297, '阜阳市': 1306, '宿州市': 1315, '巢湖市': 1321, '六安市': 1327,
                     '亳州市': 1335, '池州市': 1340,
                     '宣城市': 1345, '福州市': 1354, '厦门市': 1367, '莆田市': 1374, '三明市': 1380, '泉州市': 1393,
                     '漳州市': 1406, '南平市': 1418,
                     '龙岩市': 1429, '宁德市': 1437, '南昌市': 1448, '景德镇市': 1457, '萍乡市': 1462, '九江市': 1468,
                     '新余市': 1481,
                     '鹰潭市': 1484,
                     '赣州市': 1488, '吉安市': 1507, '宜春市': 1521, '抚州市': 1532, '上饶市': 1544, '济南市': 1558,
                     '青岛市': 1569, '淄博市': 1582,
                     '枣庄市': 1591, '东营市': 1597, '烟台市': 1603, '潍坊市': 1616, '济宁市': 1629, '泰安市': 1641,
                     '威海市': 1648, '日照市': 1653,
                     '莱芜市': 1658, '临沂市': 1661, '德州市': 1673, '聊城市': 1685, '滨州市': 1694, '菏泽市': 1702,
                     '郑州市': 1713, '开封市': 1726,
                     '洛阳市': 1734, '平顶山市': 1750, '安阳市': 1760, '鹤壁市': 1770, '新乡市': 1776, '焦作市': 1789,
                     '濮阳市': 1801,
                     '许昌市': 1808,
                     '漯河市': 1815, '三门峡市': 1821, '南阳市': 1829, '商丘市': 1843, '信阳市': 1853, '周口市': 1864,
                     '驻马店市': 1875,
                     '武汉市': 1887,
                     '黄石市': 1900, '十堰市': 1907, '宜昌市': 1916, '襄樊市': 1930, '鄂州市': 1940, '荆门市': 1944,
                     '孝感市': 1950, '荆州市': 1958,
                     '黄冈市': 1967, '咸宁市': 1978, '随州市': 1985, '恩施土家族苗族自治州': 1988, '神农架': 1997,
                     '长沙市': 2003, '株洲市': 2013,
                     '湘潭市': 2023, '衡阳市': 2029, '邵阳市': 2042, '岳阳市': 2055, '常德市': 2065, '张家界市': 2075,
                     '益阳市': 2080,
                     '郴州市': 2087,
                     '永州市': 2099, '怀化市': 2111, '娄底市': 2124, '湘西土家族苗族自治州': 2130, '广州市': 2140,
                     '韶关市': 2152, '深圳市': 2163,
                     '珠海市': 2169, '汕头市': 2173, '佛山市': 2181, '江门市': 2187, '湛江市': 2195, '茂名市': 2205,
                     '肇庆市': 2212, '惠州市': 2221,
                     '梅州市': 2227, '汕尾市': 2236, '河源市': 2240, '阳江市': 2247, '清远市': 2252, '东莞市': 2261,
                     '中山市': 2262, '潮州市': 2263,
                     '揭阳市': 2267, '云浮市': 2273, '南宁市': 2280, '柳州市': 2293, '桂林市': 2304, '梧州市': 2322,
                     '北海市': 2330,
                     '防城港市': 2335,
                     '钦州市': 2340, '贵港市': 2345, '玉林市': 2351, '百色市': 2358, '贺州市': 2371, '河池市': 2376,
                     '来宾市': 2388, '崇左市': 2395,
                     '海口市': 2404, '三亚市': 2409, '重庆市': 2430, '成都市': 2470, '自贡市': 2490, '攀枝花市': 2497,
                     '泸州市': 2503,
                     '德阳市': 2511,
                     '绵阳市': 2518, '广元市': 2528, '遂宁市': 2535, '内江市': 2541, '乐山市': 2546, '南充市': 2557,
                     '眉山市': 2567, '宜宾市': 2574,
                     '广安市': 2585, '达州市': 2591, '雅安市': 2599, '巴中市': 2608, '资阳市': 2613,
                     '阿坝藏族羌族自治州': 2618, '甘孜藏族自治州': 2632,
                     '凉山彝族自治州': 2651, '贵阳市': 2670, '六盘水市': 2680, '遵义市': 2685, '安顺市': 2700,
                     '铜仁地区': 2707,
                     '黔西南布依族苗族自治州': 2718,
                     '毕节地区': 2727, '黔东南苗族侗族自治州': 2736, '黔南布依族苗族自治州': 2753, '昆明市': 2767,
                     '曲靖市': 2782, '玉溪市': 2792,
                     '保山市': 2802,
                     '昭通市': 2808, '丽江市': 2820, '思茅市': 2826, '临沧市': 2837, '楚雄彝族自治州': 2846,
                     '红河哈尼族彝族自治州': 2857,
                     '文山壮族苗族自治州': 2871,
                     '西双版纳傣族自治州': 2880, '大理白族自治州': 2884, '德宏傣族景颇族自治州': 2897,
                     '怒江傈僳族自治州': 2903, '迪庆藏族自治州': 2908, '拉萨市': 2913,
                     '昌都地区': 2922, '山南地区': 2934, '日喀则地区': 2947, '那曲地区': 2966, '阿里地区': 2977,
                     '林芝地区': 2985, '西安市': 2994,
                     '铜川市': 3006, '宝鸡市': 3011, '咸阳市': 3024, '渭南市': 3039, '延安市': 3051, '汉中市': 3065,
                     '榆林市': 3077, '安康市': 3090,
                     '商洛市': 3101, '兰州市': 3110, '嘉峪关市': 3118, '金昌市': 3119, '白银市': 3122, '天水市': 3128,
                     '武威市': 3136,
                     '张掖市': 3141,
                     '平凉市': 3148, '酒泉市': 3156, '庆阳市': 3164, '定西市': 3173, '陇南市': 3181,
                     '临夏回族自治州': 3191,
                     '甘南藏族自治州': 3200,
                     '西宁市': 3210, '海东地区': 3217, '海北藏族自治州': 3224, '黄南藏族自治州': 3229,
                     '海南藏族自治州': 3234, '果洛藏族自治州': 3240,
                     '玉树藏族自治州': 3247, '海西蒙古族藏族自治州': 3254, '银川市': 3261, '石嘴山市': 3268,
                     '吴忠市': 3272,
                     '固原市': 3277, '中卫市': 3283,
                     '乌鲁木齐市': 3288, '克拉玛依市': 3295, '吐鲁番地区': 3300, '哈密地区': 3304,
                     '昌吉回族自治州': 3308,
                     '博尔塔拉蒙古自治州': 3317,
                     '巴音郭楞蒙古自治州': 3321, '阿克苏地区': 3331, '克孜勒苏柯尔克孜自治州': 3341, '喀什地区': 3346,
                     '和田地区': 3359, '伊犁哈萨克自治州': 3368,
                     '塔城地区': 3379, '阿勒泰地区': 3387, '石河子市': 3395, '阿拉尔市': 3396, '图木舒克市': 3397,
                     '五家渠市': 3398,
                     '自治区直辖县级行政区划': 3426,
                     '省直辖县级行政区划': 3430, '普洱市': 3429, '湖北省省直辖县级行政区划': 3446,
                     '河南省省直辖县级行政区划': 3447, '海南省省直辖县级行政区划': 3448,
                     '新疆维吾尔自治区省直辖县级行政区划': 3449, '宁夏回族自治区省直辖县级行政区划': 3450,
                     '辽宁省省直辖县级行政区划': 3451, '广东省省直辖县级行政区划': 3452,
                     '浙江省省直辖县级行政区划': 3453, '吉林省省直辖县级行政区划': 3454,
                     '安徽省省直辖县级行政区划': 3455,
                     '陕西省省直辖县级行政区划': 3456,
                     '河北省省直辖县级行政区划': 3457, '江苏省省直辖县级行政区划': 3458,
                     '黑龙江省省直辖县级行政区划': 3459,
                     '江西省省直辖县级行政区划': 3460, '湘西土家族苗族自治州市': 2130,
                     '贵州省省直辖县级行政区划': 3461, '湖南省省直辖县级行政区划': 3462}

zm_http_city_code = {
    "北京市": 110200,
    "石家庄市": 130100,
    "唐山市": 130200,
    "保定市": 130600,
    "衡水市": 131100,
    "呼和浩特市": 150100,
    "鄂尔多斯市": 150600,
    "兴安盟": 152200,
    "大连市": 210200,
    "鞍山市": 210300,
    "锦州市": 210700,
    "营口市": 210800,
    "辽阳市": 211000,
    "盘锦市": 211100,
    "铁岭市": 211200,
    "吉林市": 220200,
    "白山市": 220600,
    "鹤岗市": 230400,
    "上海市": 310200,
    "无锡市": 320200,
    "徐州市": 320300,
    "南通市": 320600,
    "连云港市": 320700,
    "淮安市": 320800,
    "盐城市": 320900,
    "扬州市": 321000,
    "泰州市": 321200,
    "宿迁市": 321300,
    "杭州市": 330109,
    "宁波市": 330200,
    "温州市": 330300,
    "嘉兴市": 330400,
    "湖州市": 330500,
    "金华市": 330700,
    "衢州市": 330800,
    "舟山市": 330900,
    "丽水市": 331100,
    "芜湖市": 340200,
    "淮北市": 340600,
    "铜陵市": 340700,
    "滁州市": 341100,
    "池州市": 341700,
    "福州市": 350100,
    "莆田市": 350300,
    "三明市": 350400,
    "泉州市": 350500,
    "漳州市": 350600,
    "南平市": 350700,
    "邵武市": 350781,
    "宁德市": 350900,
    "宜春市": 360900,
    "抚州市": 361000,
    "济南市": 370100,
    "淄博市": 370300,
    "烟台市": 370600,
    "日照市": 371100,
    "三门峡市": 411200,
    "黄石市": 420200,
    "襄樊市": 420600,
    "荆门市": 420800,
    "孝感市": 420900,
    "长沙市": 430100,
    "湘潭市": 430300,
    "邵阳市": 430500,
    "常德市": 430700,
    "郴州市": 431000,
    "怀化市": 431200,
    "吉首市": 433101,
    "广州市": 440100,
    "汕头市": 440500,
    "佛山市": 440600,
    "桂林市": 450300,
    "重庆市": 500112,
    "成都市": 510100,
    "自贡市": 510300,
    "泸州市": 510500,
    "德阳市": 510600,
    "绵阳市": 510700,
    "广元市": 510800,
    "乐山市": 511100,
    "达州市": 511700,
    "雅安市": 511800,
    "西昌市": 513401,
    "六盘水市": 520200,
    "遵义市": 520300,
    "西安市": 610100,
    "延安市": 610600,
    "汉中市": 610700,
    "榆林市": 610800,
    "安康市": 610900,
    "石嘴山市": 640200,
}

zm_http_province_code = {
    '北京市': 110000,
    '天津市': 120000,
    '河北省': 130000,
    '内蒙古自治区': 150000,
    '辽宁省': 210000,
    '黑龙江省': 230000,
    '江苏省': 320000,
    '浙江省': 330000,
    '安徽省': 340000,
    '福建省': 350000,
    '江西省': 360000,
    '山东省': 370000,
    '河南省': 410000,
    '湖北省': 420000,
    '湖南省': 430000,
    '广东省': 440000,
    '广西壮族自治区': 450000,
    '重庆市': 500000,
    '重庆': 500000,
    '四川省': 510000,
    '贵州省': 520000,
    '陕西省': 610000,
}


def _async_raise(tid, exctype):
    """raises the exception, performs cleanup if needed"""
    tid = ctypes.c_long(tid)
    if not inspect.isclass(exctype):
        exctype = type(exctype)
    res = ctypes.pythonapi.PyThreadState_SetAsyncExc(tid, ctypes.py_object(exctype))
    if res == 0:
        raise ValueError("invalid thread id")
    elif res != 1:
        # """if it returns a number greater than one, you're in trouble,
        # and you should call it again with exc=NULL to revert the effect"""
        ctypes.pythonapi.PyThreadState_SetAsyncExc(tid, None)
        raise SystemError("PyThreadState_SetAsyncExc failed")


def stop_thread(thread):
    _async_raise(thread.ident, SystemExit)


def acquire_lock_with_timeout(redis_conn: redis.Redis, lock_name, acquire_timeout=3, lock_timeout=2):
    """
    基于 Redis 实现的分布式锁

    :param redis_conn:
    :param lock_name: 锁的名称
    :param acquire_timeout: 获取锁的超时时间，默认 3 秒
    :param lock_timeout: 锁的超时时间，默认 2 秒
    :return:
    """

    identifier = str(uuid.uuid4())
    lock_name = f'lock:{lock_name}'
    lock_timeout = int(math.ceil(lock_timeout))

    end = time.time() + acquire_timeout

    while time.time() < end:
        # 如果不存在这个锁则加锁并设置过期时间，避免死锁
        if redis_conn.set(lock_name, identifier, ex=lock_timeout, nx=True):
            return identifier
        time.sleep(0.005)
    return False


def release_lock(redis_conn: redis.Redis, lock_name, identifier):
    """
    释放锁

    :param redis_conn:
    :param lock_name: 锁的名称
    :param identifier: 锁的标识
    :return:
    """
    unlock_script = """
    if redis.call("get",KEYS[1]) == ARGV[1] then
        return redis.call("del",KEYS[1])
    else
        return 0
    end
    """
    lock_name = f'lock:{lock_name}'
    unlock = redis_conn.register_script(unlock_script)
    result = unlock(keys=[lock_name], args=[identifier])
    if result:
        return True
    else:
        return False


def can_pass_fixed_window(redis_conn: redis.Redis, user, action, time_zone=60, times=30, go_timeout=2,
                          use_lock: bool = False):
    """
    :param redis_conn:
    :param use_lock:
    :param go_timeout: 超时时间
    :param time_zone: 接口限制的时间段
    :param times: 限制上限
    :param user: 用户唯一标识
    :param action: 用户访问的接口标识(即用户在客户端进行的动作)
    :param time_zone: 限制的时间段内允许多少请求通过
    """
    key = '{}-{}'.format(action, user)
    identifier = None
    # self.redis_conn 表示redis连接对象
    if use_lock:
        identifier = acquire_lock_with_timeout(lock_name=key, acquire_timeout=go_timeout, lock_timeout=time_zone,
                                               redis_conn=redis_conn)
        if identifier is False:
            return False
    count = redis_conn.get(key)

    res = False
    if count is None:
        redis_conn.incr(key)
        # 首次添加 需要设置过期时间
        redis_conn.expire(key, time_zone)
        res = True

    if count is not None and int(count) < times:
        redis_conn.incr(key)
        res = True
        # 万一添加的一瞬间 key过期了 重新设置过期时间
        count = redis_conn.get(key)
        if count is not None and int(count) == 1:
            redis_conn.expire(key, time_zone)
    # 释放锁后再返回
    if use_lock:
        release_lock(lock_name=key, identifier=identifier, redis_conn=redis_conn)
    return res


def wait_window(redis_conn: redis.Redis, user, action, time_zone, times, use_lock=False):
    """
    限速等待
    :param redis_conn:
    :param use_lock: 是否使用严格限制
    :param user:
    :param action:
    :param time_zone:
    :param times:
    :return:
    """
    while True:
        go = can_pass_fixed_window(user=user, action=action, time_zone=time_zone, times=times, use_lock=use_lock,
                                   redis_conn=redis_conn)
        if go:
            break
        time.sleep(5 / 1000)
    return True
