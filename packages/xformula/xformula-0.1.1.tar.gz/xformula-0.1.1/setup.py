# -*- coding: utf-8 -*-
from setuptools import setup

package_dir = \
{'': 'src'}

packages = \
['xformula',
 'xformula.arch',
 'xformula.arch.bisect',
 'xformula.arch.enumeration',
 'xformula.arch.meta',
 'xformula.arch.runtime',
 'xformula.arch.runtime.reflection',
 'xformula.runtime',
 'xformula.runtime.core',
 'xformula.runtime.core.context',
 'xformula.runtime.core.context.abc',
 'xformula.syntax',
 'xformula.syntax.ast',
 'xformula.syntax.ast.nodes',
 'xformula.syntax.ast.nodes.abc',
 'xformula.syntax.core',
 'xformula.syntax.core.context',
 'xformula.syntax.core.context.abc',
 'xformula.syntax.core.customization',
 'xformula.syntax.core.customization.tagging',
 'xformula.syntax.core.features',
 'xformula.syntax.core.features.abc',
 'xformula.syntax.core.features.attributes',
 'xformula.syntax.core.features.attributes.ast',
 'xformula.syntax.core.features.attributes.ast.nodes',
 'xformula.syntax.core.features.attributes.definitions',
 'xformula.syntax.core.features.attributes.definitions.non_terminals',
 'xformula.syntax.core.features.base',
 'xformula.syntax.core.features.base.definitions',
 'xformula.syntax.core.features.base.definitions.directives',
 'xformula.syntax.core.features.base.definitions.terminals',
 'xformula.syntax.core.features.calls',
 'xformula.syntax.core.features.calls.ast',
 'xformula.syntax.core.features.calls.ast.nodes',
 'xformula.syntax.core.features.calls.definitions',
 'xformula.syntax.core.features.calls.definitions.non_terminals',
 'xformula.syntax.core.features.containers',
 'xformula.syntax.core.features.containers.ast',
 'xformula.syntax.core.features.containers.ast.nodes',
 'xformula.syntax.core.features.containers.definitions',
 'xformula.syntax.core.features.containers.definitions.non_terminals',
 'xformula.syntax.core.features.expressions',
 'xformula.syntax.core.features.expressions.definitions',
 'xformula.syntax.core.features.expressions.definitions.non_terminals',
 'xformula.syntax.core.features.identifiers',
 'xformula.syntax.core.features.identifiers.ast',
 'xformula.syntax.core.features.identifiers.ast.nodes',
 'xformula.syntax.core.features.identifiers.definitions',
 'xformula.syntax.core.features.identifiers.definitions.non_terminals',
 'xformula.syntax.core.features.identifiers.definitions.terminals',
 'xformula.syntax.core.features.literals',
 'xformula.syntax.core.features.literals.ast',
 'xformula.syntax.core.features.literals.ast.nodes',
 'xformula.syntax.core.features.literals.definitions',
 'xformula.syntax.core.features.literals.definitions.non_terminals',
 'xformula.syntax.core.features.literals.definitions.terminals',
 'xformula.syntax.core.features.mappings',
 'xformula.syntax.core.features.mappings.ast',
 'xformula.syntax.core.features.mappings.ast.nodes',
 'xformula.syntax.core.features.mappings.definitions',
 'xformula.syntax.core.features.mappings.definitions.non_terminals',
 'xformula.syntax.core.features.operations',
 'xformula.syntax.core.features.operations.ast',
 'xformula.syntax.core.features.operations.ast.nodes',
 'xformula.syntax.core.features.operations.definitions',
 'xformula.syntax.core.features.operations.definitions.non_terminals',
 'xformula.syntax.core.features.operations.generators',
 'xformula.syntax.core.features.operations.runtime',
 'xformula.syntax.core.features.operations.runtime.reflection',
 'xformula.syntax.core.features.polyfill',
 'xformula.syntax.core.features.polyfill.definitions',
 'xformula.syntax.core.features.polyfill.generators',
 'xformula.syntax.core.features.polyfill.runtime',
 'xformula.syntax.core.features.polyfill.runtime.reflection',
 'xformula.syntax.core.features.primaries',
 'xformula.syntax.core.features.primaries.definitions',
 'xformula.syntax.core.features.primaries.definitions.non_terminals',
 'xformula.syntax.core.features.separators',
 'xformula.syntax.core.features.separators.definitions',
 'xformula.syntax.core.features.separators.definitions.templates',
 'xformula.syntax.core.features.terms',
 'xformula.syntax.core.features.terms.definitions',
 'xformula.syntax.core.features.terms.definitions.non_terminals',
 'xformula.syntax.core.features.validation',
 'xformula.syntax.core.features.validation.detectors',
 'xformula.syntax.core.features.validation.errors',
 'xformula.syntax.core.features.wrappers',
 'xformula.syntax.core.features.wrappers.definitions',
 'xformula.syntax.core.features.wrappers.definitions.templates',
 'xformula.syntax.core.operations',
 'xformula.syntax.core.operations.abc',
 'xformula.syntax.grammar',
 'xformula.syntax.grammar.definitions',
 'xformula.syntax.grammar.definitions.abc',
 'xformula.syntax.grammar.definitions.runtime',
 'xformula.syntax.grammar.definitions.runtime.reflection',
 'xformula.syntax.grammar.directives',
 'xformula.syntax.grammar.directives.abc',
 'xformula.syntax.grammar.ebnf',
 'xformula.syntax.grammar.non_terminals',
 'xformula.syntax.grammar.non_terminals.abc',
 'xformula.syntax.grammar.regex',
 'xformula.syntax.grammar.templates',
 'xformula.syntax.grammar.templates.abc',
 'xformula.syntax.grammar.terminals',
 'xformula.syntax.grammar.terminals.abc',
 'xformula.syntax.lexer',
 'xformula.syntax.lexer.tokens',
 'xformula.syntax.lexer.tokens.abc',
 'xformula.syntax.parser',
 'xformula.syntax.parser.transformers',
 'xformula.syntax.parser.transformers.abc',
 'xformula.syntax.parser.transformers.runtime',
 'xformula.syntax.parser.transformers.runtime.reflection',
 'xformula.syntax.parser.trees',
 'xformula.syntax.parser.trees.abc']

package_data = \
{'': ['*']}

install_requires = \
['lark>=1.1.4']

setup_kwargs = {
    'name': 'xformula',
    'version': '0.1.1',
    'description': 'Highly customizable language front-end, aimed to be a base for custom DSL evaluators.',
    'long_description': "# XFormula\n\nHighly customizable language front-end, aimed to be a base\nfor custom DSL evaluators.\n\n---\n\n**Developer note:** I've created this library to use in many of my projects and\ndecided to publish the source code, because it may help somebody to write a DSL\ncompiler or evaluator can get benefit from Python ecosystem, within a reasonable\ntime.\n\nI couldn't write documentation because of my tight schedule in these days. \nBut I see the code as self-explanatory, feel free to read it if you're interested.\n\nIn the meantime, please note that **this project is still in development**.\n\n---\n\n\n## Features:\n\n- Built on top of [Lark Parser Toolkit](https://lark-parser.readthedocs.io/en/latest/)\n- - LALR(1), Earley and CYK parsing algorithms are supported by Lark;\n    XFormula uses LALR(1) by default\n- Automatic EBNF grammar generator via declarative Python functions\n  (The final grammar generated using the default features can be found in\n  [out/Grammar.lark](https://github.com/ertgl/xformula/blob/main/out/Grammar.lark)\n  file)\n- Modular featurization system to manipulate grammar and parser context dynamically. \n- A ready-to-use compact dialect that supports some general purpose data types\n  and basic symbols\n  (See `xformula.syntax.ast` package)\n\nSee `xformula.syntax.core.features` package and\n`xformula.syntax.core.operations.default_operator_precedences` module for more\ninformation about the default behaviours.\n\n\n## License\n\n[MIT](https://github.com/ertgl/xformula/blob/main/LICENSE)\n",
    'author': 'Ertuğrul Keremoğlu',
    'author_email': 'ertugkeremoglu@gmail.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'None',
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.11,<4.0',
}


setup(**setup_kwargs)
