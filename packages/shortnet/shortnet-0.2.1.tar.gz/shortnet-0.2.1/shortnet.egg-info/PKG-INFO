Metadata-Version: 2.1
Name: shortnet
Version: 0.2.1
Summary: URL shortnet in django
Home-page: https://github.com/pennlabs/shortnet
Author: Penn Labs
Author-email: admin@pennlabs.org
License: MIT
Project-URL: Changelog, https://github.com/pennlabs/shortnet/blob/master/CHANGELOG.md
Platform: UNKNOWN
Classifier: Framework :: Django
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Requires-Python: >=3.5
Description-Content-Type: text/markdown

# shortnet

[![CircleCI](https://circleci.com/gh/pennlabs/shortnet.svg?style=shield)](https://circleci.com/gh/pennlabs/shortnet)
[![Coverage Status](https://coveralls.io/repos/github/pennlabs/shortnet/badge.svg?branch=master)](https://coveralls.io/github/pennlabs/shortnet?branch=master)
[![PyPi Package](https://img.shields.io/pypi/v/shortnet.svg)](https://pypi.org/project/shortnet/)

Basic URL shortnet as a Django app.

To use:

1. Install using pip `pip install shortnet`
2. Include `shortnet.apps.shortnetConfig` to `INSTALLED_APPS` in your project's `settings.py`
3. Add the shortnet to `urls.py`.
    - Example: `path('s/', include('shortnet.urls', namespace='shortnet'))` will shorten URLs to `https://example.com/s/<ID>`.
4. `python manage.py migrate`
5. Either add in URL shortcuts manually through Admin, or add some hook in your project to call `shortnet.objects.get_or_create`.
The function takes in a long URL and returns a `Url` object which contains the full shortened url as `Url.shortened`, and the slug in `Url.short_id`.


